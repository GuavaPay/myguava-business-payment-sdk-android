openapi: 3.0.3
info:
  title: E-commerce Gateway API
  version: latest
servers:
  - url: https://cardium-cpg-dev.guavapay.com
    description: Dev external
  - url: http://cardium-cpg-dev-int.apps.ocp-dev.gps.local
    description: Dev internal
  - url: https://cardium-cpg-preprod.guavapay.com
    description: Preprod external
  - url: http://cardium-cpg-preprod-int.apps.ocp-dev.gps.local
    description: Preprod internal
  - url: https://api-pgw.guavapay.com
    description: Prod external
  - url: http://cardium-cpg-prod-int.apps.ocp-prod2.gps.local
    description: Prod internal
security: []
paths:
  /order:
    post:
      tags:
        - Order Processing
      summary: Order Creation
      description: |
        Creating an order.

        An order is registered for a specific merchant.

        Merchant identifier can be obtained from 2 fields:
        * In the request header `Merchant-ID` - merchant identifier that initiated the request from their software
        * In the request body `merchantId` - merchant identifier for which the order is registered via the user interface (for example: if an operator registers an order for a specific merchant via CMS)

        `merchantId` from request body, if present, takes precedence over the `Merchant-ID` from the request header

        The order expiration date is determined based on the data in the `expirationOptions` block. `expirationDate` field, if present, takes precedence over the `lifespanTimeoutSeconds` field. If none of these fields are passed, the order expiration date is determined based on system settings.

        The total amount of the order must be `0` for order with `SUBSCRIPTION` purpose.
      operationId: createOrder
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Merchant-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/Order-Correlation-ID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestOrder'
        required: true
      responses:
        '201':
          description: Order is created
          content:
            application/json:
              schema:
                type: object
                properties:
                  order:
                    $ref: '#/components/schemas/ServerResponseOrder'
        '400':
          description: |
            Invalid input data

            | Code | Message                                                      | 
            |------|--------------------------------------------------------------|
            | 07   | payerId is required if PAYMENT_CARD_BINDING is allowed       |
            | 26   | Correlation id must be unique                                |
            | 30   | recurrence.maxAmount must be not less than recurrence.amount |
            | 99   | Validation error                                             |

            `validations` block with invalid fields will be present for `Validation error` case.

            Validation table

            | Field                       | Error                                                        | 
            |-----------------------------|--------------------------------------------------------------|
            | Any field                   | Field is mandatory                                           |
            | Any field                   | Invalid value                                                |
            | expirationDate              | Expiration date cannot be in the past                        |
          content:
            application/json:
              schema:
                required:
                  - code
                  - message
                type: object
                properties:
                  code:
                    $ref: '#/components/schemas/UnsuccessResultCode'
                  message:
                    $ref: '#/components/schemas/UnsuccessResultMessage'
                  validations:
                    $ref: '#/components/schemas/Validations'
              example:
                code: '99'
                message: Validation error
                validations:
                  - field: referenceNumber
                    error: Field is mandatory
        '405':
          $ref: '#/components/responses/405'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
      callbacks:
        ORDER_STATE_CHANGED:
          '{$request.body#/callbackUrl}':
            post:
              summary: Callback for Order State Change
              operationId: callbackOrderStateChanged
              parameters:
                - $ref: '#/components/parameters/Webhook-Timestamp'
                - $ref: '#/components/parameters/Webhook-Signature'
                - name: Webhook-Event
                  in: header
                  description: Name of the callback event
                  schema:
                    type: string
                    description: Name of the callback event
                    enum:
                      - ORDER_STATE_CHANGED
                - name: Webhook-ID
                  in: header
                  description: Internal webhook identifier
                  schema:
                    $ref: '#/components/schemas/WebhookID'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        event:
                          type: string
                          description: Name of the callback event
                          enum:
                            - ORDER_STATE_CHANGED
                        order:
                          $ref: '#/components/schemas/ServerResponseOrder'
                        payment:
                          $ref: '#/components/schemas/Payment'
                        refunds:
                          type: array
                          items:
                            $ref: '#/components/schemas/Refund'
              responses:
                '200':
                  description: Merchant returns this code if it accepts the callback
                '400':
                  description: Merchant returns this code if it not accepts the callback
        SUBSEQUENT_PAYMENT_STATE_CHANGED:
          '{$request.body#/callbackUrl}':
            post:
              summary: Callback for Subsequent Payment State Change
              operationId: callbackSubsequentPaymentStateChanged
              parameters:
                - $ref: '#/components/parameters/Webhook-Timestamp'
                - $ref: '#/components/parameters/Webhook-Signature'
                - name: Webhook-Event
                  in: header
                  description: Name of the callback event
                  schema:
                    type: string
                    description: Name of the callback event
                    enum:
                      - SUBSEQUENT_PAYMENT_STATE_CHANGED
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        event:
                          type: string
                          description: Name of the callback event
                          enum:
                            - SUBSEQUENT_PAYMENT_STATE_CHANGED
                        order:
                          $ref: '#/components/schemas/ServerResponseOrder'
                        payment:
                          $ref: '#/components/schemas/Payment'
                        refunds:
                          type: array
                          items:
                            $ref: '#/components/schemas/Refund'
              responses:
                '200':
                  description: Merchant returns this code if it accepts the callback
                '400':
                  description: Merchant returns this code if it not accepts the callback
  /order/{orderId}/recurrence:
    put:
      summary: Update Order Recurrence Data
      description: |
        Updating recurrence properties for order.

        `startDate` is required if new schedule is present.
      tags:
        - Order Processing
      operationId: orderRecurrenceUpdate
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Merchant-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/orderId'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  $ref: '#/components/schemas/RecurrenceDescription'
                schedule:
                  $ref: '#/components/schemas/RecurrenceSchedule'
                startDate:
                  $ref: '#/components/schemas/RecurrenceStartDate'
                endDate:
                  $ref: '#/components/schemas/RecurrenceEndDate'
      responses:
        '200':
          description: Order recurrence data is updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  order:
                    $ref: '#/components/schemas/ServerResponseOrder'
        '400':
          description: |
            Use code 99 and "Validation error" message when invalid input data is present in request message

            `validations` block with invalid fields will be present for `Validation error` case.

            Validation table

            | Field     | Error                                     |
            |-----------|-------------------------------------------|
            | Any field | Field is mandatory                        |
            | Any field | Invalid value                             |
            | startDate | Field is mandatory if schedule is present |
          content:
            application/json:
              schema:
                required:
                  - code
                  - message
                type: object
                properties:
                  code:
                    $ref: '#/components/schemas/UnsuccessResultCode'
                  message:
                    $ref: '#/components/schemas/UnsuccessResultMessage'
                  validations:
                    $ref: '#/components/schemas/Validations'
              example:
                code: '99'
                message: Validation error
                validations:
                  - field: startDate
                    error: Field is mandatory if schedule is present
        '404':
          $ref: '#/components/responses/404_order'
        '405':
          $ref: '#/components/responses/405'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
  /order/{orderId}/recurrence/close:
    post:
      summary: Close Recurrence Order
      description: |
        Closing of a recurrence order.

        Only active recurrence orders can be closed.
      tags:
        - Order Processing
      operationId: closeRecurrenceOrder
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Merchant-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/orderId'
      responses:
        '204':
          description: Recurrence order recurrence is closed successfully
        '400':
          description: |
            Invalid input data

            | Code | Message                                        |
            |------|------------------------------------------------|
            | 08   | Recurrence order is not available for closing  |
            | 14   | Recurrence order is closed already             |
            | 15   | Non-recurrence order. Closing is not available |
          content:
            application/json:
              schema:
                required:
                  - code
                  - message
                type: object
                properties:
                  code:
                    $ref: '#/components/schemas/UnsuccessResultCode'
                  message:
                    $ref: '#/components/schemas/UnsuccessResultMessage'
              example:
                code: '08'
                message: Recurrence order is not available for closing
        '404':
          $ref: '#/components/responses/404_order'
        '405':
          $ref: '#/components/responses/405'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
  /order/{orderId}:
    get:
      tags:
        - Order Processing
      summary: Get Order Details
      description: |
        Provides information about:

        * Order identifiers
        * Order description
        * Order amount
        * Order status
        * Order expiration date
        * Payment page URL for order
        * Finish page for order
      operationId: getOrder
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Merchant-ID'
        - $ref: '#/components/parameters/Order-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/orderId'
        - $ref: '#/components/parameters/merchant-included'
        - $ref: '#/components/parameters/transactions-included'
        - $ref: '#/components/parameters/payment-requirements-included'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  order:
                    $ref: '#/components/schemas/ClientOrServerResponseOrder'
                  merchant:
                    $ref: '#/components/schemas/Merchant'
                  payment:
                    $ref: '#/components/schemas/Payment'
                  refunds:
                    type: array
                    items:
                      $ref: '#/components/schemas/Refund'
                  paymentRequirements:
                    type: object
                    properties:
                      threedsMethod:
                        $ref: '#/components/schemas/ThreeDSMethodRequirements'
                      threedsChallenge:
                        $ref: '#/components/schemas/ThreeDSChallengeRequirements'
                      threedsSdkCreateTransaction:
                        $ref: '#/components/schemas/ThreeDSSDKCreateTransactionRequirements'
                      payerAuthorization:
                        $ref: '#/components/schemas/OpenBankingAuthRequirements'
                      cryptocurrencyTransfer:
                        $ref: '#/components/schemas/CryptocurrencyRequirements'
                      payPalOrderApprove:
                        $ref: '#/components/schemas/PayPalRequirements'
                      finishPageRedirect:
                        $ref: '#/components/schemas/FinishPageRedirectRequirements'
        '404':
          $ref: '#/components/responses/404_order'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
  /order/by-correlation-id/{correlationId}:
    get:
      tags:
        - Order Processing
      summary: Get Order Details By Correlation ID
      description: |
        Provides information about:

        * Order identifiers
        * Order description
        * Order amount
        * Order status
        * Order expiration date
        * Payment page URL for order
        * Finish page for order
      operationId: getOrderByCorrelationId
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Merchant-ID'
        - $ref: '#/components/parameters/Order-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/orderCorrelationId'
        - $ref: '#/components/parameters/transactions-included'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  order:
                    $ref: '#/components/schemas/ClientOrServerResponseOrder'
                  payment:
                    $ref: '#/components/schemas/Payment'
                  refunds:
                    type: array
                    items:
                      $ref: '#/components/schemas/Refund'
        '404':
          $ref: '#/components/responses/404_order'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
  /cryptocurrency/exchange/supported:
    post:
      tags:
        - Order Processing
      summary: Determine Supported Cryptocurrency List
      description: Determination of a supported cryptocurrency list based on supported exchange between order and payment currencies.
      operationId: determineSupportedCryptocurrencyList
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Merchant-ID'
        - $ref: '#/components/parameters/Order-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
      requestBody:
        content:
          application/json:
            schema:
              required:
                - orderCurrency
                - paymentCurrencies
              type: object
              properties:
                orderCurrency:
                  $ref: '#/components/schemas/Currency'
                paymentCurrencies:
                  type: array
                  items:
                    $ref: '#/components/schemas/Currency'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - paymentCurrencies
                properties:
                  paymentCurrencies:
                    type: array
                    items:
                      $ref: '#/components/schemas/Currency'
        '400':
          description: |
            Invalid input data

            | Code | Message          | 
            |------|------------------|
            | 99   | Validation error |

            `validations` block with invalid fields will be present for `Validation error` case.

            Validation table

            | Field     | Error              | 
            |-----------|--------------------|
            | Any field | Field is mandatory |
            | Any field | Invalid value      |
          content:
            application/json:
              schema:
                required:
                  - code
                  - message
                type: object
                properties:
                  code:
                    $ref: '#/components/schemas/UnsuccessResultCode'
                  message:
                    $ref: '#/components/schemas/UnsuccessResultMessage'
                  validations:
                    $ref: '#/components/schemas/Validations'
              example:
                code: '99'
                message: Validation error
                validations:
                  - field: orderCurrency
                    error: Field is mandatory
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
  /cryptocurrency/exchange/rate:
    post:
      tags:
        - Order Processing
      summary: Calc Exchange Rate
      description: Calculating an exchange rate between order and payment currencies.
      operationId: calcExchangeRate
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Merchant-ID'
        - $ref: '#/components/parameters/Order-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
      requestBody:
        content:
          application/json:
            schema:
              required:
                - orderCurrency
                - paymentCurrency
              type: object
              properties:
                orderAmount:
                  allOf:
                    - $ref: '#/components/schemas/BaseAmount'
                    - description: Original amount of the order
                paymentCurrency:
                  $ref: '#/components/schemas/Currency'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - paymentCurrency
                properties:
                  from:
                    $ref: '#/components/schemas/Currency'
                  to:
                    $ref: '#/components/schemas/Currency'
                  rate:
                    $ref: '#/components/schemas/ExchangeRate'
                  orderAmount:
                    allOf:
                      - $ref: '#/components/schemas/ExtendedAmount'
                      - description: Original amount of the order
                  paymentAmount:
                    allOf:
                      - $ref: '#/components/schemas/ExtendedAmount'
                      - description: Amount required to make a payment
                  token:
                    $ref: '#/components/schemas/ExchangeToken'
        '400':
          description: |
            Invalid input data

            | Code | Message          | 
            |------|------------------|
            | 99   | Validation error |

            `validations` block with invalid fields will be present for `Validation error` case.

            Validation table

            | Field     | Error              | 
            |-----------|--------------------|
            | Any field | Field is mandatory |
            | Any field | Invalid value      |
          content:
            application/json:
              schema:
                required:
                  - code
                  - message
                type: object
                properties:
                  code:
                    $ref: '#/components/schemas/UnsuccessResultCode'
                  message:
                    $ref: '#/components/schemas/UnsuccessResultMessage'
                  validations:
                    $ref: '#/components/schemas/Validations'
              example:
                code: '99'
                message: Validation error
                validations:
                  - field: orderCurrency
                    error: Field is mandatory
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
  /applepay/merchant-session:
    post:
      summary: ApplePay Merchant Session Creation
      description: |
        Validating a merchant and creating a merchant session by Apple for the order.

        `domain` is conditional field. If `domain` is not present in request - domain name must be taken from `Origin` header.

        `merchantSession` object corresponds to the `MerchantSession` object specified by Apple.
      tags:
        - Order Processing
      operationId: applepayMerchantSessionCreation
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Merchant-ID'
        - $ref: '#/components/parameters/Order-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - validationURL
              properties:
                domain:
                  $ref: '#/components/schemas/DomainName'
                validationURL:
                  $ref: '#/components/schemas/ValidationURL'
      responses:
        '200':
          description: ApplePay merchant session is created
          content:
            application/json:
              schema:
                type: object
                properties:
                  merchantSession:
                    $ref: '#/components/schemas/MerchantSession'
        '400':
          description: |
            Use code 99 and "Validation error" message when invalid input data is present in request message

            `validations` block with invalid fields will be present for `Validation error` case.

            Validation table

            | Field           | Error                                                                | 
            |-----------------|----------------------------------------------------------------------|
            | Any field       | Field is mandatory                                                   |
            | Any field       | Invalid value                                                        |
          content:
            application/json:
              schema:
                required:
                  - code
                  - message
                type: object
                properties:
                  code:
                    $ref: '#/components/schemas/UnsuccessResultCode'
                  message:
                    $ref: '#/components/schemas/UnsuccessResultMessage'
                  validations:
                    $ref: '#/components/schemas/Validations'
              example:
                code: '99'
                message: Validation error
                validations:
                  - field: validationUrl
                    error: Field is mandatory
        '405':
          $ref: '#/components/responses/405'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
  /applepay/context:
    get:
      tags:
        - Order Processing
      summary: Get ApplePay Context
      description: |
        Provides information about:

        * Apple ID of merchant
        * Merchant name that displayed on ApplePay form
      operationId: getApplePayContext
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Merchant-ID'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  context:
                    $ref: '#/components/schemas/ApplePayContext'
        '404':
          $ref: '#/components/responses/404_merchant'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
  /googlepay/context:
    get:
      tags:
        - Order Processing
      summary: Get GooglePay Context
      description: |
        Provides information about:

        * Merchant ID in Google software
        * Merchant name that displayed on GooglePay form
        * Gateway details
      operationId: getGooglePayContext
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Merchant-ID'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  context:
                    $ref: '#/components/schemas/GooglePayContext'
        '404':
          $ref: '#/components/responses/404_merchant'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
  /click-to-pay/context:
    get:
      tags:
        - Order Processing
      summary: Get ClickToPay Context
      description: |
        Provides information about:

        * DPA data
        * Supported card schemes
      operationId: getClickToPayContext
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Merchant-ID'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  context:
                    $ref: '#/components/schemas/ClickToPayContext'
        '404':
          $ref: '#/components/responses/404_merchant'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
  /paypal/context:
    get:
      tags:
        - Order Processing
      summary: Get PayPal Context
      description: Provides information about PayPal client ID
      operationId: getPayPalContext
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Merchant-ID'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  context:
                    $ref: '#/components/schemas/PayPalContext'
        '404':
          $ref: '#/components/responses/404_merchant'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
  /card-range/resolve:
    post:
      tags:
        - Order Processing
      summary: Get Card Range Data
      description: |
        Provides information about card scheme by part of card number
      operationId: getCardRangeData
      deprecated: true
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Merchant-ID'
        - $ref: '#/components/parameters/Order-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                rangeIncludes:
                  $ref: '#/components/schemas/RangeIncludes'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  cardScheme:
                    $ref: '#/components/schemas/CardScheme'
                  product:
                    type: object
                    properties:
                      id:
                        $ref: '#/components/schemas/CardProductID'
                      brand:
                        $ref: '#/components/schemas/CardBrand'
                      category:
                        $ref: '#/components/schemas/CardProductCategory'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
  /card/resolve:
    post:
      tags:
        - Order Processing
      summary: Resolve Card Payment Eligibility
      description: |
        Provides information about card scheme by part of card number.  
        Provides the reason of making payment unavailability by the provided payment method if exists.
      operationId: resolveCardPaymentEligibility
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Merchant-ID'
        - $ref: '#/components/parameters/Order-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                panIncludes:
                  $ref: '#/components/schemas/RangeIncludes'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  cardScheme:
                    $ref: '#/components/schemas/CardScheme'
                  paymentLockReason:
                    $ref: '#/components/schemas/PaymentLockReason'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
  /yapily/institutions:
    get:
      tags:
        - Processing Rules Management
      summary: Get Yapily Institution List
      description: |
        Provides full information about institutions configured in Yapily.
      operationId: getYapilyInstitutionList
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Merchant-ID'
        - $ref: '#/components/parameters/Order-ID'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/institution-sort'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - pageNumber
                  - pageSize
                  - totalPages
                  - totalCount
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/YapilyInstitution'
                  pageNumber:
                    $ref: '#/components/schemas/PageNumber'
                  pageSize:
                    $ref: '#/components/schemas/PageSize'
                  totalPages:
                    $ref: '#/components/schemas/TotalPages'
                  totalCount:
                    $ref: '#/components/schemas/TotalCount'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
  /openbanking/institution:
    post:
      summary: Add Openbanking Institution
      description: |
        Add Openbanking Institution to List
      tags:
        - Processing Rules Management
      operationId: addOpenbankingInstitution
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - validationURL
              properties:
                id:
                  $ref: '#/components/schemas/InstitutionID'
                name:
                  $ref: '#/components/schemas/InstitutionName'
                countryCodes:
                  type: array
                  items:
                    $ref: '#/components/schemas/CountryAlpha2Code'
                features:
                  type: array
                  items:
                    $ref: '#/components/schemas/YapilyFeature'
                icon:
                  $ref: '#/components/schemas/InstitutionIcon'
                logo:
                  $ref: '#/components/schemas/InstitutionLogo'
      responses:
        '200':
          description: Institution is added
          content:
            application/json:
              schema:
                type: object
                properties:
                  institution:
                    $ref: '#/components/schemas/Institution'
        '400':
          description: |
            Use code 99 and "Validation error" message when invalid input data is present in request message

            `validations` block with invalid fields will be present for `Validation error` case.

            Validation table

            | Field           | Error                                                                | 
            |-----------------|----------------------------------------------------------------------|
            | Any field       | Field is mandatory                                                   |
            | Any field       | Invalid value                                                        |
          content:
            application/json:
              schema:
                required:
                  - code
                  - message
                type: object
                properties:
                  code:
                    $ref: '#/components/schemas/UnsuccessResultCode'
                  message:
                    $ref: '#/components/schemas/UnsuccessResultMessage'
                  validations:
                    $ref: '#/components/schemas/Validations'
              example:
                code: '99'
                message: Validation error
                validations:
                  - field: validationUrl
                    error: Field is mandatory
        '405':
          $ref: '#/components/responses/405'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
  /openbanking/institution/{institutionId}:
    delete:
      summary: Remove Openbanking Institution
      description: |
        Remove Openbanking Institution from List
      tags:
        - Processing Rules Management
      operationId: removeOpenbankingInstitution
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/institutionId'
      responses:
        '200':
          description: Institution is removed
        '405':
          $ref: '#/components/responses/405'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
  /openbanking/institutions:
    get:
      tags:
        - Order Processing
      summary: Get Open Banking Institution List
      description: |
        Provides information about:

        * Institution name
        * Institution identifier
        * Institution media info

        Institution list can be filtered by country.
      operationId: getInstitutionList
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Merchant-ID'
        - $ref: '#/components/parameters/Order-ID'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/institution-sort'
        - $ref: '#/components/parameters/filter-country'
        - $ref: '#/components/parameters/filter-currency'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - pageNumber
                  - pageSize
                  - totalPages
                  - totalCount
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Institution'
                  pageNumber:
                    $ref: '#/components/schemas/PageNumber'
                  pageSize:
                    $ref: '#/components/schemas/PageSize'
                  totalPages:
                    $ref: '#/components/schemas/TotalPages'
                  totalCount:
                    $ref: '#/components/schemas/TotalCount'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
  /order/{orderId}/payment:
    put:
      summary: Payment Pre-creation
      description: |
        This request is optional.

        Request is used to pre-save payment details for order and check eligibility of the card for 3DS 2.

        This request can be repeated an unlimited number of times until a `Payment Flow Execution` request is received.

        If 3DS Method must be performed for received card, response message will be generated with `202` status code and contain `threedsMethod` block in the `requirements` field.

        > In this case requestor must execute 3DS Method according to the EMV specification.

        If 3DS Method is not required for received card, response message will be generated with `204` status code.

        This request does not initiate 3DS authentication and subsequent financial authorization. `Payment Flow Execution` request must be performed for it. But the payment execution time will be decrease, because check eligibility of the card for 3DS 2 and 3DS Method will be already performed as a part of `Payment Pre-creation` request.

        If this request was completed, then it is not necessary to transfer payment data as part of the `Payment Flow Execution` request.
      tags:
        - Order Processing
      operationId: createPayment
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Merchant-ID'
        - $ref: '#/components/parameters/Order-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/orderId'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                paymentMethod:
                  oneOf:
                    - $ref: '#/components/schemas/PaymentCardMethod'
                    - $ref: '#/components/schemas/BindingMethod'
                  discriminator:
                    propertyName: type
                    mapping:
                      PAYMENT_CARD: '#/components/schemas/PaymentCardMethod'
                      PAYMENT_CARD_BINDING: '#/components/schemas/BindingMethod'
                deviceData:
                  allOf:
                    - $ref: '#/components/schemas/DeviceData'
                    - description: |
                        The data provided in this block is used for choosing 3D-Secure authentication flow.  
                        Payments with `browserData` will be authenticated by Browser-flow.  
                        Payments with `threedsSdkData` will be authenticated by Appiication-flow.  
                        By default (if `deviceData` is not present in the request message) authentication by Browser-flow will be started.  
                        For the case of multiple pre-create requests for one order authentication flow is selected based on first payment pre-creation request data. Replacing of authentication flow in subsequent requests is prohibited.  
                        > For example, two payment pre-creation request was sent. No `deviceData` is present in the first payment pre-creation request. `threedsSdkData` is present in the second payment pre-creation request. It will be cause an error when payment execution request will be received.
                payer:
                  type: object
                  properties:
                    firstName:
                      $ref: '#/components/schemas/NotMaskedPayerFirstName'
                    lastName:
                      $ref: '#/components/schemas/NotMaskedPayerLastName'
                    contactEmail:
                      $ref: '#/components/schemas/NotMaskedEmail'
                    contactPhone:
                      type: object
                      properties:
                        countryCode:
                          $ref: '#/components/schemas/PhoneCountryCode'
                        nationalNumber:
                          $ref: '#/components/schemas/NationalPhoneNumber'
                    address:
                      allOf:
                        - $ref: '#/components/schemas/BasePayerAddress'
                        - $ref: '#/components/schemas/NotMaskedPayerAddressData'
        required: true
      responses:
        '202':
          description: Payment details are saved for order. Requestor is required to take additional steps to complete the overall flow.
          content:
            application/json:
              schema:
                type: object
                properties:
                  requirements:
                    type: object
                    properties:
                      threedsMethod:
                        $ref: '#/components/schemas/ThreeDSMethodRequirements'
                      threedsSdkCreateTransaction:
                        $ref: '#/components/schemas/ThreeDSSDKCreateTransactionRequirements'
        '204':
          description: Payment details are saved for order
        '400':
          description: |
            Invalid input data

            | Code | Message                                                                | 
            |------|------------------------------------------------------------------------|
            | 01   | Order is not available for payment. The sequence of requests is broken |
            | 02   | Order is expired                                                       |
          content:
            application/json:
              schema:
                required:
                  - code
                  - message
                type: object
                properties:
                  code:
                    $ref: '#/components/schemas/UnsuccessResultCode'
                  message:
                    $ref: '#/components/schemas/UnsuccessResultMessage'
              example:
                code: '01'
                message: Order is not available for payment. The sequence of requests is broken
        '404':
          $ref: '#/components/responses/404_order'
        '405':
          $ref: '#/components/responses/405'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
  /order/{orderId}/payment/execute:
    post:
      summary: Payment Flow Execution
      description: |
        If eligibility for 3DS 2 check and 3DS Method have not yet been performed for incoming payment details as part of the "Payment Pre-creation" request, then they are performed as a part of this request. In this case, If 3DS Method must be performed, response message will be generated with `202` status code and contain `threedsMethod` block in the `requirements` field.

        > In this case requestor must execute 3DS Method according to the EMV specification. After that, the requestor must send a `Payment Flow Continuation` request to perform 3DS authentication and subsequent financial authorization.
         
        If eligibility for 3DS 2 check and 3DS Method have already been performed for incoming payment details as part of the `Payment Pre-creation` request or 3DS Method is not required as a part of this request, this request initiates 3DS authentication and subsequent financial authorization.

        * If frictionless flow was performed, response message will be generated with `200` status code. Result of the payment will be sent to the merchant in the callback.

        * If challenge flow is required, the response message will be generated with `202` status code and contain `threedsChallenge` block in the `requirements` field.

        > In this case requestor must execute 3DS Challenge Flow according to the EMV specification. Result of the payment will be sent to the merchant in the callback.

        * Next fields of  `deviceData` block must be present (by Payment Pre-creation or Payment Flow Execution requests) when the payment execute is started.

        > | Data                         |
        > |------------------------------|
        > | browserData.userAgent        |
        > | browserData.screenColorDepth |
        > | browserData.screenHeight     |
        > | browserData.screenWidth      |
        > | browserData.javaEnabled      |
        > | browserData.language         |
        > | browserData.timeZoneOffset   |
        > | browserData.acceptHeader     |
        > | ip                           |

        For open banking payments will be initiated authorization process. Payer must be redirected to corresponding URL received in `requirements` block.
      tags:
        - Order Processing
      operationId: executePayment
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Merchant-ID'
        - $ref: '#/components/parameters/Order-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/Transaction-Correlation-ID'
        - $ref: '#/components/parameters/orderId'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                paymentMethod:
                  oneOf:
                    - $ref: '#/components/schemas/PaymentCardMethod'
                    - $ref: '#/components/schemas/BindingMethod'
                    - $ref: '#/components/schemas/ApplePayMethod'
                    - $ref: '#/components/schemas/GooglePayMethod'
                    - $ref: '#/components/schemas/BankAccountMethod'
                    - $ref: '#/components/schemas/ClickToPayMethod'
                    - $ref: '#/components/schemas/CryptocurrencyMethod'
                    - $ref: '#/components/schemas/PayPalMethod'
                  discriminator:
                    propertyName: type
                    mapping:
                      PAYMENT_CARD: '#/components/schemas/PaymentCardMethod'
                      PAYMENT_CARD_BINDING: '#/components/schemas/BindingMethod'
                      APPLE_PAY: '#/components/schemas/ApplePayMethod'
                      GOOGLE_PAY: '#/components/schemas/GooglePayMethod'
                      BANK_ACCOUNT: '#/components/schemas/BankAccountMethod'
                      CLICK_TO_PAY: '#/components/schemas/ClickToPayMethod'
                      CRYPTOCURRENCY: '#/components/schemas/CryptocurrencyMethod'
                      PAYPAL_WALLET: '#/components/schemas/PayPalMethod'
                deviceData:
                  allOf:
                    - $ref: '#/components/schemas/DeviceData'
                    - description: |
                        The data provided in this block is used for choosing 3D-Secure authentication flow.  
                        Payments with `browserData` will be authenticated by Browser-flow.  
                        Payments with `threedsSdkData` will be authenticated by Appiication-flow.  
                        By default (if `deviceData` is not present in the request message) authentication by Browser-flow will be started.  
                        In the case of using payment pre-creation request, authentication flow already choosed on the previous step. Replacing of authentication flow is prohibited.  
                        > For example, `threedsSdkData` is present in the payment pre-creation request. `browserData` is present in the payment execution request. It will be cause an error.
                bindingCreationIsNeeded:
                  $ref: '#/components/schemas/BindingCreationIsNeeded'
                exchange:
                  type: object
                  required:
                    - amount
                    - token
                  properties:
                    amount:
                      allOf:
                        - $ref: '#/components/schemas/BaseAmount'
                        - description: Payment amount
                    token:
                      $ref: '#/components/schemas/ExchangeToken'
                payer:
                  type: object
                  description: |
                    `firstName`, `lastName`, and `address` fields must be present for payment when inputMode set to `MANUAL` or only available input mode is `MANUAL` for order with the `purpose` field in the `TRANSFER` value if not provided during order registration request.
                  properties:
                    inputMode:
                      $ref: '#/components/schemas/PayerDataInputMode'
                    firstName:
                      $ref: '#/components/schemas/NotMaskedPayerFirstName'
                    lastName:
                      $ref: '#/components/schemas/NotMaskedPayerLastName'
                    contactEmail:
                      $ref: '#/components/schemas/NotMaskedEmail'
                    contactPhone:
                      type: object
                      properties:
                        countryCode:
                          $ref: '#/components/schemas/PhoneCountryCode'
                        nationalNumber:
                          $ref: '#/components/schemas/NationalPhoneNumber'
                    address:
                      allOf:
                        - $ref: '#/components/schemas/BasePayerAddress'
                        - $ref: '#/components/schemas/NotMaskedPayerAddressData'
                challengeWindowSize:
                  $ref: '#/components/schemas/ChallengeWindowSize'
                priorityRedirectUrl:
                  allOf:
                    - $ref: '#/components/schemas/RedirectURL'
                    - description: Overrided result URL to which the customer is redirected to show payment attempt result
        required: true
      responses:
        '200':
          description: Payment is completed
          content:
            application/json:
              schema:
                type: object
                properties:
                  redirectUrl:
                    $ref: '#/components/schemas/RedirectURL'
        '202':
          description: Requestor is required to take additional steps to complete the overall flow.
          content:
            application/json:
              schema:
                type: object
                properties:
                  requirements:
                    type: object
                    properties:
                      threedsMethod:
                        $ref: '#/components/schemas/ThreeDSMethodRequirements'
                      threedsChallenge:
                        $ref: '#/components/schemas/ThreeDSChallengeRequirements'
                      threedsSdkCreateTransaction:
                        $ref: '#/components/schemas/ThreeDSSDKCreateTransactionRequirements'
                      payerAuthorization:
                        $ref: '#/components/schemas/OpenBankingAuthRequirements'
                      cryptocurrencyTransfer:
                        $ref: '#/components/schemas/CryptocurrencyRequirements'
                      payPalOrderApprove:
                        $ref: '#/components/schemas/PayPalRequirements'
        '400':
          description: |
            Invalid input data

            | Code | Message                                                                | 
            |------|------------------------------------------------------------------------|
            | 01   | Order is not available for payment. The sequence of requests is broken |
            | 02   | Order is expired                                                       |
            | 26   | Correlation id must be unique                                          |
            | 27   | Bad exchange token                                                     |
            | 32   | Authentication flow cannot be replaced                                 |
            | 99   | Validation error                                                       |

            `validations` block with invalid fields will be present for `Validation error` case.

            Validation table

            | Field              | Error                                                            | 
            |--------------------|------------------------------------------------------------------|
            | Any field          | Field is mandatory                                               |
            | Any field          | Invalid value                                                    |
            | deviceData         | deviceData must be present when paymentMethod is present         |
            | payer.lastName     | lastName must be present when payer inputMode in `MANUAL` value  |
            | payer.firstName    | firstName must be present when payer inputMode in `MANUAL` value |
            | payer.address      | address must be present when payer inputMode in `MANUAL` value   |
          content:
            application/json:
              schema:
                required:
                  - code
                  - message
                type: object
                properties:
                  code:
                    $ref: '#/components/schemas/UnsuccessResultCode'
                  message:
                    $ref: '#/components/schemas/UnsuccessResultMessage'
                  validations:
                    $ref: '#/components/schemas/Validations'
              example:
                code: '99'
                message: Validation error
                validations:
                  - field: deviceData
                    error: deviceData must be present when paymentMethod is present
        '404':
          $ref: '#/components/responses/404_order'
        '405':
          $ref: '#/components/responses/405'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
  /order/{orderId}/payment/continue:
    post:
      tags:
        - Order Processing
      summary: Payment Flow Continuation
      description: |
        For card payments, the request must be used if the `requirements` field was contain `threedsMethod` block in the `Payment Flow Execution` response message.

        This call initiates 3DS authentication and subsequent financial authorization.

        * If frictionless flow was performed, response message will be generated with `200` status code.

        * If challenge flow is required, the response message will be generated with `202` status code and contain `threedsChallenge` block in the `requirements` field.

        > In this case requestor must execute 3DS Challenge Flow according to the EMV specification.

        Result of the payment will be sent to the merchant in the callback.

        For open banking payments, the request must be used if the `requirements` field was contain `payerAuthorization` block in the `Payment Flow Execution` response message.
      operationId: continuePayment
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Merchant-ID'
        - $ref: '#/components/parameters/Order-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/orderId'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                payPalOrderApproveEvent:
                  $ref: '#/components/schemas/PayPalOrderApproveEvent'
                threedsSdkData:
                  description: |
                    Data required to perform for 3D-Secure authentication by Application-flow.
                  type: object
                  properties:
                    packedAuthenticationData:
                      $ref: '#/components/schemas/ThreeDSPackedAthenticationData'
      responses:
        '200':
          description: Payment is completed
          content:
            application/json:
              schema:
                type: object
                properties:
                  redirectUrl:
                    $ref: '#/components/schemas/RedirectURL'
        '202':
          description: Requestor is required to take additional steps to complete the overall flow.
          content:
            application/json:
              schema:
                type: object
                properties:
                  requirements:
                    type: object
                    properties:
                      threedsChallenge:
                        $ref: '#/components/schemas/ThreeDSChallengeRequirements'
        '204':
          description: Payment initiated
        '400':
          description: |
            Invalid input data

            | Code | Message                                                                | 
            |------|------------------------------------------------------------------------|
            | 01   | Order is not available for payment. The sequence of requests is broken |
            | 02   | Order is expired                                                       |
          content:
            application/json:
              schema:
                required:
                  - code
                  - message
                type: object
                properties:
                  code:
                    $ref: '#/components/schemas/UnsuccessResultCode'
                  message:
                    $ref: '#/components/schemas/UnsuccessResultMessage'
              example:
                code: '01'
                message: Order is not available for payment. The sequence of requests is broken
        '404':
          $ref: '#/components/responses/404_order'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
  /order/{orderId}/subsequent-payment:
    post:
      tags:
        - Order Processing
      summary: Subsequent Payment Execution
      description: |
        Subsequent payment for recurrence order
      operationId: subsequentPayment
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Merchant-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/Transaction-Correlation-ID'
        - $ref: '#/components/parameters/orderId'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  $ref: '#/components/schemas/RecurrenceDescription'
                referenceNumber:
                  allOf:
                    - $ref: '#/components/schemas/ReferenceNumber'
                    - description: Payment identifier in the merchant system
                amount:
                  allOf:
                    - $ref: '#/components/schemas/BaseAmount'
                    - description: Amount of recurrence payment
      responses:
        '200':
          description: Payment attempt is completed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/SuccessTransactionResult'
        '400':
          description: |
            Invalid input data

            | Code | Message                                                                | 
            |------|------------------------------------------------------------------------|
            | 01   | Order is not available for payment. The sequence of requests is broken |
            | 31   | amount must be not more than recurrence.maxAmount                      |
            | 20   | Subsequent payment is not allowed at the moment, try again later       |
            | 26   | Correlation id must be unique                                          |
            | 31   | amount must be not more than recurrence.maxAmount                      |
          content:
            application/json:
              schema:
                required:
                  - code
                  - message
                type: object
                properties:
                  code:
                    $ref: '#/components/schemas/UnsuccessResultCode'
                  message:
                    $ref: '#/components/schemas/UnsuccessResultMessage'
              example:
                code: '01'
                message: Order is not available for payment. The sequence of requests is broken
        '404':
          $ref: '#/components/responses/404_order'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
  /refund:
    post:
      summary: Refund Request Processing
      description: Refund by order correlation id.
      tags:
        - Order Processing
      operationId: refund
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Merchant-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
      requestBody:
        content:
          application/json:
            schema:
              required:
                - amount
              type: object
              properties:
                orderRequestCorrelationID:
                  allOf:
                    - $ref: '#/components/schemas/RequestCorrelationID'
                    - description: Correlation identifier which was generated for order creation message.
                reason:
                  $ref: '#/components/schemas/Reason'
                amount:
                  allOf:
                    - $ref: '#/components/schemas/BaseAmount'
                    - description: Refund amount
                items:
                  type: array
                  items:
                    $ref: '#/components/schemas/RequestItem'
        required: true
      responses:
        '200':
          description: Refund is completed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/SuccessTransactionResult'
        '400':
          description: |
            Invalid input data

            | Code | Message                                                     | 
            |------|-------------------------------------------------------------|
            | 04   | Already refunded                                            |
            | 06   | Original transaction is not found                           |
            | 10   | Original transaction is declined                            |
            | 22   | Refund request refused: concurrent reversal is detected     |
            | 24   | Refund request refused: specified payment still in progress |
            | 98   | Transaction is completed unsuccessfully                     |
            | 99   | Validation error                                            |

            `result` block with transaction result will be present for `Transaction is completed unsuccessfully` case.

            `validations` block with invalid fields will be present for `Validation error` case.

            Validation table

            | Field     | Error                                                              | 
            |-----------|--------------------------------------------------------------------|
            | Any field | Invalid value                                                      |
            | amount    | Refund amount cannot be more than not refunded amount of the order |
            | amount    | Refund currency must be equal to the order currency                |
          content:
            application/json:
              schema:
                required:
                  - code
                  - message
                type: object
                properties:
                  code:
                    $ref: '#/components/schemas/UnsuccessResultCode'
                  message:
                    $ref: '#/components/schemas/UnsuccessResultMessage'
                  result:
                    $ref: '#/components/schemas/UnsuccessTransactionResult'
                  validations:
                    $ref: '#/components/schemas/Validations'
              example:
                code: '98'
                message: Transaction is completed unsuccessfully
                result:
                  code: '51'
                  message: Not sufficient funds
        '404':
          $ref: '#/components/responses/404_order'
        '405':
          $ref: '#/components/responses/405'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
  /order/{orderId}/refund:
    post:
      summary: Order Refund Request Processing
      description: Refund for the order.
      tags:
        - Order Processing
      operationId: orderRefund
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Merchant-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/orderId'
      requestBody:
        content:
          application/json:
            schema:
              required:
                - amount
              type: object
              properties:
                referenceNumber:
                  allOf:
                    - $ref: '#/components/schemas/ReferenceNumber'
                    - description: Refund identifier in the merchant system
                reason:
                  $ref: '#/components/schemas/Reason'
                amount:
                  allOf:
                    - $ref: '#/components/schemas/BaseAmount'
                    - description: Refund amount
                items:
                  type: array
                  items:
                    $ref: '#/components/schemas/RequestItem'
        required: true
      responses:
        '200':
          description: Refund is completed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/SuccessTransactionResult'
        '400':
          description: |
            Invalid input data

            | Code | Message                                                     | 
            |------|-------------------------------------------------------------|
            | 04   | Already refunded                                            |
            | 06   | Original transaction is not found                           |
            | 10   | Original transaction is declined                            |
            | 22   | Refund request refused: concurrent reversal is detected     |
            | 24   | Refund request refused: specified payment still in progress |
            | 98   | Transaction is completed unsuccessfully                     |
            | 99   | Validation error                                            |

            `result` block with transaction result will be present for `Transaction is completed unsuccessfully` case.

            `validations` block with invalid fields will be present for `Validation error` case.

            Validation table

            | Field     | Error                                                              | 
            |-----------|--------------------------------------------------------------------|
            | Any field | Invalid value                                                      |
            | amount    | Refund amount cannot be more than not refunded amount of the order |
            | amount    | Refund currency must be equal to the order currency                |
          content:
            application/json:
              schema:
                required:
                  - code
                  - message
                type: object
                properties:
                  code:
                    $ref: '#/components/schemas/UnsuccessResultCode'
                  message:
                    $ref: '#/components/schemas/UnsuccessResultMessage'
                  result:
                    $ref: '#/components/schemas/UnsuccessTransactionResult'
                  validations:
                    $ref: '#/components/schemas/Validations'
              example:
                code: '98'
                message: Transaction is completed unsuccessfully
                result:
                  code: '51'
                  message: Not sufficient funds
        '404':
          $ref: '#/components/responses/404_order'
        '405':
          $ref: '#/components/responses/405'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
  /payment/{paymentId}/refund:
    post:
      summary: Payment Refund Request Processing
      description: Refund for the payment.
      tags:
        - Order Processing
      operationId: refundPayment
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Merchant-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/paymentId'
      requestBody:
        content:
          application/json:
            schema:
              required:
                - amount
              type: object
              properties:
                referenceNumber:
                  allOf:
                    - $ref: '#/components/schemas/ReferenceNumber'
                    - description: Refund identifier in the merchant system
                reason:
                  $ref: '#/components/schemas/Reason'
                amount:
                  allOf:
                    - $ref: '#/components/schemas/BaseAmount'
                    - description: Refund amount
                items:
                  type: array
                  items:
                    $ref: '#/components/schemas/RequestItem'
        required: true
      responses:
        '200':
          description: Refund attempt is completed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/SuccessTransactionResult'
        '400':
          description: |
            Invalid input data

            | Code | Message                                                     |
            |------|-------------------------------------------------------------|
            | 04   | Already refunded                                            |
            | 10   | Original transaction is declined                            |
            | 19   | Refund by recurrence order is not allowed                   |
            | 22   | Refund request refused: concurrent reversal is detected     |
            | 24   | Refund request refused: specified payment still in progress |
            | 98   | Transaction is completed unsuccessfully                     |
            | 99   | Validation error                                            |

            `result` block with transaction result will be present for `Transaction is completed unsuccessfully` case.

            `validations` block with invalid fields will be present for `Validation error` case.

            Validation table

            | Field     | Error                                                              | 
            |-----------|--------------------------------------------------------------------|
            | Any field | Invalid value                                                      |
            | amount    | Refund amount cannot be more than not refunded amount of the order |
            | amount    | Refund currency must be equal to the order currency                |
          content:
            application/json:
              schema:
                required:
                  - code
                  - message
                type: object
                properties:
                  code:
                    $ref: '#/components/schemas/UnsuccessResultCode'
                  message:
                    $ref: '#/components/schemas/UnsuccessResultMessage'
                  result:
                    $ref: '#/components/schemas/UnsuccessTransactionResult'
                  validations:
                    $ref: '#/components/schemas/Validations'
              example:
                code: '99'
                message: Validation error
                validations:
                  - field: amount
                    error: Refund amount cannot be more than not refunded amount of the order
        '404':
          $ref: '#/components/responses/404_payment'
        '405':
          $ref: '#/components/responses/405'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
  /order/{orderId}/reversal:
    post:
      summary: Order Reversal Request Processing
      description: Reversal of successed payment for order
      tags:
        - Order Processing
      operationId: orderReversal
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Merchant-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/orderId'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  $ref: '#/components/schemas/Reason'
        required: true
      responses:
        '200':
          description: |
            Successfully completed

            | Code | Message                               |
            |------|---------------------------------------|
            | 00   | Transaction is completed successfully |

            No reversal is needed

            | Code | Message                           |
            |------|-----------------------------------|
            | 06   | Original transaction is not found |
            | 10   | Original transaction is declined  |
            | 16   | Already reversed                  |
          content:
            application/json:
              schema:
                required:
                  - code
                  - message
                type: object
                properties:
                  code:
                    $ref: '#/components/schemas/SuccessResultCode'
                  message:
                    $ref: '#/components/schemas/SuccessResultMessage'
                  result:
                    $ref: '#/components/schemas/SuccessTransactionResult'
              example:
                code: '16'
                message: Original transaction is declined
        '400':
          description: |
            Invalid input data

            | Code | Message                                                                                | 
            |------|----------------------------------------------------------------------------------------|
            | 09   | There are successful refunds, reversal is not allowed                                  |
            | 17   | Too late, reversal is not allowed                                                      |
            | 18   | Reversal by recurrence order is not allowed                                            |
            | 21   | Reversal request refused: concurrent reversal is detected                              |
            | 23   | Reversal request refused: concurrent refund is detected                                |
            | 25   | Reversal request refused: specified payment is not available for reversal at this time |
            | 29   | Reversal of a payment by cryptocurrency is not allowed                                 |
            | 99   | Validation error                                                                       |

            `validations` block with invalid fields will be present for `Validation error` case.

            Validation table

            | Field  | Error         |
            |--------|---------------|
            | reason | Invalid value |
          content:
            application/json:
              schema:
                required:
                  - code
                  - message
                type: object
                properties:
                  code:
                    $ref: '#/components/schemas/UnsuccessResultCode'
                  message:
                    $ref: '#/components/schemas/UnsuccessResultMessage'
                  validations:
                    $ref: '#/components/schemas/Validations'
              example:
                code: '99'
                message: Validation error
                validations:
                  - field: reason
                    error: Invalid value
        '404':
          $ref: '#/components/responses/404_order'
        '405':
          $ref: '#/components/responses/405'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
  /reversal:
    post:
      summary: Reversal Request Processing
      description: |
        Reversal of the successed payment for an order.  
        The search for the original payment is performed by one of the identifiers:  
        * `transactionId` - identifier of the transaction received in a callback message when the order has been paid.
        * `requestCorrelationID` - the value of the `Correlation-ID` header of one of `Payment Flow Execution` or `Subsequent Payment Execution` requests which must be reversed.
      tags:
        - Order Processing
      operationId: reversal
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Merchant-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                transactionId:
                  $ref: '#/components/schemas/TransactionID'
                requestCorrelationID:
                  allOf:
                    - $ref: '#/components/schemas/RequestCorrelationID'
                    - description: Correlation identifier which was generated for original payment message.
                reason:
                  $ref: '#/components/schemas/Reason'
        required: true
      responses:
        '200':
          description: |
            Successfully completed

            | Code | Message                               |
            |------|---------------------------------------|
            | 00   | Transaction is completed successfully |

            No reversal is needed

            | Code | Message                           |
            |------|-----------------------------------|
            | 06   | Original transaction is not found |
            | 10   | Original transaction is declined  |
            | 16   | Already reversed                  |
          content:
            application/json:
              schema:
                required:
                  - code
                  - message
                type: object
                properties:
                  code:
                    $ref: '#/components/schemas/SuccessResultCode'
                  message:
                    $ref: '#/components/schemas/SuccessResultMessage'
                  result:
                    $ref: '#/components/schemas/SuccessTransactionResult'
              example:
                code: '16'
                message: Original transaction is declined
        '400':
          description: |
            Invalid input data

            | Code | Message                                                                                | 
            |------|----------------------------------------------------------------------------------------|
            | 09   | There are successful refunds, reversal is not allowed                                  |
            | 17   | Too late, reversal is not allowed                                                      |
            | 21   | Reversal request refused: concurrent reversal is detected                              |
            | 23   | Reversal request refused: concurrent refund is detected                                |
            | 25   | Reversal request refused: specified payment is not available for reversal at this time |
            | 29   | Reversal of a payment by cryptocurrency is not allowed                                 |
            | 99   | Validation error                                                                       |

            `validations` block with invalid fields will be present for `Validation error` case.

            Validation table

            | Field  | Error         |
            |--------|---------------|
            | reason | Invalid value |
          content:
            application/json:
              schema:
                required:
                  - code
                  - message
                type: object
                properties:
                  code:
                    $ref: '#/components/schemas/UnsuccessResultCode'
                  message:
                    $ref: '#/components/schemas/UnsuccessResultMessage'
                  validations:
                    $ref: '#/components/schemas/Validations'
              example:
                code: '99'
                message: Validation error
                validations:
                  - field: reason
                    error: Invalid value
        '405':
          $ref: '#/components/responses/405'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
  /order/{orderId}/cancel:
    post:
      summary: Cancel Order
      description: Cancel of order
      tags:
        - Order Processing
      operationId: cancelOrder
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Merchant-ID'
        - $ref: '#/components/parameters/Order-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/orderId'
      responses:
        '204':
          description: Order is cancelled successfully
        '400':
          description: |
            Invalid input data

            | Code | Message                                                        | 
            |------|----------------------------------------------------------------|
            | 11   | Already cancelled                                              |
            | 12   | Payment for order in progress, cancellation is not allowed     |
            | 13   | Payment attempt already completed, cancellation is not allowed |
          content:
            application/json:
              schema:
                required:
                  - code
                  - message
                type: object
                properties:
                  code:
                    $ref: '#/components/schemas/UnsuccessResultCode'
                  message:
                    $ref: '#/components/schemas/UnsuccessResultMessage'
                  validations:
                    $ref: '#/components/schemas/Validations'
              example:
                code: '11'
                message: Already cancelled
        '404':
          $ref: '#/components/responses/404_order'
        '405':
          $ref: '#/components/responses/405'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
  /payment-link:
    post:
      tags:
        - Order Processing
      summary: Payment Link Creation
      description: |
        Creating a payment link and corresponding order for it.

        The order expiration date is determined based on the data in the `expirationOptions` block. `expirationDate` field, if present, takes precedence over the `lifespanTimeoutSeconds` field. If none of these fields are passed, the order expiration date is determined based on system settings.
      operationId: createPaymentLink
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Merchant-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/API-Version'
      requestBody:
        content:
          application/json:
            schema:
              required:
                - totalAmount
              properties:
                name:
                  $ref: '#/components/schemas/PaymentLinkName'
                referenceNumber:
                  allOf:
                    - $ref: '#/components/schemas/ReferenceNumber'
                    - description: Order identifier in the merchant system
                merchantId:
                  $ref: '#/components/schemas/MerchantID'
                purpose:
                  $ref: '#/components/schemas/OrderPurpose'
                payerId:
                  $ref: '#/components/schemas/PayerID'
                redirectUrl:
                  $ref: '#/components/schemas/RedirectURL'
                description:
                  type: object
                  properties:
                    textDescription:
                      $ref: '#/components/schemas/OrderTextDescription'
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/RequestItem'
                shippingAddress:
                  $ref: '#/components/schemas/ShippingAddress'
                totalAmount:
                  allOf:
                    - $ref: '#/components/schemas/BaseAmount'
                    - description: Total amount for order
                expirationOptions:
                  $ref: '#/components/schemas/ExpirationOptions'
                callbackUrl:
                  $ref: '#/components/schemas/CallbackURL'
                requestorCustomData:
                  $ref: '#/components/schemas/RequestorCustomData'
        required: true
      responses:
        '201':
          description: Payment link is created
          content:
            application/json:
              schema:
                type: object
                properties:
                  paymentLink:
                    $ref: '#/components/schemas/PaymentLink'
                  order:
                    $ref: '#/components/schemas/ServerResponseOrder'
        '400':
          description: |
            Use code 99 and "Validation error" message when invalid input data is present in request message

            `validations` block with invalid fields will be present for `Validation error` case.

            Validation table

            | Field           | Error                                 | 
            |-----------------|---------------------------------------|
            | Any field       | Field is mandatory                    |
            | Any field       | Invalid value                         |
            | expirationDate  | Expiration date cannot be in the past |
          content:
            application/json:
              schema:
                required:
                  - code
                  - message
                type: object
                properties:
                  code:
                    $ref: '#/components/schemas/UnsuccessResultCode'
                  message:
                    $ref: '#/components/schemas/UnsuccessResultMessage'
                  validations:
                    $ref: '#/components/schemas/Validations'
              example:
                code: '99'
                message: Validation error
                validations:
                  - field: totalAmount
                    error: Field is mandatory
        '405':
          $ref: '#/components/responses/405'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
  /payment-link/{paymentLinkId}/cancel:
    post:
      tags:
        - Order Processing
      summary: Cancel Payment Link
      description: |
        Cancel of payment link
      operationId: cancelPaymentLink
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Merchant-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/paymentLinkId'
      responses:
        '204':
          description: Payment link is cancelled successfully
        '400':
          description: |
            Invalid input data

            | Code | Message                                                        | 
            |------|----------------------------------------------------------------|
            | 11   | Already cancelled                                              |
            | 12   | Payment for order in progress, cancellation is not allowed     |
            | 13   | Payment attempt already completed, cancellation is not allowed |
          content:
            application/json:
              schema:
                required:
                  - code
                  - message
                type: object
                properties:
                  code:
                    $ref: '#/components/schemas/UnsuccessResultCode'
                  message:
                    $ref: '#/components/schemas/UnsuccessResultMessage'
                  validations:
                    $ref: '#/components/schemas/Validations'
              example:
                code: '11'
                message: Already cancelled
        '404':
          $ref: '#/components/responses/404_order'
        '405':
          $ref: '#/components/responses/405'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
  /payment-link/{paymentLinkId}:
    get:
      tags:
        - Order Processing
      summary: Get Payment Link Details
      description: Provides information about payment link and corresponding order
      operationId: getPaymentLink
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Merchant-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/paymentLinkId'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  paymentLink:
                    $ref: '#/components/schemas/PaymentLink'
                  order:
                    $ref: '#/components/schemas/ClientOrServerResponseOrder'
                  payment:
                    $ref: '#/components/schemas/Payment'
                  refunds:
                    type: array
                    items:
                      $ref: '#/components/schemas/Refund'
        '404':
          $ref: '#/components/responses/404_payment_link'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
  /payment-links:
    get:
      tags:
        - Order Processing
      summary: Get Payment Link List
      description: Getting list of payment links.
      operationId: getPaymentLinkList
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Merchant-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/payment-link-sort'
        - $ref: '#/components/parameters/filter-payment-link-id'
        - $ref: '#/components/parameters/filter-merchant-id'
        - $ref: '#/components/parameters/filter-payment-link-name'
        - $ref: '#/components/parameters/filter-order-status'
        - $ref: '#/components/parameters/filter-payment-link-date-from'
        - $ref: '#/components/parameters/filter-payment-link-date-to'
        - $ref: '#/components/parameters/filter-order-min-amount'
        - $ref: '#/components/parameters/filter-order-max-amount'
        - $ref: '#/components/parameters/filter-currency'
        - $ref: '#/components/parameters/filter-rrn'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - pageNumber
                  - pageSize
                  - totalPages
                  - totalCount
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/PaymentLinkList'
                  pageNumber:
                    $ref: '#/components/schemas/PageNumber'
                  pageSize:
                    $ref: '#/components/schemas/PageSize'
                  totalPages:
                    $ref: '#/components/schemas/TotalPages'
                  totalCount:
                    $ref: '#/components/schemas/TotalCount'
        '404':
          $ref: '#/components/responses/404_payment_link'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
  /profile:
    post:
      summary: Processing Profile Creation
      description: Creating a processing profile
      tags:
        - Processing Rules Management
      operationId: profileCreation
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Merchant-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GlobalProcessingProfileRequest'
        required: true
      responses:
        '201':
          description: Processing profile is created
          content:
            application/json:
              schema:
                type: object
                properties:
                  profile:
                    $ref: '#/components/schemas/GlobalProcessingProfileResponse'
        '400':
          description: |
            Invalid input data

            | Code | Message          | 
            |------|------------------|
            | 05   | Already reversed |
            | 99   | Validation error |

            `validations` block with invalid fields will be present for `Validation error` case.

            Validation table

            | Field  | Error         |
            |--------|---------------|
            | reason | Invalid value |
          content:
            application/json:
              schema:
                required:
                  - code
                  - message
                type: object
                properties:
                  code:
                    $ref: '#/components/schemas/UnsuccessResultCode'
                  message:
                    $ref: '#/components/schemas/UnsuccessResultMessage'
                  validations:
                    $ref: '#/components/schemas/Validations'
              example:
                code: '99'
                message: Validation error
                validations:
                  - field: reason
                    error: Invalid value
        '404':
          $ref: '#/components/responses/404_profile'
        '405':
          $ref: '#/components/responses/405'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
  /profile/{profileId}:
    put:
      summary: Updating a Processing Profile
      description: Updating a Processing Profile
      tags:
        - Processing Rules Management
      operationId: profileUpdate
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Merchant-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/profileId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GlobalProcessingProfileRequest'
        required: true
      responses:
        '200':
          description: Processing profile is created
          content:
            application/json:
              schema:
                type: object
                properties:
                  profile:
                    $ref: '#/components/schemas/GlobalProcessingProfileResponse'
        '400':
          description: |
            Invalid input data

            | Code | Message          | 
            |------|------------------|
            | 05   | Already reversed |
            | 99   | Validation error |

            `validations` block with invalid fields will be present for `Validation error` case.

            Validation table

            | Field  | Error         |
            |--------|---------------|
            | reason | Invalid value |
          content:
            application/json:
              schema:
                required:
                  - code
                  - message
                type: object
                properties:
                  code:
                    $ref: '#/components/schemas/UnsuccessResultCode'
                  message:
                    $ref: '#/components/schemas/UnsuccessResultMessage'
                  validations:
                    $ref: '#/components/schemas/Validations'
              example:
                code: '99'
                message: Validation error
                validations:
                  - field: reason
                    error: Invalid value
        '404':
          $ref: '#/components/responses/404_profile'
        '405':
          $ref: '#/components/responses/405'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
    get:
      tags:
        - Processing Rules Management
      summary: Get Processing Profile Details
      description: Provides full information about a processing profile
      operationId: getProfile
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/profileId'
        - $ref: '#/components/parameters/profile-config-history-included'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  profile:
                    $ref: '#/components/schemas/GlobalProcessingProfileResponse'
        '404':
          $ref: '#/components/responses/404_profile'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
  /applepay/pseudo-psp/config:
    put:
      tags:
        - Processing Rules Management
      summary: Set ApplePay Pseudo PSP Config
      description: |
        Setting of a ApplePay pseudo PSP config.
      operationId: setApplePayPseudoPspConfig
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
      requestBody:
        content:
          application/json:
            schema:
              required:
                - defaultAppleMerchantId
              type: object
              properties:
                tenantId:
                  $ref: '#/components/schemas/TenantID'
                defaultAppleMerchantId:
                  $ref: '#/components/schemas/GoogleMerchantID'
        required: true
      responses:
        '200':
          description: ApplePay pseudo PSP config is applied
          content:
            application/json:
              schema:
                type: object
                required:
                  - config
                properties:
                  config:
                    $ref: '#/components/schemas/ApplePayPseudoPspConfig'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
    get:
      tags:
        - Processing Rules Management
      summary: Get ApplePay Pseudo PSP Config
      description: |
        Getting dtailed information about a ApplePay pseudo PSP config.
      operationId: getApplePayPseudoPspConfig
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - config
                properties:
                  config:
                    $ref: '#/components/schemas/ApplePayPseudoPspConfig'
        '404':
          $ref: '#/components/responses/404_applepay_pseudo_psp_config'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
  /applepay/pseudo-psp/csr:
    post:
      summary: ApplePay Certificate Signing Request for Pseudo PSP Creation
      description: |
        Creates a Pseudo PSP's CSR for ApplePay payment processing or identity certificate issuing.
      tags:
        - Processing Rules Management
      operationId: createPseudoPspApplePayCsr
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
      requestBody:
        content:
          application/json:
            schema:
              required:
                - name
                - certificateType
                - subjectInfo
              type: object
              properties:
                name:
                  $ref: '#/components/schemas/ApplePayCSRName'
                tenantId:
                  $ref: '#/components/schemas/TenantID'
                certificateType:
                  $ref: '#/components/schemas/ApplePayCertificateType'
                subjectInfo:
                  $ref: '#/components/schemas/ApplePayCSRSubjectInfo'
        required: true
      responses:
        '201':
          description: CSR is created
          content:
            application/json:
              schema:
                type: object
                properties:
                  csr:
                    $ref: '#/components/schemas/ApplePayCSR'
        '400':
          description: |
            Use code 99 and "Validation error" message when invalid input data is present in request message

            `validations` block with invalid fields will be present for `Validation error` case.

            Validation table

            | Field     | Error              |
            |-----------|--------------------|
            | Any field | Field is mandatory |
            | Any field | Invalid value      |
          content:
            application/json:
              schema:
                required:
                  - code
                  - message
                type: object
                properties:
                  code:
                    $ref: '#/components/schemas/UnsuccessResultCode'
                  message:
                    $ref: '#/components/schemas/UnsuccessResultMessage'
                  validations:
                    $ref: '#/components/schemas/Validations'
              example:
                code: '99'
                message: Validation error
                validations:
                  - field: certificateType
                    error: Field is mandatory
        '405':
          $ref: '#/components/responses/405'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
  /applepay/pseudo-psp/csrs:
    get:
      summary: Get ApplePay Certificate Signing Request List for Pseudo PSP
      description: |
        Getting a list of Pseudo PSP's CSR for ApplePay payment processing or identity certificate issuing.
      tags:
        - Processing Rules Management
      operationId: getPseudoPspApplePayCsrList
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/applepay-csr-sort'
        - $ref: '#/components/parameters/filter-applepay-csr-id'
        - $ref: '#/components/parameters/filter-applepay-csr-name'
        - $ref: '#/components/parameters/filter-applepay-certificate-type'
        - $ref: '#/components/parameters/filter-tenant-id'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - pageNumber
                  - pageSize
                  - totalPages
                  - totalCount
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ApplePayCSRInList'
                  pageNumber:
                    $ref: '#/components/schemas/PageNumber'
                  pageSize:
                    $ref: '#/components/schemas/PageSize'
                  totalPages:
                    $ref: '#/components/schemas/TotalPages'
                  totalCount:
                    $ref: '#/components/schemas/TotalCount'
        '404':
          $ref: '#/components/responses/404_csr'
        '405':
          $ref: '#/components/responses/405'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
  /applepay/pseudo-psp/csr/{csrId}:
    get:
      summary: Get ApplePay Certificate Signing Request for Pseudo PSP Details
      description: |
        Getting a Pseudo PSP's CSR for ApplePay payment processing or identity certificate issuing details.
      tags:
        - Processing Rules Management
      operationId: getPseudoPspApplePayCsr
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/applepayCsrId'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  csr:
                    $ref: '#/components/schemas/ApplePayCSR'
        '404':
          $ref: '#/components/responses/404_csr'
        '405':
          $ref: '#/components/responses/405'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
    delete:
      summary: Deleting an ApplePay Certificate Signing Request for Pseudo PSP
      description: |
        Deletes a Pseudo PSP's CSR for ApplePay payment processing or identity certificate issuing.
      tags:
        - Processing Rules Management
      operationId: deletePseudoPspApplePayCsr
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/applepayCsrId'
      responses:
        '204':
          description: CSR is deleted
        '404':
          $ref: '#/components/responses/404_csr'
        '405':
          $ref: '#/components/responses/405'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
  /applepay/pseudo-psp/csr/{csrId}/certificate:
    post:
      summary: Upload ApplePay Signed Certificate for Pseudo PSP
      description: |
        Uploads a signed by ApplePay payment processing or identity certificate for the Pseudo PSP's CSR.
      tags:
        - Processing Rules Management
      operationId: uploadPseudoPspApplePayCertificate
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/applepayCsrId'
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - value
              properties:
                tenantId:
                  $ref: '#/components/schemas/TenantID'
                value:
                  $ref: '#/components/schemas/BinaryCertificate'
        required: true
      responses:
        '200':
          description: Certificate is uploaded successfully
          content:
            application/json:
              schema:
                type: object
                required:
                  - certificateId
                properties:
                  certificateId:
                    $ref: '#/components/schemas/ApplePayCertificateId'
        '400':
          description: |
            Invalid input data

            | Code | Message                              | 
            |------|--------------------------------------|
            | 18   | Certificate is not compliant to CSR  |

            Use code 99 and "Validation error" message when invalid input data is present in request message

            `validations` block with invalid fields will be present for `Validation error` case.

            Validation table

            | Field     | Error              |
            |-----------|--------------------|
            | Any field | Field is mandatory |
            | Any field | Invalid value      |
          content:
            application/json:
              schema:
                required:
                  - code
                  - message
                type: object
                properties:
                  code:
                    $ref: '#/components/schemas/UnsuccessResultCode'
                  message:
                    $ref: '#/components/schemas/UnsuccessResultMessage'
                  validations:
                    $ref: '#/components/schemas/Validations'
              example:
                code: '99'
                message: Validation error
                validations:
                  - field: value
                    error: Field is mandatory
        '404':
          $ref: '#/components/responses/404_csr'
        '405':
          $ref: '#/components/responses/405'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
  /applepay/pseudo-psp/processing-certificate:
    post:
      summary: Upload ApplePay Payment Processing Private Key with Certificate for Pseudo PSP
      description: |
        Uploads the Pseudo PSP's self generated private key and corresponding signed by ApplePay payment processing certificate.
      tags:
        - Processing Rules Management
      operationId: uploadPseudoPspApplePayPaymentProcessingCertificate
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - value
                - privateKey
              properties:
                tenantId:
                  $ref: '#/components/schemas/TenantID'
                name:
                  $ref: '#/components/schemas/ApplePayCertificateName'
                privateKey:
                  $ref: '#/components/schemas/BinaryKey'
                value:
                  $ref: '#/components/schemas/BinaryCertificate'
        required: true
      responses:
        '200':
          description: Certificate is uploaded successfully
          content:
            application/json:
              schema:
                type: object
                required:
                  - certificateId
                properties:
                  certificateId:
                    $ref: '#/components/schemas/ApplePayCertificateId'
        '400':
          description: |
            Invalid input data

            Use code 99 and "Validation error" message when invalid input data is present in request message

            `validations` block with invalid fields will be present for `Validation error` case.

            Validation table

            | Field     | Error              |
            |-----------|--------------------|
            | Any field | Field is mandatory |
            | Any field | Invalid value      |
          content:
            application/json:
              schema:
                required:
                  - code
                  - message
                type: object
                properties:
                  code:
                    $ref: '#/components/schemas/UnsuccessResultCode'
                  message:
                    $ref: '#/components/schemas/UnsuccessResultMessage'
                  validations:
                    $ref: '#/components/schemas/Validations'
              example:
                code: '99'
                message: Validation error
                validations:
                  - field: value
                    error: Field is mandatory
        '405':
          $ref: '#/components/responses/405'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
  /applepay/pseudo-psp/processing-certificates:
    get:
      summary: Get ApplePay Payment Processing Certificate List for Pseudo PSP
      description: |
        Getting an Pseudo PSP's ApplePay payment processing certificate list.
      tags:
        - Processing Rules Management
      operationId: getPseudoPspApplePayProcessingCertificateList
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/applepay-processing-certificate-sort'
        - $ref: '#/components/parameters/filter-applepay-processing-certificate-id'
        - $ref: '#/components/parameters/filter-applepay-processing-certificate-activity'
        - $ref: '#/components/parameters/filter-applepay-processing-certificate-creation-date-from'
        - $ref: '#/components/parameters/filter-applepay-processing-certificate-creation-date-to'
        - $ref: '#/components/parameters/filter-applepay-processing-certificate-expiry-date-from'
        - $ref: '#/components/parameters/filter-applepay-processing-certificate-expiry-date-to'
        - $ref: '#/components/parameters/filter-tenant-id'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - pageNumber
                  - pageSize
                  - totalPages
                  - totalCount
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ApplePayProcessingCertificateInList'
                  pageNumber:
                    $ref: '#/components/schemas/PageNumber'
                  pageSize:
                    $ref: '#/components/schemas/PageSize'
                  totalPages:
                    $ref: '#/components/schemas/TotalPages'
                  totalCount:
                    $ref: '#/components/schemas/TotalCount'
        '404':
          $ref: '#/components/responses/404_applepay_processing_certificate'
        '405':
          $ref: '#/components/responses/405'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
  /applepay/pseudo-psp/identity-certificate:
    post:
      summary: Upload ApplePay Identity Private Key with Certificate for Pseudo PSP
      description: |
        Uploads the Pseudo PSP's self generated private key and corresponding signed by Apple identity certificate.
      tags:
        - Processing Rules Management
      operationId: uploadPseudoPspApplePayIdentityCertificate
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - value
                - privateKey
              properties:
                tenantId:
                  $ref: '#/components/schemas/TenantID'
                privateKey:
                  $ref: '#/components/schemas/BinaryKey'
                value:
                  $ref: '#/components/schemas/BinaryCertificate'
        required: true
      responses:
        '204':
          description: Certificate is uploaded successfully
        '400':
          description: |
            Invalid input data

            Use code 99 and "Validation error" message when invalid input data is present in request message

            `validations` block with invalid fields will be present for `Validation error` case.

            Validation table

            | Field     | Error              |
            |-----------|--------------------|
            | Any field | Field is mandatory |
            | Any field | Invalid value      |
          content:
            application/json:
              schema:
                required:
                  - code
                  - message
                type: object
                properties:
                  code:
                    $ref: '#/components/schemas/UnsuccessResultCode'
                  message:
                    $ref: '#/components/schemas/UnsuccessResultMessage'
                  validations:
                    $ref: '#/components/schemas/Validations'
              example:
                code: '99'
                message: Validation error
                validations:
                  - field: value
                    error: Field is mandatory
        '405':
          $ref: '#/components/responses/405'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
    get:
      summary: Get ApplePay Identity Certificate Details for Pseudo PSP
      description: |
        Getting an Pseudo PSP's ApplePay identity certificate details.
      tags:
        - Processing Rules Management
      operationId: getPseudoPspApplePayIdentityCertificate
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  identityCertificate:
                    $ref: '#/components/schemas/ApplePayIdentityCertificate'
        '404':
          $ref: '#/components/responses/404_applepay_identity_certificate'
        '405':
          $ref: '#/components/responses/405'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
  /googlepay/global-config:
    put:
      tags:
        - Processing Rules Management
      summary: Set GooglePay Global Config
      description: |
        Setting of a GooglePay global config.
      operationId: setGooglePayGlobalConfig
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
      requestBody:
        content:
          application/json:
            schema:
              required:
                - id
                - name
              type: object
              properties:
                defaultGoogleMerchantId:
                  $ref: '#/components/schemas/GoogleMerchantID'
                gateway:
                  $ref: '#/components/schemas/GoogleGateway'
        required: true
      responses:
        '200':
          description: GooglePay global config is applied
          content:
            application/json:
              schema:
                type: object
                required:
                  - globalConfig
                properties:
                  globalConfig:
                    $ref: '#/components/schemas/GooglePayGlobalConfig'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
    get:
      tags:
        - Processing Rules Management
      summary: Get GooglePay Global Config Details
      description: |
        Getting dtailed information about a GooglePay global config.
      operationId: getGooglePayGlobalConfig
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - globalConfig
                properties:
                  globalConfig:
                    $ref: '#/components/schemas/GooglePayGlobalConfig'
        '404':
          $ref: '#/components/responses/404_googlepay_global_config'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
  /googlepay/token-decryption-key:
    post:
      tags:
        - Processing Rules Management
      summary: Upload Google Token Decryption Key
      description: |
        Uploading of an GooglePay token decryption key pair.
      operationId: uploadGooglePayTokenDecryptionKey
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - name
                - expirationDate
                - privateKey
              properties:
                tenantId:
                  $ref: '#/components/schemas/TenantID'
                name:
                  $ref: '#/components/schemas/GoogleTokenDecryptionKeyName'
                expirationDate:
                  $ref: '#/components/schemas/GoogleTokenDecryptionKeyExpirationDate'
                publicKey:
                  $ref: '#/components/schemas/GoogleTokenDecryptionPublicKey'
                privateKey:
                  $ref: '#/components/schemas/GoogleTokenDecryptionPrivateKey'
        required: true
      responses:
        '200':
          description: GooglePay global config is applied
          content:
            application/json:
              schema:
                type: object
                required:
                  - tokenDecryptionKey
                properties:
                  tokenDecryptionKey:
                    $ref: '#/components/schemas/GooglePayTokenDecryptionKey'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
  /click-to-pay/global-config:
    put:
      tags:
        - Processing Rules Management
      summary: Set ClickToPay Global Config Details
      description: |
        Setting of a ClickToPay global config.
      operationId: setClickToPayGlobalConfig
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
      requestBody:
        content:
          application/json:
            schema:
              required:
                - organizationId
                - supportedDynamicDataTypes
              type: object
              properties:
                organizationId:
                  $ref: '#/components/schemas/ClickToPayOrganizationID'
                supportedDynamicDataTypes:
                  type: array
                  items:
                    $ref: '#/components/schemas/ClickToPayDynamicDataType'
      responses:
        '200':
          description: ClickToPay global config is applied
          content:
            application/json:
              schema:
                type: object
                required:
                  - globalConfig
                properties:
                  globalConfig:
                    $ref: '#/components/schemas/ClickToPayGlobalConfig'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
    get:
      tags:
        - Processing Rules Management
      summary: Get ClickToPay Global Config Details
      description: |
        Getting dtailed information about a GooglePay global config.
      operationId: getClickToPayGlobalConfig
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/disabled-certificates-included'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - globalConfig
                properties:
                  globalConfig:
                    $ref: '#/components/schemas/ClickToPayGlobalConfig'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
  /click-to-pay/signing-certificate:
    post:
      tags:
        - Processing Rules Management
      summary: Upload ClickToPay Signing Certificate
      description: |
        Uploading of the ClickToPay signing certificate.
      operationId: uploadClickToPaySigningCertificate
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - name
                - creationDate
                - expirationDate
                - consumerKey
                - file
                - password
              properties:
                tenantId:
                  $ref: '#/components/schemas/TenantID'
                name:
                  $ref: '#/components/schemas/MasterCardCertificateName'
                creationDate:
                  $ref: '#/components/schemas/MasterCardCertificateCreationDate'
                expirationDate:
                  $ref: '#/components/schemas/MasterCardCertificateExpirationDate'
                consumerKey:
                  $ref: '#/components/schemas/MasterCardConsumerKey'
                file:
                  $ref: '#/components/schemas/MasterCardBinaryCertificate'
                password:
                  $ref: '#/components/schemas/MasterCardKeyPassword'
      responses:
        '200':
          description: Certificate is uploaded successfully
          content:
            application/json:
              schema:
                type: object
                required:
                  - signingCertificate
                properties:
                  signingCertificate:
                    $ref: '#/components/schemas/MasterCardSigningCertificate'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
  /click-to-pay/decryption-certificate:
    post:
      tags:
        - Processing Rules Management
      summary: Upload ClickToPay Decryption Certificate
      description: |
        Uploading of the ClickToPay decryption certificate.
      operationId: uploadClickToPayDecryptionCertificate
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - name
                - creationDate
                - expirationDate
                - consumerKey
                - file
                - password
              properties:
                tenantId:
                  $ref: '#/components/schemas/TenantID'
                name:
                  $ref: '#/components/schemas/MasterCardCertificateName'
                keyAlias:
                  $ref: '#/components/schemas/ClickToPayDecryptionKeyAlias'
                creationDate:
                  $ref: '#/components/schemas/MasterCardCertificateCreationDate'
                expirationDate:
                  $ref: '#/components/schemas/MasterCardCertificateExpirationDate'
                file:
                  $ref: '#/components/schemas/MasterCardBinaryCertificate'
                password:
                  $ref: '#/components/schemas/MasterCardKeyPassword'
      responses:
        '200':
          description: Certificate is uploaded successfully
          content:
            application/json:
              schema:
                type: object
                required:
                  - decryptionCertificate
                properties:
                  decryptionCertificate:
                    $ref: '#/components/schemas/ClickToPayDecryptionCertificate'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
  /click-to-pay/decryption-certificate/{decryptionCertificateId}:
    delete:
      tags:
        - Processing Rules Management
      summary: Delete ClickToPay Decryption Certificate
      description: |
        Deleting of the ClickToPay decryption certificate.
      operationId: deleteClickToPayDecryptionCertificate
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/decryptionCertificateId'
      responses:
        '204':
          description: Certificate is deleted successfully
        '404':
          $ref: '#/components/responses/404_clicktopay_decryption_certificate'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
  /paypal/global-config:
    put:
      tags:
        - Processing Rules Management
      summary: Set PayPay Global Config
      description: |
        Setting of a PayPal global config.
      operationId: setPayPalGlobalConfig
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayPalGlobalConfig'
        required: true
      responses:
        '200':
          description: PayPal global config is applied
          content:
            application/json:
              schema:
                type: object
                required:
                  - globalConfig
                properties:
                  globalConfig:
                    $ref: '#/components/schemas/PayPalGlobalConfig'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
  /abu/global-config:
    put:
      tags:
        - MasterCard Account Billing Updater Management
      summary: Set ABU Global Config Details
      description: |
        Setting of the MasterCard Account Billing Updater global config.
      operationId: setAbuGlobalConfig
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
      requestBody:
        content:
          application/json:
            schema:
              required:
                - ica
                - endpoint
              type: object
              properties:
                ica:
                  $ref: '#/components/schemas/MasterCardICA'
                endpoint:
                  $ref: '#/components/schemas/MasterCardRoutingEndpoint'
      responses:
        '200':
          description: ABU global config is applied
          content:
            application/json:
              schema:
                type: object
                required:
                  - globalConfig
                properties:
                  globalConfig:
                    $ref: '#/components/schemas/ABUGlobalConfig'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
    get:
      tags:
        - MasterCard Account Billing Updater Management
      summary: Get ABU Global Config Details
      description: |
        Getting of the MasterCard Account Billing Updater global config.
      operationId: getAbuGlobalConfig
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - globalConfig
                properties:
                  globalConfig:
                    $ref: '#/components/schemas/ABUGlobalConfig'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
  /abu/signing-certificate:
    post:
      tags:
        - MasterCard Account Billing Updater Management
      summary: Upload ABU Signing Certificate
      description: |
        Uploading of the MasterCard Account Billing Updater signing certificate.
      operationId: uploadAbuSigningCertificate
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - name
                - creationDate
                - expirationDate
                - consumerKey
                - file
                - password
              properties:
                tenantId:
                  $ref: '#/components/schemas/TenantID'
                name:
                  $ref: '#/components/schemas/MasterCardCertificateName'
                creationDate:
                  $ref: '#/components/schemas/MasterCardCertificateCreationDate'
                expirationDate:
                  $ref: '#/components/schemas/MasterCardCertificateExpirationDate'
                consumerKey:
                  $ref: '#/components/schemas/MasterCardConsumerKey'
                file:
                  $ref: '#/components/schemas/MasterCardBinaryCertificate'
                password:
                  $ref: '#/components/schemas/MasterCardKeyPassword'
      responses:
        '200':
          description: Certificate is uploaded successfully
          content:
            application/json:
              schema:
                type: object
                required:
                  - signingCertificate
                properties:
                  signingCertificate:
                    $ref: '#/components/schemas/MasterCardSigningCertificate'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
  /abu/registration-queue/merchants:
    get:
      tags:
        - MasterCard Account Billing Updater Management
      summary: Get ABU Merchant Registration Queue
      description: |
        Getting merchants in the MasterCard Account Billing Updater registration queue.
      operationId: getAbuMerchantRegistrationQueue
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/abu-merchant-registration-queue-sort'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - pageNumber
                  - pageSize
                  - totalPages
                  - totalCount
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ABUMerchantBeforeRegistration'
                  pageNumber:
                    $ref: '#/components/schemas/PageNumber'
                  pageSize:
                    $ref: '#/components/schemas/PageSize'
                  totalPages:
                    $ref: '#/components/schemas/TotalPages'
                  totalCount:
                    $ref: '#/components/schemas/TotalCount'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
  /abu/file:
    post:
      tags:
        - MasterCard Account Billing Updater Management
      summary: ABU Merchant Registration File Creation
      description: |
        Collecting merchants from registration queue to batch and creating the R625 file for sending to the MasterCard.
      operationId: createAbuMerchantRegistrationFile
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                merchants:
                  type: array
                  items:
                    $ref: '#/components/schemas/MerchantID'
      responses:
        '200':
          description: File is created successfully
          content:
            application/json:
              schema:
                type: object
                required:
                  - batch
                properties:
                  file:
                    $ref: '#/components/schemas/ABUMerchantRegistrationFileBeforeResponse'
        '400':
          description: |
            Invalid input data

            | Code | Message                              | 
            |------|--------------------------------------|
            | 40   | Merchant registration queue is empty |
            | 99   | Validation error                     |

            `validations` block with invalid fields will be present for `Validation error` case.

            Validation table

            | Field  | Error         |
            |--------|---------------|
            | reason | Invalid value |
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
  /abu/response-file:
    post:
      tags:
        - MasterCard Account Billing Updater Management
      summary: Upload ABU Merchant Registration Response File
      description: |
        Uploading the T626 response file with the merchants registration in the ABU result.
      operationId: uploadAbuMerchantRegistrationResultFile
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                file:
                  $ref: '#/components/schemas/ABUFileBinary'
      responses:
        '200':
          description: Response file is uploaded successfully
          content:
            application/json:
              schema:
                type: object
                required:
                  - file
                properties:
                  file:
                    $ref: '#/components/schemas/ABUMerchantRegistrationFileAfterResponse'
        '400':
          description: |
            Invalid input data

            | Code | Message                 | 
            |------|-------------------------|
            | 41   | Bad file format         |
            | 42   | No one of records match |
            | 99   | Validation error        |

            `validations` block with invalid fields will be present for `Validation error` case.

            Validation table

            | Field  | Error         |
            |--------|---------------|
            | reason | Invalid value |
        '404':
          $ref: '#/components/responses/404_registration_batch'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
  /abu/files:
    get:
      tags:
        - MasterCard Account Billing Updater Management
      summary: Get ABU Merchant Registration File List
      description: |
        Getting the MasterCard Account Billing Updater registration file list.
      operationId: getAbuMerchantRegistrationFileList
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/abu-registration-file-sort'
        - $ref: '#/components/parameters/filter-abu-registration-file-status'
        - $ref: '#/components/parameters/filter-abu-registration-file-name'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - pageNumber
                  - pageSize
                  - totalPages
                  - totalCount
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ABUMerchantRegistrationFileAfterResponse'
                  pageNumber:
                    $ref: '#/components/schemas/PageNumber'
                  pageSize:
                    $ref: '#/components/schemas/PageSize'
                  totalPages:
                    $ref: '#/components/schemas/TotalPages'
                  totalCount:
                    $ref: '#/components/schemas/TotalCount'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
  /abu/file/{abuFileId}:
    get:
      tags:
        - MasterCard Account Billing Updater Management
      summary: Download ABU Merchant File
      description: |
        Downloading the MasterCard Account Billing Updater file.
      operationId: downloadAbuMerchantFile
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/abuFileId'
      responses:
        '200':
          description: Successful operation
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ABUFilePlainText'
        '404':
          $ref: '#/components/responses/404_abu_file'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
  /merchant/{merchantId}:
    put:
      summary: Apply Merchant Data
      description: |
        Saves a merchant data.

        Every merchant always belongs to some tenant and subdivision. `tenantId` and `subdivisionId` can be received in the corresponding request message body fields. However, `tenantId` and `subdivisionId` fields can be missing in the request message body. Merchant belonging will be determined based on the `Tenant-ID` and `Subdivision-ID` headers is this case.

        First, looking for an existing merchant in the defined tenant and subdivision.

        Next, the merchant is created if nothing were found.

        Or updated if the merchant was found.
      tags:
        - Merchant Management
      operationId: applyMerchant
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/merchantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantRequest'
        required: true
      responses:
        '200':
          description: Merchant details stored
          content:
            application/json:
              schema:
                type: object
                properties:
                  merchant:
                    $ref: '#/components/schemas/MerchantResponse'
        '400':
          description: |
            Use code 99 and "Validation error" message when invalid input data is present in request message

            `validations` block with invalid fields will be present for `Validation error` case.

            Validation table

            | Field     | Error              |
            |-----------|--------------------|
            | Any field | Field is mandatory |
            | Any field | Invalid value      |
          content:
            application/json:
              schema:
                required:
                  - code
                  - message
                type: object
                properties:
                  code:
                    $ref: '#/components/schemas/UnsuccessResultCode'
                  message:
                    $ref: '#/components/schemas/UnsuccessResultMessage'
                  validations:
                    $ref: '#/components/schemas/Validations'
              example:
                code: '99'
                message: Validation error
                validations:
                  - field: name
                    error: Field is mandatory
        '405':
          $ref: '#/components/responses/405'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
    get:
      summary: Get Merchant Details
      description: |
        Gets a merchant details.
      tags:
        - Merchant Management
      operationId: getMerchant
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/merchantId'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  merchant:
                    $ref: '#/components/schemas/MerchantResponse'
        '404':
          $ref: '#/components/responses/404_merchant'
        '405':
          $ref: '#/components/responses/405'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
  /merchant/{merchantId}/terminals:
    post:
      summary: Adding a E-commerce Terminal List to Merchant.
      description: |
        Adds a e-commerce terminal list to the merchant.  
        Only new terminals can be added to the merchant. Request attempt to repeated adding an existing termanal will be failed.
      tags:
        - Merchant Management
      operationId: addTerminalList
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Merchant-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/merchantId'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EcommerceTerminalWithID'
        required: true
      responses:
        '202':
          description: Terminals are added
          content:
            application/json:
              schema:
                type: object
                properties:
                  terminals:
                    type: array
                    items:
                      $ref: '#/components/schemas/EcommerceTerminalWithID'
        '400':
          description: |
            Invalid input data

            | Code | Message                                                                      |
            |------|------------------------------------------------------------------------------|
            | 28   | Existing terminals [`terminal id list`] are found. Create only new termianls |
            | 99   | Validation error                                                             |

            Use code 99 and "Validation error" message when invalid input data is present in request message

            `validations` block with invalid fields will be present for `Validation error` case.

            Validation table

            | Field     | Error              |
            |-----------|--------------------|
            | Any field | Field is mandatory |
            | Any field | Invalid value      |
          content:
            application/json:
              schema:
                required:
                  - code
                  - message
                type: object
                properties:
                  code:
                    $ref: '#/components/schemas/UnsuccessResultCode'
                  message:
                    $ref: '#/components/schemas/UnsuccessResultMessage'
                  validations:
                    $ref: '#/components/schemas/Validations'
              example:
                code: '99'
                message: Validation error
                validations:
                  - field: id
                    error: Field is mandatory
        '405':
          $ref: '#/components/responses/405'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
  /merchant/{merchantId}/terminal/{terminalId}:
    put:
      summary: Adding an E-commerce Terminal to Merchant
      description: |
        Adds an e-commerce terminal to merchant.
      tags:
        - Merchant Management
      operationId: addTerminal
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Merchant-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/merchantId'
        - $ref: '#/components/parameters/ecommerceTerminalId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseEcommerceTerminal'
        required: true
      responses:
        '202':
          description: Terminal details stored
          content:
            application/json:
              schema:
                type: object
                properties:
                  terminal:
                    $ref: '#/components/schemas/EcommerceTerminalWithID'
        '400':
          description: |
            Use code 99 and "Validation error" message when invalid input data is present in request message

            `validations` block with invalid fields will be present for `Validation error` case.

            Validation table

            | Field     | Error              |
            |-----------|--------------------|
            | Any field | Field is mandatory |
            | Any field | Invalid value      |
          content:
            application/json:
              schema:
                required:
                  - code
                  - message
                type: object
                properties:
                  code:
                    $ref: '#/components/schemas/UnsuccessResultCode'
                  message:
                    $ref: '#/components/schemas/UnsuccessResultMessage'
                  validations:
                    $ref: '#/components/schemas/Validations'
              example:
                code: '99'
                message: Validation error
                validations:
                  - field: id
                    error: Field is mandatory
        '405':
          $ref: '#/components/responses/405'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
    delete:
      summary: Deleting an E-commerce Terminal
      description: |
        Deletes an e-commerce terminal.
      tags:
        - Merchant Management
      operationId: deleteTerminal
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Merchant-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/merchantId'
        - $ref: '#/components/parameters/ecommerceTerminalId'
      responses:
        '204':
          description: Terminal is deleted
        '404':
          $ref: '#/components/responses/404_ecommerce_terminal'
        '405':
          $ref: '#/components/responses/405'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
  /googlepay/merchant/{merchantId}:
    put:
      summary: Set GooglePay Merchant Data
      description: |
        Saves an GooglePay merchant data.
      tags:
        - Merchant Management
      operationId: createGooglePayMerchant
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Merchant-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/merchantId'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - displayName
              properties:
                displayName:
                  $ref: '#/components/schemas/MerchantName'
                subdivisionId:
                  $ref: '#/components/schemas/SubdivisionID'
                tenantId:
                  $ref: '#/components/schemas/TenantID'
                googleMerchantId:
                  $ref: '#/components/schemas/GoogleMerchantID'
        required: true
      responses:
        '200':
          description: GooglePay merchant details stored
          content:
            application/json:
              schema:
                type: object
                properties:
                  merchant:
                    $ref: '#/components/schemas/CreatedGooglePayMerchant'
        '400':
          description: |
            Use code 99 and "Validation error" message when invalid input data is present in request message

            `validations` block with invalid fields will be present for `Validation error` case.

            Validation table

            | Field     | Error              |
            |-----------|--------------------|
            | Any field | Field is mandatory |
            | Any field | Invalid value      |
          content:
            application/json:
              schema:
                required:
                  - code
                  - message
                type: object
                properties:
                  code:
                    $ref: '#/components/schemas/UnsuccessResultCode'
                  message:
                    $ref: '#/components/schemas/UnsuccessResultMessage'
                  validations:
                    $ref: '#/components/schemas/Validations'
              example:
                code: '99'
                message: Validation error
                validations:
                  - field: name
                    error: Field is mandatory
        '405':
          $ref: '#/components/responses/405'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
    get:
      summary: Get GooglePay Merchant Details
      description: |
        Getting a GooglePay merchant detailed information.
      tags:
        - Merchant Management
      operationId: getGooglePayMerchant
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Merchant-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/merchantId'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  merchant:
                    $ref: '#/components/schemas/CreatedGooglePayMerchant'
        '404':
          $ref: '#/components/responses/404_merchant'
        '405':
          $ref: '#/components/responses/405'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
    delete:
      summary: Delete GooglePay Merchant
      description: |
        Deleting a GooglePay merchant.
      tags:
        - Merchant Management
      operationId: deleteGooglePayMerchant
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Merchant-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/merchantId'
      responses:
        '200':
          description: GooglePay merchant is deleted
        '404':
          $ref: '#/components/responses/404_merchant'
        '405':
          $ref: '#/components/responses/405'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
  /applepay/merchant:
    post:
      summary: Set ApplePay Merchant Data
      description: |
        Saves an ApplePay merchant data.
      tags:
        - Merchant Management
      operationId: createApplePayMerchant
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Merchant-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - appleId
                - displayName
                - usageScheme
              properties:
                displayName:
                  $ref: '#/components/schemas/MerchantName'
                merchantId:
                  $ref: '#/components/schemas/MerchantID'
                subdivisionId:
                  $ref: '#/components/schemas/SubdivisionID'
                tenantId:
                  $ref: '#/components/schemas/TenantID'
                appleId:
                  $ref: '#/components/schemas/AppleMerchantID'
                usageScheme:
                  $ref: '#/components/schemas/ApplePayUsageScheme'
                processingCertificate:
                  $ref: '#/components/schemas/BinaryCertificate'
                processingPrivateKey:
                  $ref: '#/components/schemas/BinaryKey'
                identityCertificate:
                  $ref: '#/components/schemas/BinaryCertificate'
                identityPrivateKey:
                  $ref: '#/components/schemas/BinaryKey'
        required: true
      responses:
        '200':
          description: Merchant details stored
          content:
            application/json:
              schema:
                type: object
                properties:
                  merchant:
                    $ref: '#/components/schemas/CreatedApplePayMerchant'
        '400':
          description: |
            Use code 99 and "Validation error" message when invalid input data is present in request message

            `validations` block with invalid fields will be present for `Validation error` case.

            Validation table

            | Field     | Error              |
            |-----------|--------------------|
            | Any field | Field is mandatory |
            | Any field | Invalid value      |
          content:
            application/json:
              schema:
                required:
                  - code
                  - message
                type: object
                properties:
                  code:
                    $ref: '#/components/schemas/UnsuccessResultCode'
                  message:
                    $ref: '#/components/schemas/UnsuccessResultMessage'
                  validations:
                    $ref: '#/components/schemas/Validations'
              example:
                code: '99'
                message: Validation error
                validations:
                  - field: displayName
                    error: Field is mandatory
        '405':
          $ref: '#/components/responses/405'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
  /applepay/merchant/{merchantId}:
    put:
      summary: Update ApplePay Merchant Data
      description: |
        Saves a merchant data.

        Every merchant always belongs to some tenant and subdivision. `tenantId` and `subdivisionId` can be received in the corresponding request message body fields. However, `tenantId` and `subdivisionId` fields can be missing in the request message body. Merchant belonging will be determined based on the `Tenant-ID` and `Subdivision-ID` headers is this case.

        First, looking for an existing merchant in the defined tenant and subdivision.

        Next, the merchant is created if nothing were found.

        Or updated if the merchant was found.
      tags:
        - Merchant Management
      operationId: updateApplePayMerchant
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/merchantId'
      requestBody:
        content:
          application/json:
            schema:
              required:
                - appleId
                - name
                - usageScheme
              type: object
              properties:
                id:
                  $ref: '#/components/schemas/MerchantID'
                name:
                  $ref: '#/components/schemas/MerchantName'
                subdivisionId:
                  $ref: '#/components/schemas/SubdivisionID'
                tenantId:
                  $ref: '#/components/schemas/TenantID'
                appleId:
                  $ref: '#/components/schemas/AppleMerchantID'
                usageScheme:
                  $ref: '#/components/schemas/ApplePayUsageScheme'
        required: true
      responses:
        '200':
          description: Merchant details stored
          content:
            application/json:
              schema:
                type: object
                properties:
                  merchant:
                    $ref: '#/components/schemas/CreatedApplePayMerchant'
        '400':
          description: |
            Use code 99 and "Validation error" message when invalid input data is present in request message

            `validations` block with invalid fields will be present for `Validation error` case.

            Validation table

            | Field     | Error              |
            |-----------|--------------------|
            | Any field | Field is mandatory |
            | Any field | Invalid value      |
          content:
            application/json:
              schema:
                required:
                  - code
                  - message
                type: object
                properties:
                  code:
                    $ref: '#/components/schemas/UnsuccessResultCode'
                  message:
                    $ref: '#/components/schemas/UnsuccessResultMessage'
                  validations:
                    $ref: '#/components/schemas/Validations'
              example:
                code: '99'
                message: Validation error
                validations:
                  - field: displayName
                    error: Field is mandatory
        '405':
          $ref: '#/components/responses/405'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
    get:
      summary: Get Merchant ApplePay Details
      description: |
        Getting a merchant ApplePay details.
      tags:
        - Merchant Management
      operationId: getApplePayMerchant
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Merchant-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/merchantId'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  merchant:
                    $ref: '#/components/schemas/ApplePayMerchant'
        '404':
          $ref: '#/components/responses/404_merchant'
        '405':
          $ref: '#/components/responses/405'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
  /applepay/csr:
    post:
      summary: ApplePay Certificate Signing Request Creation
      description: |
        Creates a CSR for ApplePay payment processing or identity certificate issuing.
      tags:
        - Merchant Management
      operationId: createApplePayCsr
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Merchant-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
      requestBody:
        content:
          application/json:
            schema:
              required:
                - name
                - certificateType
                - subjectInfo
              type: object
              properties:
                name:
                  $ref: '#/components/schemas/ApplePayCSRName'
                merchantId:
                  $ref: '#/components/schemas/MerchantID'
                subdivisionId:
                  $ref: '#/components/schemas/SubdivisionID'
                tenantId:
                  $ref: '#/components/schemas/TenantID'
                certificateType:
                  $ref: '#/components/schemas/ApplePayCertificateType'
                subjectInfo:
                  $ref: '#/components/schemas/ApplePayCSRSubjectInfo'
        required: true
      responses:
        '201':
          description: CSR is created
          content:
            application/json:
              schema:
                type: object
                properties:
                  csr:
                    $ref: '#/components/schemas/ApplePayCSR'
        '400':
          description: |
            Invalid input data

            | Code | Message                              | 
            |------|--------------------------------------|
            | 17   | Merchant not configured for ApplePay |

            Use code 99 and "Validation error" message when invalid input data is present in request message

            `validations` block with invalid fields will be present for `Validation error` case.

            Validation table

            | Field     | Error              |
            |-----------|--------------------|
            | Any field | Field is mandatory |
            | Any field | Invalid value      |
          content:
            application/json:
              schema:
                required:
                  - code
                  - message
                type: object
                properties:
                  code:
                    $ref: '#/components/schemas/UnsuccessResultCode'
                  message:
                    $ref: '#/components/schemas/UnsuccessResultMessage'
                  validations:
                    $ref: '#/components/schemas/Validations'
              example:
                code: '99'
                message: Validation error
                validations:
                  - field: certificateType
                    error: Field is mandatory
        '405':
          $ref: '#/components/responses/405'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
  /applepay/csrs:
    get:
      summary: Get ApplePay Certificate Signing Request List
      description: |
        Getting a list of CSR for ApplePay payment processing or identity certificate issuing.
      tags:
        - Merchant Management
      operationId: getApplePayCsrList
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Merchant-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/applepay-csr-sort'
        - $ref: '#/components/parameters/filter-applepay-csr-id'
        - $ref: '#/components/parameters/filter-applepay-csr-name'
        - $ref: '#/components/parameters/filter-applepay-certificate-type'
        - $ref: '#/components/parameters/filter-merchant-id'
        - $ref: '#/components/parameters/filter-subdivision-id'
        - $ref: '#/components/parameters/filter-tenant-id'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - pageNumber
                  - pageSize
                  - totalPages
                  - totalCount
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ApplePayCSRInList'
                  pageNumber:
                    $ref: '#/components/schemas/PageNumber'
                  pageSize:
                    $ref: '#/components/schemas/PageSize'
                  totalPages:
                    $ref: '#/components/schemas/TotalPages'
                  totalCount:
                    $ref: '#/components/schemas/TotalCount'
        '404':
          $ref: '#/components/responses/404_csr'
        '405':
          $ref: '#/components/responses/405'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
  /applepay/csr/{csrId}:
    get:
      summary: Get ApplePay Certificate Signing Request Details
      description: |
        Getting a CSR for ApplePay payment processing or identity certificate issuing details.
      tags:
        - Merchant Management
      operationId: getApplePayCsr
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Merchant-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/applepayCsrId'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  csr:
                    $ref: '#/components/schemas/ApplePayCSR'
        '404':
          $ref: '#/components/responses/404_csr'
        '405':
          $ref: '#/components/responses/405'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
  /applepay/csr/{csrId}/file:
    get:
      summary: Download ApplePay CSR File
      description: |
        Downloads ApplePay CSR file.
      tags:
        - Merchant Management
        - Processing Rules Management
      operationId: getApplePayCsrFile
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Merchant-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/applepayCsrId'
      responses:
        '200':
          description: Successful operation
          headers:
            Content-Disposition:
              schema:
                type: string
                example: attachment; filename="file name.jpg"
              description: Indicates whether content should be displayed inline in the browser as a web page or part of a web page or downloaded as an attachment locally
        '404':
          $ref: '#/components/responses/404_csr'
        '405':
          $ref: '#/components/responses/405'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
    delete:
      summary: Deleting an ApplePay Certificate Signing Request
      description: |
        Deletes a CSR for ApplePay payment processing or identity certificate issuing.
      tags:
        - Merchant Management
      operationId: deleteApplePayCsr
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Merchant-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/applepayCsrId'
      responses:
        '204':
          description: CSR is deleted
        '404':
          $ref: '#/components/responses/404_csr'
        '405':
          $ref: '#/components/responses/405'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
  /applepay/csr/{csrId}/certificate:
    post:
      summary: Upload ApplePay Signed Certificate
      description: |
        Uploads a signed by ApplePay payment processing or identity certificate for the CSR.
      tags:
        - Merchant Management
      operationId: uploadApplePayCertificate
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Merchant-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/applepayCsrId'
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - value
              properties:
                merchantId:
                  $ref: '#/components/schemas/MerchantID'
                subdivisionId:
                  $ref: '#/components/schemas/SubdivisionID'
                tenantId:
                  $ref: '#/components/schemas/TenantID'
                value:
                  $ref: '#/components/schemas/BinaryCertificate'
        required: true
      responses:
        '200':
          description: Certificate is uploaded successfully
          content:
            application/json:
              schema:
                type: object
                required:
                  - certificateId
                properties:
                  certificateId:
                    $ref: '#/components/schemas/ApplePayCertificateId'
        '400':
          description: |
            Invalid input data

            | Code | Message                              | 
            |------|--------------------------------------|
            | 18   | Certificate is not compliant to CSR  |

            Use code 99 and "Validation error" message when invalid input data is present in request message

            `validations` block with invalid fields will be present for `Validation error` case.

            Validation table

            | Field     | Error              |
            |-----------|--------------------|
            | Any field | Field is mandatory |
            | Any field | Invalid value      |
          content:
            application/json:
              schema:
                required:
                  - code
                  - message
                type: object
                properties:
                  code:
                    $ref: '#/components/schemas/UnsuccessResultCode'
                  message:
                    $ref: '#/components/schemas/UnsuccessResultMessage'
                  validations:
                    $ref: '#/components/schemas/Validations'
              example:
                code: '99'
                message: Validation error
                validations:
                  - field: value
                    error: Field is mandatory
        '404':
          $ref: '#/components/responses/404_csr'
        '405':
          $ref: '#/components/responses/405'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
  /applepay/merchant/{merchantId}/processing-certificate:
    post:
      summary: Upload ApplePay Payment Processing Private Key with Certificate
      description: |
        Uploads a self generated private key and corresponding signed by ApplePay payment processing certificate.
      tags:
        - Merchant Management
      operationId: uploadApplePayPaymentProcessingCertificate
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/merchantId'
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - value
                - privateKey
              properties:
                subdivisionId:
                  $ref: '#/components/schemas/SubdivisionID'
                tenantId:
                  $ref: '#/components/schemas/TenantID'
                name:
                  $ref: '#/components/schemas/ApplePayCertificateName'
                privateKey:
                  $ref: '#/components/schemas/BinaryKey'
                value:
                  $ref: '#/components/schemas/BinaryCertificate'
        required: true
      responses:
        '200':
          description: Certificate is uploaded successfully
          content:
            application/json:
              schema:
                type: object
                required:
                  - certificateId
                properties:
                  certificateId:
                    $ref: '#/components/schemas/ApplePayCertificateId'
        '400':
          description: |
            Invalid input data

            Use code 99 and "Validation error" message when invalid input data is present in request message

            `validations` block with invalid fields will be present for `Validation error` case.

            Validation table

            | Field     | Error              |
            |-----------|--------------------|
            | Any field | Field is mandatory |
            | Any field | Invalid value      |
          content:
            application/json:
              schema:
                required:
                  - code
                  - message
                type: object
                properties:
                  code:
                    $ref: '#/components/schemas/UnsuccessResultCode'
                  message:
                    $ref: '#/components/schemas/UnsuccessResultMessage'
                  validations:
                    $ref: '#/components/schemas/Validations'
              example:
                code: '99'
                message: Validation error
                validations:
                  - field: value
                    error: Field is mandatory
        '405':
          $ref: '#/components/responses/405'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
  /applepay/merchant/{merchantId}/processing-certificates:
    get:
      summary: Get ApplePay Payment Processing Certificate List
      description: |
        Getting an ApplePay payment processing certificate list.
      tags:
        - Merchant Management
      operationId: getApplePayProcessingCertificateList
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/merchantId'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/applepay-processing-certificate-sort'
        - $ref: '#/components/parameters/filter-applepay-processing-certificate-id'
        - $ref: '#/components/parameters/filter-applepay-processing-certificate-activity'
        - $ref: '#/components/parameters/filter-applepay-processing-certificate-creation-date-from'
        - $ref: '#/components/parameters/filter-applepay-processing-certificate-creation-date-to'
        - $ref: '#/components/parameters/filter-applepay-processing-certificate-expiry-date-from'
        - $ref: '#/components/parameters/filter-applepay-processing-certificate-expiry-date-to'
        - $ref: '#/components/parameters/filter-subdivision-id'
        - $ref: '#/components/parameters/filter-tenant-id'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - pageNumber
                  - pageSize
                  - totalPages
                  - totalCount
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ApplePayProcessingCertificateInList'
                  pageNumber:
                    $ref: '#/components/schemas/PageNumber'
                  pageSize:
                    $ref: '#/components/schemas/PageSize'
                  totalPages:
                    $ref: '#/components/schemas/TotalPages'
                  totalCount:
                    $ref: '#/components/schemas/TotalCount'
        '404':
          $ref: '#/components/responses/404_applepay_processing_certificate'
        '405':
          $ref: '#/components/responses/405'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
  /applepay/processing-certificate/{processingCertificateId}:
    get:
      summary: Get ApplePay Payment Processing Certificate Details
      description: |
        Getting an ApplePay payment processing certificate details.
      tags:
        - Merchant Management
      operationId: getApplePayProcessingCertificate
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Merchant-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/processingCertificateId'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  processingCertificate:
                    $ref: '#/components/schemas/ApplePayProcessingCertificate'
        '404':
          $ref: '#/components/responses/404_applepay_processing_certificate'
        '405':
          $ref: '#/components/responses/405'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
  /applepay/processing-certificate/{processingCertificateId}/activity:
    put:
      summary: Changing an ApplePay Payment Processing Certificate Activity State
      description: |
        Changes activity state of an ApplePay payment processing certificate
      tags:
        - Merchant Management
      operationId: changeApplePayProcessingCertificateActivity
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/processingCertificateId'
      requestBody:
        content:
          application/json:
            schema:
              required:
                - activity
              type: object
              properties:
                activity:
                  $ref: '#/components/schemas/AppleProcessingCertificateActivity'
        required: true
      responses:
        '204':
          description: ApplePay payment processing certificate activity is changed
        '400':
          description: |
            | Code | Message                                       |
            |------|-----------------------------------------------|
            | 40   | Processing certificate already is deactivated |

            Use code 99 and "Validation error" message when invalid input data is present in request message

            `validations` block with invalid fields will be present for `Validation error` case.

            Validation table

            | Field     | Error              |
            |-----------|--------------------|
            | Any field | Field is mandatory |
            | Any field | Invalid value      |
          content:
            application/json:
              schema:
                required:
                  - code
                  - message
                type: object
                properties:
                  code:
                    $ref: '#/components/schemas/UnsuccessResultCode'
                  message:
                    $ref: '#/components/schemas/UnsuccessResultMessage'
                  validations:
                    $ref: '#/components/schemas/Validations'
              example:
                code: '99'
                message: Validation error
                validations:
                  - field: activity
                    error: Field is mandatory
        '405':
          $ref: '#/components/responses/405'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
  /applepay/merchant/{merchantId}/identity-certificate:
    post:
      summary: Upload ApplePay Identity Private Key with Certificate
      description: |
        Uploads a self generated private key and corresponding signed by Apple identity certificate.
      tags:
        - Merchant Management
      operationId: uploadApplePayIdentityCertificate
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/merchantId'
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - value
                - privateKey
              properties:
                merchantId:
                  $ref: '#/components/schemas/MerchantID'
                subdivisionId:
                  $ref: '#/components/schemas/SubdivisionID'
                tenantId:
                  $ref: '#/components/schemas/TenantID'
                privateKey:
                  $ref: '#/components/schemas/BinaryKey'
                value:
                  $ref: '#/components/schemas/BinaryCertificate'
        required: true
      responses:
        '204':
          description: Certificate is uploaded successfully
        '400':
          description: |
            Invalid input data

            Use code 99 and "Validation error" message when invalid input data is present in request message

            `validations` block with invalid fields will be present for `Validation error` case.

            Validation table

            | Field     | Error              |
            |-----------|--------------------|
            | Any field | Field is mandatory |
            | Any field | Invalid value      |
          content:
            application/json:
              schema:
                required:
                  - code
                  - message
                type: object
                properties:
                  code:
                    $ref: '#/components/schemas/UnsuccessResultCode'
                  message:
                    $ref: '#/components/schemas/UnsuccessResultMessage'
                  validations:
                    $ref: '#/components/schemas/Validations'
              example:
                code: '99'
                message: Validation error
                validations:
                  - field: value
                    error: Field is mandatory
        '405':
          $ref: '#/components/responses/405'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
    get:
      summary: Get ApplePay Identity Certificate Details
      description: |
        Getting an ApplePay identity certificate details.
      tags:
        - Merchant Management
      operationId: getApplePayIdentityCertificate
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/merchantId'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  identityCertificate:
                    $ref: '#/components/schemas/ApplePayIdentityCertificate'
        '404':
          $ref: '#/components/responses/404_applepay_identity_certificate'
        '405':
          $ref: '#/components/responses/405'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
    delete:
      summary: Delete ApplePay Identity Certificate
      description: |
        Deletes an ApplePay identity certificate.
      tags:
        - Merchant Management
      operationId: deleteApplePayIdentityCertificate
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/merchantId'
      responses:
        '204':
          description: Certificate is deleted successfully
        '404':
          $ref: '#/components/responses/404_applepay_identity_certificate'
        '405':
          $ref: '#/components/responses/405'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
  /click-to-pay/dpa:
    post:
      summary: ClickToPay Digital Processing Application Creation
      description: |
        Saves an ClickToPay DPA data.
      tags:
        - Merchant Management
      operationId: createClickToPayDPA
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Merchant-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
      requestBody:
        content:
          application/json:
            schema:
              required:
                - supportedCardSchemes
                - originDomains
              properties:
                merchantId:
                  $ref: '#/components/schemas/MerchantID'
                presentationName:
                  $ref: '#/components/schemas/MerchantName'
                subdivisionId:
                  $ref: '#/components/schemas/SubdivisionID'
                tenantId:
                  $ref: '#/components/schemas/TenantID'
                supportedCardSchemes:
                  type: array
                  items:
                    $ref: '#/components/schemas/CardScheme'
                originDomains:
                  type: array
                  items:
                    $ref: '#/components/schemas/Domain'
        required: true
      responses:
        '200':
          description: DPA details stored
          content:
            application/json:
              schema:
                type: object
                properties:
                  dpa:
                    $ref: '#/components/schemas/CreatedDPA'
        '400':
          description: |
            Use code 99 and "Validation error" message when invalid input data is present in request message

            `validations` block with invalid fields will be present for `Validation error` case.

            Validation table

            | Field     | Error              |
            |-----------|--------------------|
            | Any field | Field is mandatory |
            | Any field | Invalid value      |
          content:
            application/json:
              schema:
                required:
                  - code
                  - message
                type: object
                properties:
                  code:
                    $ref: '#/components/schemas/UnsuccessResultCode'
                  message:
                    $ref: '#/components/schemas/UnsuccessResultMessage'
                  validations:
                    $ref: '#/components/schemas/Validations'
              example:
                code: '99'
                message: Validation error
                validations:
                  - field: displayName
                    error: Field is mandatory
        '405':
          $ref: '#/components/responses/405'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
  /click-to-pay/dpas:
    get:
      summary: Get ClickToPay Digital Processing Application List
      description: |
        Getting the ClickToPay DPA detailed list.
      tags:
        - Merchant Management
      operationId: getClickToPayDPAList
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Merchant-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/filter-merchant-id'
        - $ref: '#/components/parameters/filter-dpa-status'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - pageNumber
                  - pageSize
                  - totalPages
                  - totalCount
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/DPAInList'
                  pageNumber:
                    $ref: '#/components/schemas/PageNumber'
                  pageSize:
                    $ref: '#/components/schemas/PageSize'
                  totalPages:
                    $ref: '#/components/schemas/TotalPages'
                  totalCount:
                    $ref: '#/components/schemas/TotalCount'
        '400':
          description: |
            Use code 99 and "Validation error" message when invalid input data is present in request message

            `validations` block with invalid fields will be present for `Validation error` case.

            Validation table

            | Field     | Error              |
            |-----------|--------------------|
            | Any field | Field is mandatory |
            | Any field | Invalid value      |
          content:
            application/json:
              schema:
                required:
                  - code
                  - message
                type: object
                properties:
                  code:
                    $ref: '#/components/schemas/UnsuccessResultCode'
                  message:
                    $ref: '#/components/schemas/UnsuccessResultMessage'
                  validations:
                    $ref: '#/components/schemas/Validations'
              example:
                code: '99'
                message: Validation error
                validations:
                  - field: displayName
                    error: Field is mandatory
        '404':
          $ref: '#/components/responses/404_dpa'
        '405':
          $ref: '#/components/responses/405'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
  /click-to-pay/dpa/{dpaId}:
    put:
      summary: Updating a ClickToPay Digital Processing Application
      description: |
        Updates the ClickToPay DPA data.
      tags:
        - Merchant Management
      operationId: updateClickToPayDPA
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Merchant-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/dpaId'
      requestBody:
        content:
          application/json:
            schema:
              required:
                - supportedCardSchemes
                - originDomains
              properties:
                merchantId:
                  $ref: '#/components/schemas/MerchantID'
                subdivisionId:
                  $ref: '#/components/schemas/SubdivisionID'
                tenantId:
                  $ref: '#/components/schemas/TenantID'
                supportedCardSchemes:
                  type: array
                  items:
                    $ref: '#/components/schemas/CardScheme'
                originDomains:
                  type: array
                  items:
                    $ref: '#/components/schemas/Domain'
        required: true
      responses:
        '200':
          description: DPA is updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  dpa:
                    $ref: '#/components/schemas/CreatedDPA'
        '400':
          description: |
            Use code 99 and "Validation error" message when invalid input data is present in request message

            `validations` block with invalid fields will be present for `Validation error` case.

            Validation table

            | Field     | Error              |
            |-----------|--------------------|
            | Any field | Field is mandatory |
            | Any field | Invalid value      |
          content:
            application/json:
              schema:
                required:
                  - code
                  - message
                type: object
                properties:
                  code:
                    $ref: '#/components/schemas/UnsuccessResultCode'
                  message:
                    $ref: '#/components/schemas/UnsuccessResultMessage'
                  validations:
                    $ref: '#/components/schemas/Validations'
              example:
                code: '99'
                message: Validation error
                validations:
                  - field: displayName
                    error: Field is mandatory
        '404':
          $ref: '#/components/responses/404_dpa'
        '405':
          $ref: '#/components/responses/405'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
    get:
      summary: Get ClickToPay Digital Processing Application Details
      description: |
        Getting the ClickToPay DPA detailed data.
      tags:
        - Merchant Management
      operationId: getClickToPayDPA
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Merchant-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/dpaId'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  context:
                    $ref: '#/components/schemas/CreatedDPA'
        '400':
          description: |
            Use code 99 and "Validation error" message when invalid input data is present in request message

            `validations` block with invalid fields will be present for `Validation error` case.

            Validation table

            | Field     | Error              |
            |-----------|--------------------|
            | Any field | Field is mandatory |
            | Any field | Invalid value      |
          content:
            application/json:
              schema:
                required:
                  - code
                  - message
                type: object
                properties:
                  code:
                    $ref: '#/components/schemas/UnsuccessResultCode'
                  message:
                    $ref: '#/components/schemas/UnsuccessResultMessage'
                  validations:
                    $ref: '#/components/schemas/Validations'
              example:
                code: '99'
                message: Validation error
                validations:
                  - field: displayName
                    error: Field is mandatory
        '404':
          $ref: '#/components/responses/404_dpa'
        '405':
          $ref: '#/components/responses/405'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
    delete:
      summary: Deleting a ClickToPay Digital Processing Application
      description: |
        Deletes the ClickToPay DPA data.
      tags:
        - Merchant Management
      operationId: deleteClickToPayDPA
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Merchant-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/dpaId'
      responses:
        '204':
          description: DPA is deleted
        '400':
          description: |
            Use code 99 and "Validation error" message when invalid input data is present in request message

            `validations` block with invalid fields will be present for `Validation error` case.

            Validation table

            | Field     | Error              |
            |-----------|--------------------|
            | Any field | Field is mandatory |
            | Any field | Invalid value      |
          content:
            application/json:
              schema:
                required:
                  - code
                  - message
                type: object
                properties:
                  code:
                    $ref: '#/components/schemas/UnsuccessResultCode'
                  message:
                    $ref: '#/components/schemas/UnsuccessResultMessage'
                  validations:
                    $ref: '#/components/schemas/Validations'
              example:
                code: '99'
                message: Validation error
                validations:
                  - field: displayName
                    error: Field is mandatory
        '404':
          $ref: '#/components/responses/404_dpa'
        '405':
          $ref: '#/components/responses/405'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
  /abu/merchant/{merchantId}/register:
    post:
      summary: Create ABU Merchant
      description: |
        Creates R625 file for merchant registration in MasterCard Account Billing Updater.
      tags:
        - Merchant Management
      operationId: createAbuMerchant
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Merchant-ID'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/merchantId'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - callbackUrl
              properties:
                callbackUrl:
                  $ref: '#/components/schemas/CallbackURL'
      responses:
        '202':
          description: Request for merchant registration in ABU is accepted
          content:
            application/json:
              schema:
                required:
                  - processId
                type: object
                properties:
                  merchant:
                    $ref: '#/components/schemas/ABUMerchantBeforeRegistration'
        '400':
          description: |
            Use code 99 and "Validation error" message when invalid input data is present in request message

            `validations` block with invalid fields will be present for `Validation error` case.

            Validation table

            | Field     | Error              |
            |-----------|--------------------|
            | Any field | Field is mandatory |
            | Any field | Invalid value      |
          content:
            application/json:
              schema:
                required:
                  - code
                  - message
                type: object
                properties:
                  code:
                    $ref: '#/components/schemas/UnsuccessResultCode'
                  message:
                    $ref: '#/components/schemas/UnsuccessResultMessage'
                  validations:
                    $ref: '#/components/schemas/Validations'
              example:
                code: '99'
                message: Validation error
                validations:
                  - field: displayName
                    error: Field is mandatory
        '405':
          $ref: '#/components/responses/405'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
      callbacks:
        RESPONSE_FILE_PROCESSED:
          '{$request.body#/callbackUrl}':
            post:
              summary: Callback for End of Response File Processing
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        merchant:
                          $ref: '#/components/schemas/ABUMerchantAfterRegistration'
              responses:
                '200':
                  description: Callback is accepted
                '400':
                  description: Callback is not accepted
  /abu/merchant/{merchantId}:
    get:
      summary: Get ABU Merchant Details
      description: |
        Getting the merchant details in MasterCard Account Billing Updater.
      tags:
        - Merchant Management
      operationId: getAbuMerchant
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Merchant-ID'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/merchantId'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/abu-merchant-sort'
        - $ref: '#/components/parameters/filter-abu-merchant-history-included'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ABUMerchantAfterRegistration'
                  pageNumber:
                    $ref: '#/components/schemas/PageNumber'
                  pageSize:
                    $ref: '#/components/schemas/PageSize'
                  totalPages:
                    $ref: '#/components/schemas/TotalPages'
                  totalCount:
                    $ref: '#/components/schemas/TotalCount'
        '404':
          $ref: '#/components/responses/404_merchant'
        '405':
          $ref: '#/components/responses/405'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
    delete:
      summary: Delete ABU Merchant
      description: |
        Creates R625 file for merchant deletion from MasterCard Account Billing Updater.
      tags:
        - Merchant Management
      operationId: deleteAbuMerchant
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Merchant-ID'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/merchantId'
        - $ref: '#/components/parameters/callback-url'
      responses:
        '202':
          description: Request for merchant deletion from ABU is accepted
          content:
            application/json:
              schema:
                required:
                  - processId
                type: object
                properties:
                  merchant:
                    $ref: '#/components/schemas/ABUMerchantBeforeRegistration'
        '404':
          $ref: '#/components/responses/404_merchant'
        '405':
          $ref: '#/components/responses/405'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
      callbacks:
        RESPONSE_FILE_PROCESSED:
          '{$request.query.callback-url}':
            post:
              summary: Callback for End of Response File Processing
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        merchant:
                          $ref: '#/components/schemas/ABUMerchantAfterRegistration'
              responses:
                '200':
                  description: Callback is accepted
                '400':
                  description: Callback is not accepted
  /abu/merchants:
    get:
      summary: Get ABU Merchant List
      description: |
        Getting the merchant list registerd in MasterCard Account Billing Updater.  
      tags:
        - Merchant Management
      operationId: getAbuMerchantList
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Merchant-ID'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/abu-merchant-sort'
        - $ref: '#/components/parameters/filter-merchant-id'
        - $ref: '#/components/parameters/filter-card-acceptor-id'
        - $ref: '#/components/parameters/filter-abu-merchant-creation-date-from'
        - $ref: '#/components/parameters/filter-abu-merchant-creation-date-to'
        - $ref: '#/components/parameters/filter-abu-merchant-action'
        - $ref: '#/components/parameters/filter-abu-merchant-registration-status'
        - $ref: '#/components/parameters/filter-abu-merchant-error-codes'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ABUMerchantAfterRegistration'
                  pageNumber:
                    $ref: '#/components/schemas/PageNumber'
                  pageSize:
                    $ref: '#/components/schemas/PageSize'
                  totalPages:
                    $ref: '#/components/schemas/TotalPages'
                  totalCount:
                    $ref: '#/components/schemas/TotalCount'
        '404':
          $ref: '#/components/responses/404_merchant'
        '405':
          $ref: '#/components/responses/405'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
  /paypal/merchant/{merchantId}/register:
    post:
      summary: PayPal Merchant Creation
      description: |
        Prefills merchant data for PayPal form.  
        Creates referral link for merchant onboarding in PayPal.
      tags:
        - Merchant Management
      operationId: createPaypalMerchant
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Merchant-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/merchantId'
      requestBody:
        content:
          application/json:
            schema:
              required:
                - returnUrl
              properties:
                returnUrl:
                  type: string
                  description: The URL to which to redirect the customer upon completion of the onboarding process.
                businessType:
                  type: string
                  description: Business type.
                  enum:
                    - PRIVATE_CORPORATION
                    - PUBLIC_COMPANY
                    - PARTNERSHIP
                    - PROPRIETORSHIP
                    - GOVERNMENT
                customer:
                  type: object
                  properties:
                    email:
                      $ref: '#/components/schemas/NotMaskedEmail'
                    phone:
                      $ref: '#/components/schemas/BaseNotMaskedPhone'
                    owner:
                      type: object
                      properties:
                        firstName:
                          $ref: '#/components/schemas/FirstName'
                        lastName:
                          $ref: '#/components/schemas/LastName'
                        email:
                          $ref: '#/components/schemas/NotMaskedEmail'
                        phone:
                          $ref: '#/components/schemas/BaseNotMaskedPhone'
                        address:
                          $ref: '#/components/schemas/Address'
        required: true
      responses:
        '202':
          description: Merchant data is prefilled
          content:
            application/json:
              schema:
                type: object
                properties:
                  accountLinkUrk:
                    $ref: '#/components/schemas/PayPalMerchantAccountLinkURL'
        '400':
          description: |
            Use code 99 and "Validation error" message when invalid input data is present in request message

            `validations` block with invalid fields will be present for `Validation error` case.

            Validation table

            | Field     | Error              |
            |-----------|--------------------|
            | Any field | Field is mandatory |
            | Any field | Invalid value      |
          content:
            application/json:
              schema:
                required:
                  - code
                  - message
                type: object
                properties:
                  code:
                    $ref: '#/components/schemas/UnsuccessResultCode'
                  message:
                    $ref: '#/components/schemas/UnsuccessResultMessage'
                  validations:
                    $ref: '#/components/schemas/Validations'
              example:
                code: '99'
                message: Validation error
                validations:
                  - field: displayName
                    error: Field is mandatory
        '405':
          $ref: '#/components/responses/405'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
  /bindings:
    get:
      tags:
        - Binding Management
      summary: Get Binding List
      description: Getting list of bindings.
      operationId: getBindingList
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Merchant-ID'
        - $ref: '#/components/parameters/Order-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/binding-sort'
        - $ref: '#/components/parameters/filter-payer-id'
        - $ref: '#/components/parameters/filter-merchant-id'
        - $ref: '#/components/parameters/filter-binding-id'
        - $ref: '#/components/parameters/filter-activity'
        - $ref: '#/components/parameters/filter-card-scheme'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - pageNumber
                  - pageSize
                  - totalPages
                  - totalCount
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/BindingInList'
                  pageNumber:
                    $ref: '#/components/schemas/PageNumber'
                  pageSize:
                    $ref: '#/components/schemas/PageSize'
                  totalPages:
                    $ref: '#/components/schemas/TotalPages'
                  totalCount:
                    $ref: '#/components/schemas/TotalCount'
        '404':
          $ref: '#/components/responses/404_binding'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
  /binding/{bindingId}/activity:
    put:
      summary: Change Binding Activity
      description: Changing activity of a binding.
      tags:
        - Binding Management
      operationId: changeBindingActivity
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Merchant-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/bindingId'
      requestBody:
        content:
          application/json:
            schema:
              required:
                - activity
              type: object
              properties:
                activity:
                  $ref: '#/components/schemas/BindingActivity'
        required: true
      responses:
        '204':
          description: Binding activity is changed
        '400':
          description: |
            Invalid input data

            | Code | Message                        |
            |------|--------------------------------|
            | 36   | Binding already is deactivated |
          content:
            application/json:
              schema:
                required:
                  - code
                  - message
                type: object
                properties:
                  code:
                    $ref: '#/components/schemas/UnsuccessResultCode'
                  message:
                    $ref: '#/components/schemas/UnsuccessResultMessage'
                  validations:
                    $ref: '#/components/schemas/Validations'
              example:
                code: '36'
                message: Binding already is deactivated
        '404':
          $ref: '#/components/responses/404_binding'
        '405':
          $ref: '#/components/responses/405'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
  /binding/{bindingId}:
    delete:
      tags:
        - Binding Management
      summary: Delete Binding
      description: Deleting of the binding.
      operationId: deleteBinding
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Merchant-ID'
        - $ref: '#/components/parameters/Order-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/bindingId'
      responses:
        '204':
          description: Binding is deleted
        '404':
          $ref: '#/components/responses/404_binding'
        '405':
          $ref: '#/components/responses/405'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
  /currencies:
    get:
      tags:
        - Dictionaries
      summary: Get Currency List
      description: Getting a currency dictionary.
      operationId: getCurrencyList
      deprecated: true
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Merchant-ID'
        - $ref: '#/components/parameters/Order-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CurrencyInList'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
  /dictionaries/currencies:
    get:
      tags:
        - Dictionaries
      summary: Get Currency List
      description: Getting a currency dictionary.
      operationId: getCurrencyDictionary
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Merchant-ID'
        - $ref: '#/components/parameters/Order-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - currencies
                  - cryptoNetworks
                properties:
                  currencies:
                    type: array
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/FiatCurrencyInList'
                        - $ref: '#/components/schemas/CryptoCurrencyInList'
                      discriminator:
                        propertyName: category
                        mapping:
                          FIAT: '#/components/schemas/FiatCurrencyInList'
                          CRYPTO: '#/components/schemas/CryptoCurrencyInList'
                  cryptoNetworks:
                    type: array
                    items:
                      $ref: '#/components/schemas/CryptoNetworkInList'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
  /payment-page/config:
    post:
      tags:
        - Payment Page Editor
      summary: Payment Page Configuration Creation
      description: |
        Creating a payment page configuration.
      operationId: createPaymentPageConfig
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Merchant-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - required:
                    - name
                    - preview
                    - isActive
                    - styles
                - $ref: '#/components/schemas/RequestPaymentPageConfig'
        required: true
      responses:
        '201':
          description: Payment page configuration is created
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - creationDate
                  - isActive
                  - styles
                properties:
                  config:
                    $ref: '#/components/schemas/ResponsePaymentPageConfig'
        '400':
          description: |
            Invalid input data

            | Code | Message          | 
            |------|------------------|
            | 99   | Validation error |

            `validations` block with invalid fields will be present for `Validation error` case.

            Validation table

            | Field                       | Error         | 
            |-----------------------------|---------------|
            | Any field                   | Invalid value |
          content:
            application/json:
              schema:
                required:
                  - code
                  - message
                type: object
                properties:
                  code:
                    $ref: '#/components/schemas/UnsuccessResultCode'
                  message:
                    $ref: '#/components/schemas/UnsuccessResultMessage'
                  validations:
                    $ref: '#/components/schemas/Validations'
              example:
                code: '99'
                message: Validation error
                validations:
                  - field: styles.accentColor
                    error: Invalid value
        '405':
          $ref: '#/components/responses/405'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
  /payment-page/configs:
    get:
      tags:
        - Payment Page Editor
      summary: Get Payment Page Configuration List
      description: |
        Getting a payment page configuration list.
      operationId: getPaymentPageConfigList
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Merchant-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/filter-merchant-id-list'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - pageNumber
                  - pageSize
                  - totalPages
                  - totalCount
                properties:
                  data:
                    type: array
                    items:
                      allOf:
                        - $ref: '#/components/schemas/ResponsePaymentPageConfig'
                        - required:
                            - id
                            - creationDate
                            - isActive
                            - styles
                  pageNumber:
                    $ref: '#/components/schemas/PageNumber'
                  pageSize:
                    $ref: '#/components/schemas/PageSize'
                  totalPages:
                    $ref: '#/components/schemas/TotalPages'
                  totalCount:
                    $ref: '#/components/schemas/TotalCount'
        '405':
          $ref: '#/components/responses/405'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
  /payment-page/config/{paymentPageConfigId}:
    put:
      tags:
        - Payment Page Editor
      summary: Update Payment Page Configuration
      description: |
        Updating a payment page configuration.
      operationId: updatePaymentPageConfig
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Merchant-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/paymentPageConfigId'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - required:
                    - name
                    - preview
                    - isActive
                    - styles
                - $ref: '#/components/schemas/RequestPaymentPageConfig'
        required: true
      responses:
        '200':
          description: Payment page configuration is updated
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - creationDate
                  - isActive
                  - styles
                properties:
                  config:
                    $ref: '#/components/schemas/ResponsePaymentPageConfig'
        '400':
          description: |
            Invalid input data

            | Code | Message          | 
            |------|------------------|
            | 99   | Validation error |

            `validations` block with invalid fields will be present for `Validation error` case.

            Validation table

            | Field                       | Error         | 
            |-----------------------------|---------------|
            | Any field                   | Invalid value |
          content:
            application/json:
              schema:
                required:
                  - code
                  - message
                type: object
                properties:
                  code:
                    $ref: '#/components/schemas/UnsuccessResultCode'
                  message:
                    $ref: '#/components/schemas/UnsuccessResultMessage'
                  validations:
                    $ref: '#/components/schemas/Validations'
              example:
                code: '99'
                message: Validation error
                validations:
                  - field: isActive
                    error: Invalid value
        '405':
          $ref: '#/components/responses/405'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
    patch:
      tags:
        - Payment Page Editor
      summary: Partially Update Payment Page Configuration
      description: |
        Partially updating a payment page configuration.
      operationId: partiallyUpdatePaymentPageConfig
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Merchant-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/paymentPageConfigId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BasePaymentPageConfig'
        required: true
      responses:
        '200':
          description: Payment page configuration is updated
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - creationDate
                  - isActive
                  - styles
                properties:
                  config:
                    $ref: '#/components/schemas/ResponsePaymentPageConfig'
        '400':
          description: |
            Invalid input data

            | Code | Message          | 
            |------|------------------|
            | 99   | Validation error |

            `validations` block with invalid fields will be present for `Validation error` case.

            Validation table

            | Field                       | Error         | 
            |-----------------------------|---------------|
            | Any field                   | Invalid value |
          content:
            application/json:
              schema:
                required:
                  - code
                  - message
                type: object
                properties:
                  code:
                    $ref: '#/components/schemas/UnsuccessResultCode'
                  message:
                    $ref: '#/components/schemas/UnsuccessResultMessage'
                  validations:
                    $ref: '#/components/schemas/Validations'
              example:
                code: '99'
                message: Validation error
                validations:
                  - field: isActive
                    error: Invalid value
        '405':
          $ref: '#/components/responses/405'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
    delete:
      tags:
        - Payment Page Editor
      summary: Delete Payment Page Config
      description: |
        Deleting a payment page configuration.
      operationId: deletePaymentPageConfig
      parameters:
        - $ref: '#/components/parameters/Tenant-ID'
        - $ref: '#/components/parameters/Subdivision-ID'
        - $ref: '#/components/parameters/Merchant-ID'
        - $ref: '#/components/parameters/Order-ID'
        - $ref: '#/components/parameters/Is-SuperAdmin'
        - $ref: '#/components/parameters/Request-ID'
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/paymentPageConfigId'
      responses:
        '204':
          description: Payment page configuration is deleted
        '404':
          $ref: '#/components/responses/404_binding'
        '405':
          $ref: '#/components/responses/405'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
components:
  schemas:
    BaseOrder:
      allOf:
        - type: object
          required:
            - referenceNumber
            - totalAmount
            - callbackUrl
          properties:
            referenceNumber:
              allOf:
                - $ref: '#/components/schemas/ReferenceNumber'
                - description: Order identifier in the merchant system
            payerId:
              allOf:
                - $ref: '#/components/schemas/PayerID'
                - deprecated: true
            terminalId:
              $ref: '#/components/schemas/POSTerminalID'
            purpose:
              $ref: '#/components/schemas/OrderPurpose'
            redirectUrl:
              $ref: '#/components/schemas/RedirectURL'
            merchantUrl:
              $ref: '#/components/schemas/MerchantURL'
            intermediateResultPageOptions:
              $ref: '#/components/schemas/IntermediateResultPageOptions'
            callbackUrl:
              $ref: '#/components/schemas/CallbackURL'
            shippingAddress:
              $ref: '#/components/schemas/ShippingAddress'
            requestor:
              type: object
              properties:
                application:
                  type: object
                  properties:
                    name:
                      $ref: '#/components/schemas/RequestorApplicationName'
                    version:
                      $ref: '#/components/schemas/RequestorApplicationVersion'
                customData:
                  $ref: '#/components/schemas/RequestorCustomData'
            tags:
              type: object
              maxProperties: 15
              description: |
                List of custom tags for additional coloring of the order.  
                Defined as a key-value set bounded by strict rules.  
                Max length of each key name is 63 characters.  
              additionalProperties:
                type: string
                maxLength: 255
        - $ref: '#/components/schemas/OrderListParams'
    BaseResponseOrder:
      allOf:
        - $ref: '#/components/schemas/BaseOrder'
        - type: object
          required:
            - id
            - status
            - serviceChannel
            - expirationDate
            - sessionToken
            - availablePaymentMethods
            - availableCardSchemes
            - availableCardProductCategories
            - redirectUrl
            - purpose
          properties:
            id:
              $ref: '#/components/schemas/OrderID'
            status:
              $ref: '#/components/schemas/OrderStatus'
            serviceChannel:
              $ref: '#/components/schemas/ServiceChannel'
            totalAmount:
              allOf:
                - $ref: '#/components/schemas/ExtendedAmount'
                - description: Total amount for order
            subtotals:
              type: array
              items:
                allOf:
                  - $ref: '#/components/schemas/BaseSubtotal'
                  - type: object
                    properties:
                      amount:
                        allOf:
                          - $ref: '#/components/schemas/ExtendedAmount'
                          - description: A subtotal amount for the order
            refundedAmount:
              allOf:
                - $ref: '#/components/schemas/ExtendedAmount'
                - description: Refund amount
            recurrence:
              allOf:
                - $ref: '#/components/schemas/BaseRecurrence'
                - type: object
                  properties:
                    amount:
                      allOf:
                        - $ref: '#/components/schemas/ExtendedAmount'
                        - description: Amount of recurrence payment
                    maxAmount:
                      allOf:
                        - $ref: '#/components/schemas/ExtendedAmount'
                        - description: Max amount of each subsequent payment.
            paymentPageUrl:
              $ref: '#/components/schemas/PaymentPageURL'
            shortPaymentPageUrl:
              $ref: '#/components/schemas/ShortPaymentPageURL'
            expirationDate:
              $ref: '#/components/schemas/OrderExpirationDate'
            sessionToken:
              $ref: '#/components/schemas/SessionToken'
            description:
              type: object
              properties:
                textDescription:
                  $ref: '#/components/schemas/OrderTextDescription'
                items:
                  type: array
                  items:
                    $ref: '#/components/schemas/ResponseItem'
    RequestOrder:
      allOf:
        - $ref: '#/components/schemas/BaseOrder'
        - type: object
          properties:
            totalAmount:
              allOf:
                - $ref: '#/components/schemas/BaseAmount'
                - description: Total amount for order
            description:
              type: object
              properties:
                textDescription:
                  $ref: '#/components/schemas/OrderTextDescription'
                items:
                  type: array
                  items:
                    $ref: '#/components/schemas/RequestItem'
            subtotals:
              type: array
              items:
                allOf:
                  - $ref: '#/components/schemas/BaseSubtotal'
                  - type: object
                    properties:
                      amount:
                        allOf:
                          - $ref: '#/components/schemas/BaseAmount'
                          - description: A subtotal amount for the order
            payer:
              allOf:
                - $ref: '#/components/schemas/BaseNotMaskedPayer'
                - type: object
                  properties:
                    contactPhone:
                      allOf:
                        - $ref: '#/components/schemas/BaseNotMaskedPhone'
                        - type: object
                          properties:
                            country:
                              $ref: '#/components/schemas/CountryAlpha2Code'
                            fullNumber:
                              $ref: '#/components/schemas/FullPhoneNumber'
                        - description: |
                            Phone number can be provided in 3 combinations:  
                            * countryCode + nationalNumber
                            * country + fullNumber (domestic format)
                            * fullNumber (international format)

                            The phone will not be saved for the order if it cannot be parsed as valid phone number.
                    address:
                      allOf:
                        - $ref: '#/components/schemas/BasePayerAddress'
                        - $ref: '#/components/schemas/NotMaskedPayerAddressData'
                        - description: |
                            Should be present for order with the `purpose` field in the `TRANSFER` value.
                - description: |
                    `firstName`, `lastName`, and `address` fields should be present for order with the `purpose` field in the `TRANSFER` value.  
                    The payer will have to provide this data manually at next stages of payment if  not provided during the order registration request. As a result, the payer can change his mind about making the payment.
            payee:
              allOf:
                - $ref: '#/components/schemas/BaseNotMaskedPayee'
                - type: object
                  properties:
                    account:
                      allOf:
                        - $ref: '#/components/schemas/NotMaskedCounterpartyAccount'
                        - description: |
                            Must be present for order with the `purpose` field in the `TRANSFER` value.
                    address:
                      allOf:
                        - $ref: '#/components/schemas/BasePayeeAddress'
                        - $ref: '#/components/schemas/NotMaskedPayeeAddressData'
                        - description: |
                            Must be present for order with the `purpose` field in the `TRANSFER` value.
                - description: |
                    `firstName`, `lastName`, `account`, and `address` fields must be present for order with the `purpose` field in the `TRANSFER` value.
            useIntermediateResultPage:
              $ref: '#/components/schemas/UseIntermediateResultPage'
            expirationOptions:
              $ref: '#/components/schemas/ExpirationOptions'
            recurrence:
              allOf:
                - $ref: '#/components/schemas/BaseRecurrence'
                - type: object
                  properties:
                    amount:
                      allOf:
                        - $ref: '#/components/schemas/BaseAmount'
                        - description: Amount of recurrence payment
                    maxAmount:
                      allOf:
                        - $ref: '#/components/schemas/BaseAmount'
                        - description: |
                            Max amount of each subsequent payment.  
                            Currency must be equal to order currency.
            shortPaymentPageUrlIsNeeded:
              $ref: '#/components/schemas/ShortPaymentPageUrlIsNeeded'
            '-myguavaOpenbanking-':
              $ref: '#/components/schemas/MyGuavaOpenbanking'
    OrderListParams:
      allOf:
        - type: object
          properties:
            availablePaymentMethods:
              type: array
              items:
                $ref: '#/components/schemas/PaymentMethod'
            availableCardSchemes:
              type: array
              items:
                $ref: '#/components/schemas/CardScheme'
            availableCardProductCategories:
              type: array
              items:
                $ref: '#/components/schemas/CardProductCategory'
            availablePaymentCurrencies:
              type: array
              items:
                $ref: '#/components/schemas/Currency'
            availableCryptoNetworks:
              type: array
              items:
                $ref: '#/components/schemas/CryptoNetworkCurrencyPair'
    OrderIndividualParams:
      allOf:
        - type: object
          properties:
            purpose:
              $ref: '#/components/schemas/OrderPurpose'
            useIntermediateResultPage:
              $ref: '#/components/schemas/UseIntermediateResultPage'
            shortPaymentPageUrlIsNeeded:
              $ref: '#/components/schemas/ShortPaymentPageUrlIsNeeded'
    ServerResponseOrder:
      allOf:
        - $ref: '#/components/schemas/BaseResponseOrder'
        - type: object
          properties:
            payer:
              allOf:
                - $ref: '#/components/schemas/BaseNotMaskedPayer'
                - type: object
                  properties:
                    contactPhone:
                      $ref: '#/components/schemas/BaseNotMaskedPhone'
                    address:
                      allOf:
                        - $ref: '#/components/schemas/BasePayerAddress'
                        - $ref: '#/components/schemas/NotMaskedPayerAddressData'
            payee:
              allOf:
                - $ref: '#/components/schemas/BaseNotMaskedPayee'
                - type: object
                  properties:
                    account:
                      $ref: '#/components/schemas/MaskedCounterpartyAccount'
                    address:
                      allOf:
                        - $ref: '#/components/schemas/BasePayeeAddress'
                        - $ref: '#/components/schemas/NotMaskedPayeeAddressData'
    ClientOrServerResponseOrder:
      allOf:
        - $ref: '#/components/schemas/BaseResponseOrder'
        - type: object
          properties:
            payer:
              allOf:
                - $ref: '#/components/schemas/BaseNotMaskedPayer'
                - type: object
                  properties:
                    contactPhone:
                      $ref: '#/components/schemas/BaseNotMaskedPhone'
                    maskedFirstName:
                      $ref: '#/components/schemas/MaskedPayerFirstName'
                    maskedLastName:
                      $ref: '#/components/schemas/MaskedPayerLastName'
                    maskedDateOfBirth:
                      $ref: '#/components/schemas/MaskedPayerDateOfBirth'
                    maskedContactEmail:
                      $ref: '#/components/schemas/MaskedEmail'
                    maskedContactPhone:
                      $ref: '#/components/schemas/MaskedPhone'
                    address:
                      allOf:
                        - $ref: '#/components/schemas/BasePayerAddress'
                        - $ref: '#/components/schemas/NotMaskedPayerAddressData'
                        - $ref: '#/components/schemas/MaskedPayerAddressData'
                - description: Masked data returns for requests by session token. Not masked data returns for requests by API key.
            payee:
              allOf:
                - $ref: '#/components/schemas/BaseNotMaskedPayee'
                - type: object
                  properties:
                    maskedFirstName:
                      $ref: '#/components/schemas/MaskedPayeeFirstName'
                    maskedLastName:
                      $ref: '#/components/schemas/MaskedPayeeLastName'
                    maskedDateOfBirth:
                      $ref: '#/components/schemas/MaskedPayeeDateOfBirth'
                    account:
                      $ref: '#/components/schemas/MaskedCounterpartyAccount'
                    address:
                      allOf:
                        - $ref: '#/components/schemas/BasePayeeAddress'
                        - $ref: '#/components/schemas/NotMaskedPayeeAddressData'
                        - $ref: '#/components/schemas/MaskedPayeeAddressData'
    PaymentLink:
      type: object
      required:
        - name
        - id
        - creationDate
        - url
      properties:
        name:
          $ref: '#/components/schemas/PaymentLinkName'
        id:
          $ref: '#/components/schemas/PaymentLinkID'
        creationDate:
          $ref: '#/components/schemas/PaymentLinkCreationDate'
        url:
          $ref: '#/components/schemas/ShortPaymentPageURL'
    PaymentLinkList:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/PaymentLinkID'
        name:
          $ref: '#/components/schemas/PaymentLinkName'
        status:
          $ref: '#/components/schemas/OrderStatus'
        totalAmount:
          allOf:
            - $ref: '#/components/schemas/ExtendedAmount'
            - description: Total amount for order
        creationDate:
          $ref: '#/components/schemas/PaymentLinkCreationDate'
        expirationDate:
          $ref: '#/components/schemas/OrderExpirationDate'
        url:
          $ref: '#/components/schemas/ShortPaymentPageURL'
    Payment:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/TransactionID'
        date:
          $ref: '#/components/schemas/TransactionDate'
        exchangeRate:
          $ref: '#/components/schemas/ExchangeRate'
        amount:
          allOf:
            - $ref: '#/components/schemas/ExtendedAmount'
            - description: Total amount for payment
        referenceNumber:
          allOf:
            - $ref: '#/components/schemas/ReferenceNumber'
            - description: Payment identifier in the merchant system
        result:
          $ref: '#/components/schemas/UnsuccessTransactionResult'
        rrn:
          $ref: '#/components/schemas/RRN'
        authCode:
          $ref: '#/components/schemas/AuthCode'
        paymentMethod:
          oneOf:
            - $ref: '#/components/schemas/DisplayedPaymentCardMethod'
            - $ref: '#/components/schemas/DisplayedBindingMethod'
            - $ref: '#/components/schemas/DisplayedApplePayMethod'
            - $ref: '#/components/schemas/DisplayedGooglePayMethod'
            - $ref: '#/components/schemas/DisplayedBankAccountMethod'
            - $ref: '#/components/schemas/DisplayedClickToPayMethod'
            - $ref: '#/components/schemas/DisplayedCryptocurrencyMethod'
            - $ref: '#/components/schemas/DisplayedPayPalMethod'
          discriminator:
            propertyName: type
            mapping:
              PAYMENT_CARD: '#/components/schemas/DisplayedPaymentCardMethod'
              PAYMENT_CARD_BINDING: '#/components/schemas/DisplayedBindingMethod'
              APPLE_PAY: '#/components/schemas/DisplayedApplePayMethod'
              GOOGLE_PAY: '#/components/schemas/DisplayedGooglePayMethod'
              BANK_ACCOUNT: '#/components/schemas/DisplayedBankAccountMethod'
              CLICK_TO_PAY: '#/components/schemas/DisplayedClickToPayMethod'
              CRYPTOCURRENCY: '#/components/schemas/DisplayedCryptocurrencyMethod'
              PAYPAL_WALLET: '#/components/schemas/DisplayedPayPalMethod'
        reversal:
          $ref: '#/components/schemas/Reversal'
    Refund:
      type: object
      required:
        - amount
      properties:
        id:
          $ref: '#/components/schemas/TransactionID'
        date:
          $ref: '#/components/schemas/TransactionDate'
        originalId:
          $ref: '#/components/schemas/TransactionID'
        result:
          $ref: '#/components/schemas/UnsuccessTransactionResult'
        rrn:
          $ref: '#/components/schemas/RRN'
        authCode:
          $ref: '#/components/schemas/AuthCode'
        reason:
          $ref: '#/components/schemas/Reason'
        amount:
          allOf:
            - $ref: '#/components/schemas/ExtendedAmount'
            - description: Refund amount
        items:
          type: array
          items:
            $ref: '#/components/schemas/ResponseItem'
    Reversal:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/UnsuccessTransactionResult'
        reason:
          $ref: '#/components/schemas/Reason'
    BasePayer:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/PayerID'
    BasePayee:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/PayeeID'
    BaseNotMaskedPayee:
      allOf:
        - $ref: '#/components/schemas/BasePayee'
        - type: object
          properties:
            firstName:
              $ref: '#/components/schemas/NotMaskedPayeeFirstName'
            lastName:
              $ref: '#/components/schemas/NotMaskedPayeeLastName'
            dateOfBirth:
              $ref: '#/components/schemas/NotMaskedPayeeDateOfBirth'
    BaseCounterpartyAccount:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/CounterpartyAccountType'
    NotMaskedCounterpartyAccount:
      allOf:
        - $ref: '#/components/schemas/BaseCounterpartyAccount'
        - type: object
          properties:
            value:
              $ref: '#/components/schemas/NotMaskedCounterpartyAccountValue'
    MaskedCounterpartyAccount:
      allOf:
        - $ref: '#/components/schemas/BaseCounterpartyAccount'
        - type: object
          properties:
            value:
              $ref: '#/components/schemas/MaskedCounterpartyAccountValue'
    BasePayeeAddress:
      type: object
      properties:
        country:
          allOf:
            - $ref: '#/components/schemas/CountryAlpha2Code'
            - description: |
                2-letter ISO 3166-1 country code.  
                Must be present for order with the `purpose` field in the `TRANSFER` value.
        city:
          allOf:
            - $ref: '#/components/schemas/CityName'
            - $ref: '#/components/schemas/AFTFieldsPattern'
            - maxLength: 25
              description: |
                City name.  
                Must be present for order with the `purpose` field in the `TRANSFER` value.
        state:
          allOf:
            - $ref: '#/components/schemas/State'
            - description: |
                ISO 3166-2 subdivision code.  
                Must be present always when `country` field provided with `Canada` or `United States` value.
    NotMaskedPayeeAddressData:
      type: object
      properties:
        zipCode:
          allOf:
            - $ref: '#/components/schemas/ZIPCode'
            - $ref: '#/components/schemas/AFTFieldsPattern'
            - maxLength: 10
              description: |
                ZIP code.  
                Must be present for order with the `purpose` field in the `TRANSFER` value.
        addressLine1:
          allOf:
            - $ref: '#/components/schemas/AddressLine'
            - $ref: '#/components/schemas/AFTFieldsPattern'
            - maxLength: 50
              description: |
                Address line 1.  
                Must be present for order with the `purpose` field in the `TRANSFER` value.
        addressLine2:
          allOf:
            - $ref: '#/components/schemas/AddressLine'
            - $ref: '#/components/schemas/AFTFieldsPattern'
            - maxLength: 50
              description: Address line 2.
    MaskedPayeeAddressData:
      type: object
      properties:
        maskedZipCode:
          allOf:
            - $ref: '#/components/schemas/MaskedZIPCode'
            - description: |
                ZIP code.  
                Should be present for order with the `purpose` field in the `TRANSFER` value.
        maskedAddressLine1:
          allOf:
            - $ref: '#/components/schemas/MaskedAddressLine'
            - description: |
                Address line 1.  
                Should be present for order with the `purpose` field in the `TRANSFER` value.
        maskedAddressLine2:
          allOf:
            - $ref: '#/components/schemas/MaskedAddressLine'
            - description: |
                Address line 2.
    BaseNotMaskedPayer:
      allOf:
        - $ref: '#/components/schemas/BasePayer'
        - type: object
          properties:
            availableInputModes:
              type: array
              description: List of available payer data input modes. Choice of data input mode must be provided to payer if this list has more that one values.
              items:
                $ref: '#/components/schemas/PayerDataInputMode'
            firstName:
              $ref: '#/components/schemas/NotMaskedPayerFirstName'
            lastName:
              $ref: '#/components/schemas/NotMaskedPayerLastName'
            dateOfBirth:
              $ref: '#/components/schemas/NotMaskedPayerDateOfBirth'
            contactEmail:
              $ref: '#/components/schemas/NotMaskedEmail'
    BasePhone:
      type: object
      properties:
        countryCode:
          $ref: '#/components/schemas/PhoneCountryCode'
    BaseNotMaskedPhone:
      allOf:
        - $ref: '#/components/schemas/BasePhone'
        - type: object
          properties:
            nationalNumber:
              $ref: '#/components/schemas/NationalPhoneNumber'
    MaskedPhone:
      allOf:
        - $ref: '#/components/schemas/BasePhone'
        - type: object
          properties:
            nationalNumber:
              $ref: '#/components/schemas/MaskedNationalPhoneNumber'
            formatted:
              $ref: '#/components/schemas/FormattedMaskedPhoneNumber'
    BasePayerAddress:
      type: object
      properties:
        country:
          allOf:
            - $ref: '#/components/schemas/CountryAlpha2Code'
            - description: |
                2-letter ISO 3166-1 ccountry code.  
                Should be present for order with the `purpose` field in the `TRANSFER` value.
        city:
          allOf:
            - $ref: '#/components/schemas/CityName'
            - $ref: '#/components/schemas/AFTFieldsPattern'
            - maxLength: 25
              description: |
                City name.  
                Should be present for order with the `purpose` field in the `TRANSFER` value.
        state:
          allOf:
            - $ref: '#/components/schemas/State'
            - description: |
                ISO 3166-2 subdivision code.  
                Must be present always when `country` field provided with `Canada` or `United States` value.
    NotMaskedPayerAddressData:
      type: object
      properties:
        zipCode:
          allOf:
            - $ref: '#/components/schemas/ZIPCode'
            - $ref: '#/components/schemas/AFTFieldsPattern'
            - maxLength: 10
              description: |
                ZIP code.  
                Should be present for order with the `purpose` field in the `TRANSFER` value.
        addressLine1:
          allOf:
            - $ref: '#/components/schemas/AddressLine'
            - $ref: '#/components/schemas/AFTFieldsPattern'
            - maxLength: 50
              description: |
                Address line 1.  
                Should be present for order with the `purpose` field in the `TRANSFER` value.
        addressLine2:
          allOf:
            - $ref: '#/components/schemas/AddressLine'
            - $ref: '#/components/schemas/AFTFieldsPattern'
            - maxLength: 50
              description: |
                Address line 2.
    MaskedPayerAddressData:
      type: object
      properties:
        maskedZipCode:
          allOf:
            - $ref: '#/components/schemas/MaskedZIPCode'
            - description: |
                ZIP code.  
                Should be present for order with the `purpose` field in the `TRANSFER` value.
        maskedAddressLine1:
          allOf:
            - $ref: '#/components/schemas/MaskedAddressLine'
            - description: |
                Address line 1.  
                Should be present for order with the `purpose` field in the `TRANSFER` value.
        maskedAddressLine2:
          allOf:
            - $ref: '#/components/schemas/MaskedAddressLine'
            - description: |
                Address line 2.
    BaseItem:
      type: object
      properties:
        barcodeNumber:
          type: string
          example: '5374835496745'
          description: Code of item by barcode
        vendorCode:
          type: string
          example: '32645326432'
          description: Code of product in the merchant system
        productProvider:
          type: string
          example: Apple
          description: Name of product provider (for marketplace)
        name:
          type: string
          example: Green tea
          description: Name of product item
        count:
          type: integer
          example: 1
          description: Count of product items
    RequestItem:
      allOf:
        - $ref: '#/components/schemas/BaseItem'
        - type: object
          properties:
            unitPrice:
              allOf:
                - $ref: '#/components/schemas/BaseAmount'
                - description: The price of one unit of item
            totalCost:
              allOf:
                - $ref: '#/components/schemas/BaseAmount'
                - description: Total cost of all units of item
            discountAmount:
              allOf:
                - $ref: '#/components/schemas/BaseAmount'
                - description: Amount of item discount
            taxAmount:
              allOf:
                - $ref: '#/components/schemas/BaseAmount'
                - description: Amount of item tax
    ResponseItem:
      allOf:
        - $ref: '#/components/schemas/BaseItem'
        - type: object
          properties:
            unitPrice:
              allOf:
                - $ref: '#/components/schemas/ExtendedAmount'
                - description: The price of one unit of item
            totalCost:
              allOf:
                - $ref: '#/components/schemas/ExtendedAmount'
                - description: Total cost of all units of item
            discountAmount:
              allOf:
                - $ref: '#/components/schemas/ExtendedAmount'
                - description: Amount of item discount
            taxAmount:
              allOf:
                - $ref: '#/components/schemas/ExtendedAmount'
                - description: Amount of item tax
    BaseRecurrence:
      type: object
      description: Block of recurrence of order. Recurrence currency must be equal to total amount currency.
      properties:
        execution:
          $ref: '#/components/schemas/RecurrenceExecution'
        initialOperation:
          $ref: '#/components/schemas/RecurrenceInitialOperation'
        description:
          $ref: '#/components/schemas/RecurrenceDescription'
        schedule:
          $ref: '#/components/schemas/RecurrenceSchedule'
        startDate:
          $ref: '#/components/schemas/RecurrenceStartDate'
        endDate:
          $ref: '#/components/schemas/RecurrenceEndDate'
    BaseAmount:
      type: object
      required:
        - baseUnits
        - currency
      properties:
        baseUnits:
          $ref: '#/components/schemas/BaseUnitsAmount'
        currency:
          $ref: '#/components/schemas/Currency'
    ExtendedAmount:
      allOf:
        - $ref: '#/components/schemas/BaseAmount'
        - type: object
          required:
            - minorSubunits
            - localized
          properties:
            minorSubunits:
              $ref: '#/components/schemas/MinorSubunitsAmount'
            localized:
              $ref: '#/components/schemas/LocalizedAmount'
    BaseSubtotal:
      type: object
      description: Block of subtotals for the order
      properties:
        name:
          $ref: '#/components/schemas/SubtotalName'
        direction:
          $ref: '#/components/schemas/SubtotalDirection'
    MyGuavaOpenbanking:
      type: object
      description: A subtotal amount for the order
      properties:
        payee:
          type: object
          properties:
            name:
              $ref: '#/components/schemas/OpenbankingPayeeName'
            account:
              type: object
              properties:
                sortCode:
                  $ref: '#/components/schemas/OpenbankingUKDomesticSortCode'
                number:
                  $ref: '#/components/schemas/OpenbankingUKDomesticAccountNumber'
            address:
              type: object
              properties:
                country:
                  $ref: '#/components/schemas/CountryAlpha2Code'
                city:
                  $ref: '#/components/schemas/CityName'
                street:
                  $ref: '#/components/schemas/Street'
                buildingNumber:
                  $ref: '#/components/schemas/BuildingNumber'
                zipCode:
                  $ref: '#/components/schemas/ZIPCode'
    YapilyInstitution:
      type: object
      required:
        - id
        - name
        - icon
        - logo
      properties:
        id:
          $ref: '#/components/schemas/InstitutionID'
        name:
          $ref: '#/components/schemas/InstitutionName'
        countryCodes:
          type: array
          items:
            $ref: '#/components/schemas/CountryAlpha2Code'
        features:
          type: array
          items:
            $ref: '#/components/schemas/YapilyFeature'
        icon:
          $ref: '#/components/schemas/InstitutionIcon'
        logo:
          $ref: '#/components/schemas/InstitutionLogo'
    Institution:
      type: object
      required:
        - id
        - name
        - icon
        - logo
      properties:
        id:
          $ref: '#/components/schemas/InstitutionID'
        name:
          $ref: '#/components/schemas/InstitutionName'
        icon:
          $ref: '#/components/schemas/InstitutionIcon'
        logo:
          $ref: '#/components/schemas/InstitutionLogo'
        countryCodes:
          type: array
          items:
            $ref: '#/components/schemas/CountryAlpha2Code'
        features:
          type: array
          items:
            $ref: '#/components/schemas/YapilyFeature'
    DeviceData:
      type: object
      properties:
        browserData:
          type: object
          description: |
            Data required to start for 3D-Secure authentication by Browser-flow.
            > If this data is provided for payment, `threedsSdkData` must not be present. Providing of both fields will cause an error.
          properties:
            acceptHeader:
              type: string
              example: text/html, application/xhtml+xml, application/xml;q=0.9, */*;q=0.8
              description: Content of the HTTP accept headers
            userAgent:
              type: string
              example: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101 Firefox/47.0
              description: Content of the HTTP user-agent header
            javaScriptEnabled:
              type: boolean
              example: 'true'
              description: Parameter that specifies whether supporting JavaScript is enabled for the cardholder`s browser
            language:
              type: string
              example: ru-RU
              description: Language of the cardholder`s browser
            screenHeight:
              type: integer
              example: 968
              description: Height of the cardholder`s device screen
            screenWidth:
              type: integer
              example: 1024
              description: Width of the cardholder`s device screen
            timeZone:
              type: number
              example: 0
              description: Time zone of the cardholder`s browser
            timeZoneOffset:
              type: number
              example: 0
              description: Difference between UTC time and the cardholder`s browser local time, in minutes
            javaEnabled:
              type: boolean
              example: 'true'
              description: Parameter that specifies whether supporting Java is enabled for the cardholder`s browser
            screenColorDepth:
              type: integer
              example: 16
              description: Bit depth of the color palette for displaying images on the screen of the cardholder`s device
            sessionId:
              type: string
              example: 5f9adf5a-4796-4668-9285-07adf3c9a1aa
              description: |
                Payer's session identifier in the browser. If the page was reloaded or opened from another device, session id is changes
        ip:
          $ref: '#/components/schemas/IP'
        threedsSdkData:
          $ref: '#/components/schemas/ThreedsSDKData'
    PaymentCardMethod:
      required:
        - type
      type: object
      properties:
        type:
          type: string
          enum:
            - PAYMENT_CARD
        pan:
          $ref: '#/components/schemas/PAN'
        cvv2:
          $ref: '#/components/schemas/CVV2'
        expiryDate:
          $ref: '#/components/schemas/CardExpiryDate'
        cardholderName:
          $ref: '#/components/schemas/CardholderName'
    BindingMethod:
      required:
        - type
      type: object
      properties:
        type:
          type: string
          enum:
            - PAYMENT_CARD_BINDING
        bindingId:
          $ref: '#/components/schemas/BindingID'
        cvv2:
          $ref: '#/components/schemas/CVV2'
    ApplePayMethod:
      required:
        - type
        - payment
      type: object
      properties:
        type:
          type: string
          enum:
            - APPLE_PAY
        payment:
          $ref: '#/components/schemas/ApplePayment'
    GooglePayMethod:
      required:
        - type
        - paymentData
      type: object
      properties:
        type:
          type: string
          enum:
            - GOOGLE_PAY
        paymentData:
          $ref: '#/components/schemas/GooglePaymentData'
    BankAccountMethod:
      required:
        - type
      type: object
      properties:
        type:
          type: string
          enum:
            - BANK_ACCOUNT
        institutionId:
          $ref: '#/components/schemas/InstitutionID'
    ClickToPayMethod:
      required:
        - type
        - merchantTransactionId
        - dpaId
      type: object
      properties:
        type:
          type: string
          enum:
            - CLICK_TO_PAY
        dpaId:
          $ref: '#/components/schemas/DPAID'
        correlationId:
          $ref: '#/components/schemas/ClickToPayCorrelationID'
        flowId:
          $ref: '#/components/schemas/ClickToPayFlowID'
        merchantTransactionId:
          $ref: '#/components/schemas/ClickToPayMerchantTransactionId'
    CryptocurrencyMethod:
      required:
        - type
        - isPayerConsentReceived
        - cryptoNetwork
      type: object
      properties:
        type:
          type: string
          enum:
            - CRYPTOCURRENCY
        isPayerConsentReceived:
          $ref: '#/components/schemas/IsCryptocurrencyPayerConsentReceived'
        paymentResultEmailNotificationIsNeeded:
          $ref: '#/components/schemas/PaymentResultEmailNotificationIsNeeded'
        cryptoNetwork:
          $ref: '#/components/schemas/CryptoNetworkID'
    PayPalMethod:
      required:
        - type
      type: object
      properties:
        type:
          type: string
          enum:
            - PAYPAL_WALLET
    DisplayedPaymentCardMethod:
      required:
        - type
        - maskedPan
        - cardScheme
      type: object
      properties:
        type:
          type: string
          enum:
            - PAYMENT_CARD
        maskedPan:
          $ref: '#/components/schemas/MaskedPAN'
        cardScheme:
          $ref: '#/components/schemas/CardScheme'
        cardholderName:
          $ref: '#/components/schemas/CardholderName'
    DisplayedBindingMethod:
      required:
        - type
        - bindingId
        - cardScheme
      type: object
      properties:
        type:
          type: string
          enum:
            - PAYMENT_CARD_BINDING
        bindingId:
          $ref: '#/components/schemas/BindingID'
        cardScheme:
          $ref: '#/components/schemas/CardScheme'
        cardholderName:
          $ref: '#/components/schemas/CardholderName'
    DisplayedApplePayMethod:
      required:
        - type
        - maskedToken
        - cardScheme
      type: object
      properties:
        type:
          type: string
          enum:
            - APPLE_PAY
        maskedToken:
          $ref: '#/components/schemas/MaskedPAN'
        cardScheme:
          $ref: '#/components/schemas/CardScheme'
    DisplayedGooglePayMethod:
      required:
        - type
        - maskedToken
        - cardScheme
      type: object
      properties:
        type:
          type: string
          enum:
            - GOOGLE_PAY
        maskedToken:
          $ref: '#/components/schemas/MaskedPAN'
        cardScheme:
          $ref: '#/components/schemas/CardScheme'
    DisplayedBankAccountMethod:
      required:
        - type
        - institutionName
      type: object
      properties:
        type:
          type: string
          enum:
            - BANK_ACCOUNT
        institutionName:
          $ref: '#/components/schemas/InstitutionName'
        scheme:
          $ref: '#/components/schemas/OpenbankingScheme'
        account:
          oneOf:
            - $ref: '#/components/schemas/UKPayerDomesticAccount'
          discriminator:
            propertyName: type
            mapping:
              UK_DOMESTIC: '#/components/schemas/UKPayerDomesticAccount'
    DisplayedClickToPayMethod:
      required:
        - type
        - maskedToken
        - cardScheme
      type: object
      properties:
        type:
          type: string
          enum:
            - CLICK_TO_PAY
        maskedToken:
          $ref: '#/components/schemas/MaskedPAN'
        cardholderName:
          $ref: '#/components/schemas/CardholderName'
        cardScheme:
          $ref: '#/components/schemas/CardScheme'
    DisplayedCryptocurrencyMethod:
      required:
        - type
      type: object
      properties:
        type:
          type: string
          enum:
            - CRYPTOCURRENCY
        network:
          $ref: '#/components/schemas/CryptoNetworkID'
        cryptoTransactions:
          type: array
          items:
            $ref: '#/components/schemas/CryptoTransaction'
    DisplayedPayPalMethod:
      required:
        - type
      type: object
      properties:
        type:
          type: string
          enum:
            - PAYPAL_WALLET
        accountId:
          $ref: '#/components/schemas/PayPalAccountId'
        firstName:
          type: string
          example: John
          description: The first name of the payer.
        lastName:
          type: string
          example: Doe
          description: The last name of the payer.
        email:
          type: string
          description: E-mail address of the payer.
          example: example@example.com
    UKPayerDomesticAccount:
      required:
        - sortCode
        - number
      type: object
      properties:
        type:
          type: string
          enum:
            - UK_DOMESTIC
        sortCode:
          $ref: '#/components/schemas/OpenbankingUKDomesticSortCode'
        number:
          $ref: '#/components/schemas/UKPayerAccountNumber'
    CardAcceptorData:
      type: object
      required:
        - id
        - name
        - cardScheme
      description: A card acceptor details associated with a specific card scheme. Can be omitted only when merchant can accept payments via OpenBanking only.
      properties:
        id:
          $ref: '#/components/schemas/CardAcceptorID'
        name:
          $ref: '#/components/schemas/CardAcceptorName'
        cardScheme:
          $ref: '#/components/schemas/CardScheme'
    CustomerBusinessAddress:
      type: object
      required:
        - zipCode
        - country
      description: Customer business address data
      properties:
        country:
          $ref: '#/components/schemas/CountryAlpha2Code'
        city:
          $ref: '#/components/schemas/CityName'
        street:
          $ref: '#/components/schemas/Street'
        buildingNumber:
          $ref: '#/components/schemas/BuildingNumber'
        zipCode:
          $ref: '#/components/schemas/ZIPCode'
    Address:
      type: object
      required:
        - zipCode
        - country
      description: Address data
      properties:
        country:
          $ref: '#/components/schemas/CountryAlpha2Code'
        city:
          $ref: '#/components/schemas/CityName'
        street:
          $ref: '#/components/schemas/Street'
        buildingNumber:
          $ref: '#/components/schemas/BuildingNumber'
        zipCode:
          $ref: '#/components/schemas/ZIPCode'
    ExpirationOptions:
      description: Block with options that determine the order lifespan
      type: object
      properties:
        lifespanTimeoutSeconds:
          $ref: '#/components/schemas/OrderLifespanTimeoutSeconds'
        expirationDate:
          $ref: '#/components/schemas/OrderExpirationDate'
    ThreeDSMethodRequirements:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ThreeDSMethodData'
        url:
          $ref: '#/components/schemas/ACSURL'
    ThreeDSChallengeRequirements:
      type: object
      description: For Browser-flow will be present `data` and `url` fields. For Application-flow will be present `packedSdkChallengeParameters`.
      properties:
        data:
          $ref: '#/components/schemas/CReq'
        url:
          $ref: '#/components/schemas/ACSURL'
        packedSdkChallengeParameters:
          $ref: '#/components/schemas/ThreeDSPackedSDKChallengeParameters'
    ThreeDSSDKCreateTransactionRequirements:
      type: object
      description: 3DS SDK transaction requirements. This requirement needs to open a transaction in the 3DS SDK and then pass in the packed data in the following request.
      properties:
        messageVersion:
          $ref: '#/components/schemas/ThreeDSProtocolVersion'
        directoryServerID:
          $ref: '#/components/schemas/ThreeDSDirectoryServerID'
    OpenBankingAuthRequirements:
      type: object
      properties:
        authorizationUrl:
          $ref: '#/components/schemas/OpenBankingAuthUrl'
        qrCodeData:
          $ref: '#/components/schemas/QRCodeData'
        expirationDate:
          $ref: '#/components/schemas/OpenBankingAuthorizationExpirationDate'
    CryptocurrencyRequirements:
      type: object
      properties:
        walletAddress:
          $ref: '#/components/schemas/CryptocurrencyWalletAddress'
        expirationDate:
          $ref: '#/components/schemas/CryptocurrencyPaymentInitiationExpirationDate'
        networkName:
          $ref: '#/components/schemas/CryptocurrencyNetworkName'
        detectedAmount:
          allOf:
            - $ref: '#/components/schemas/ExtendedAmount'
            - description: Amount of all detected transactions for the order
    PayPalRequirements:
      type: object
      properties:
        actionUrl:
          $ref: '#/components/schemas/PayPalActionUrl'
        orderId:
          $ref: '#/components/schemas/PayPalOrderID'
    CryptoTransaction:
      type: object
      properties:
        hash:
          $ref: '#/components/schemas/CryptoTrasactionHash'
        payerWalletAddress:
          $ref: '#/components/schemas/CryptocurrencyWalletAddress'
        amount:
          $ref: '#/components/schemas/BaseUnitsAmount'
    FinishPageRedirectRequirements:
      type: object
      properties:
        url:
          $ref: '#/components/schemas/RedirectURL'
        message:
          $ref: '#/components/schemas/UnsuccessResultMessage'
    Merchant:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/MerchantName'
    CreatedApplePayMerchant:
      type: object
      required:
        - id
        - appleId
        - displayName
        - isReady
        - subdivisionId
        - tenantId
        - usageScheme
      properties:
        id:
          $ref: '#/components/schemas/MerchantID'
        subdivisionId:
          $ref: '#/components/schemas/SubdivisionID'
        tenantId:
          $ref: '#/components/schemas/TenantID'
        appleId:
          $ref: '#/components/schemas/AppleMerchantID'
        displayName:
          $ref: '#/components/schemas/MerchantName'
        usageScheme:
          $ref: '#/components/schemas/ApplePayUsageScheme'
        isReady:
          $ref: '#/components/schemas/ApplePayIsReady'
    CreatedGooglePayMerchant:
      type: object
      required:
        - id
        - displayName
        - isReady
        - subdivisionId
        - tenantId
      properties:
        id:
          $ref: '#/components/schemas/MerchantID'
        subdivisionId:
          $ref: '#/components/schemas/SubdivisionID'
        tenantId:
          $ref: '#/components/schemas/TenantID'
        googleMerchantId:
          $ref: '#/components/schemas/AppleMerchantID'
        displayName:
          $ref: '#/components/schemas/MerchantName'
        isReady:
          $ref: '#/components/schemas/ApplePayIsReady'
    ApplePayMerchant:
      type: object
      required:
        - id
        - appleId
        - name
        - usageScheme
        - isReady
      properties:
        id:
          $ref: '#/components/schemas/MerchantID'
        appleId:
          $ref: '#/components/schemas/AppleMerchantID'
        name:
          $ref: '#/components/schemas/MerchantName'
        usageScheme:
          $ref: '#/components/schemas/ApplePayUsageScheme'
        isReady:
          $ref: '#/components/schemas/ApplePayIsReady'
    ApplePayContext:
      type: object
      required:
        - appleId
        - name
        - isReady
      properties:
        appleId:
          $ref: '#/components/schemas/AppleMerchantID'
        displayName:
          $ref: '#/components/schemas/MerchantName'
        supportedCardSchemes:
          type: array
          description: List of supported for ApplePay card schemes for displaying in ApplePay form
          items:
            $ref: '#/components/schemas/CardScheme'
        isReady:
          $ref: '#/components/schemas/ApplePayIsReady'
    ApplePayCSRSubjectInfo:
      type: object
      required:
        - webAddress
        - emailAddress
        - country
        - city
        - organizationName
        - organizationUnit
      properties:
        webAddress:
          $ref: '#/components/schemas/ApplePayCSRWebAddressName'
        emailAddress:
          $ref: '#/components/schemas/ApplePayCSREmailAddress'
        country:
          $ref: '#/components/schemas/CountryAlpha2Code'
        city:
          $ref: '#/components/schemas/ApplePayCSRCityName'
        organizationName:
          $ref: '#/components/schemas/ApplePayCSROrganizationName'
        organizationUnit:
          $ref: '#/components/schemas/ApplePayCSROrganizationUnit'
    ApplePayCSR:
      type: object
      required:
        - id
        - name
        - certificateType
        - certificateId
        - subjectInfo
        - value
      properties:
        id:
          $ref: '#/components/schemas/ApplePayCSRID'
        name:
          $ref: '#/components/schemas/ApplePayCSRName'
        certificateType:
          $ref: '#/components/schemas/ApplePayCertificateType'
        certificateId:
          $ref: '#/components/schemas/ApplePayCertificateId'
        subjectInfo:
          $ref: '#/components/schemas/ApplePayCSRSubjectInfo'
        value:
          $ref: '#/components/schemas/ApplePayCSRValue'
    ApplePayCSRInList:
      type: object
      required:
        - id
        - name
        - certificateType
      properties:
        id:
          $ref: '#/components/schemas/ApplePayCSRID'
        name:
          $ref: '#/components/schemas/ApplePayCSRName'
        certificateType:
          $ref: '#/components/schemas/ApplePayCertificateType'
        certificateId:
          $ref: '#/components/schemas/ApplePayCertificateId'
    ApplePayProcessingCertificateInList:
      type: object
      required:
        - id
        - creationDate
        - expiryDate
        - activity
      properties:
        id:
          $ref: '#/components/schemas/AppleProcessingCertificateID'
        name:
          $ref: '#/components/schemas/ApplePayCertificateName'
        creationDate:
          $ref: '#/components/schemas/AppleProcessingCertificateCreationDate'
        expiryDate:
          $ref: '#/components/schemas/AppleProcessingCertificateExpiryDate'
        activity:
          $ref: '#/components/schemas/AppleProcessingCertificateActivity'
    ApplePayProcessingCertificate:
      type: object
      required:
        - id
        - creationDate
        - expiryDate
        - activity
        - value
      properties:
        id:
          $ref: '#/components/schemas/AppleProcessingCertificateID'
        name:
          $ref: '#/components/schemas/ApplePayCertificateName'
        csrId:
          $ref: '#/components/schemas/ApplePayCSRID'
        creationDate:
          $ref: '#/components/schemas/AppleProcessingCertificateCreationDate'
        expiryDate:
          $ref: '#/components/schemas/AppleProcessingCertificateExpiryDate'
        activity:
          $ref: '#/components/schemas/AppleProcessingCertificateActivity'
        value:
          $ref: '#/components/schemas/AppleProcessingCertificateValue'
    ApplePayIdentityCertificate:
      type: object
      required:
        - id
        - creationDate
        - expiryDate
        - value
      properties:
        id:
          $ref: '#/components/schemas/AppleIdentityCertificateID'
        csrId:
          $ref: '#/components/schemas/ApplePayCSRID'
        creationDate:
          $ref: '#/components/schemas/AppleIdentityCertificateCreationDate'
        expiryDate:
          $ref: '#/components/schemas/AppleIdentityCertificateExpiryDate'
        value:
          $ref: '#/components/schemas/AppleIdentityCertificateValue'
    GooglePayContext:
      type: object
      required:
        - googleId
        - name
        - gateway
        - gatewayMerchantId
      properties:
        googleId:
          $ref: '#/components/schemas/GoogleMerchantID'
        displayName:
          $ref: '#/components/schemas/MerchantName'
        gateway:
          $ref: '#/components/schemas/GoogleGateway'
        gatewayMerchantId:
          $ref: '#/components/schemas/GoogleGatewayMerchantID'
        allowedCardSchemes:
          type: array
          description: List of supported for GooglePay card schemes for displaying in GooglePay form
          items:
            $ref: '#/components/schemas/CardScheme'
    ClickToPayContext:
      type: object
      required:
        - dpaId
        - dpaName
        - supportedCardSchemes
        - supportedDynamicDataTypes
      properties:
        dpaId:
          $ref: '#/components/schemas/DPAID'
        dpaLegalName:
          $ref: '#/components/schemas/DPALegalName'
        dpaPresentationName:
          $ref: '#/components/schemas/DPAPresentationName'
        supportedCardSchemes:
          type: array
          items:
            $ref: '#/components/schemas/CardScheme'
        supportedDynamicDataTypes:
          type: array
          items:
            $ref: '#/components/schemas/ClickToPayDynamicDataType'
    PayPalContext:
      type: object
      required:
        - clientId
      properties:
        clientId:
          $ref: '#/components/schemas/PayPalClientID'
    BaseMerchant:
      type: object
      required:
        - id
        - name
        - subdivisionId
        - tenantId
        - customer
        - profiles
      properties:
        id:
          $ref: '#/components/schemas/MerchantID'
        name:
          $ref: '#/components/schemas/MerchantName'
        subdivisionId:
          $ref: '#/components/schemas/SubdivisionID'
        tenantId:
          $ref: '#/components/schemas/TenantID'
        customer:
          type: object
          required:
            - businessAddress
            - businessName
          properties:
            id:
              $ref: '#/components/schemas/CustomerID'
            businessAddress:
              $ref: '#/components/schemas/CustomerBusinessAddress'
            businessName:
              $ref: '#/components/schemas/CustomerBusinessName'
        url:
          $ref: '#/components/schemas/MerchantURL'
        mcc:
          $ref: '#/components/schemas/MerchantCategoryCode'
        cardAcceptorData:
          type: array
          items:
            $ref: '#/components/schemas/CardAcceptorData'
    MerchantRequest:
      allOf:
        - $ref: '#/components/schemas/BaseMerchant'
        - type: object
          properties:
            profiles:
              type: array
              items:
                $ref: '#/components/schemas/MerchantProcessingProfileRequest'
    MerchantResponse:
      allOf:
        - $ref: '#/components/schemas/BaseMerchant'
        - type: object
          properties:
            profiles:
              type: array
              items:
                $ref: '#/components/schemas/MerchantProcessingProfileResponse'
    ApplePayPseudoPspConfig:
      type: object
      required:
        - defaultAppleMerchantId
      properties:
        defaultAppleMerchantId:
          $ref: '#/components/schemas/AppleMerchantID'
    GooglePayGlobalConfig:
      type: object
      required:
        - gateway
      properties:
        defaultGoogleMerchantId:
          $ref: '#/components/schemas/GoogleMerchantID'
        gateway:
          $ref: '#/components/schemas/GoogleGateway'
        tokenDecryptionKeys:
          type: array
          items:
            $ref: '#/components/schemas/GooglePayTokenDecryptionKey'
    GooglePayTokenDecryptionKey:
      type: object
      required:
        - name
        - expirationDate
      properties:
        name:
          $ref: '#/components/schemas/GoogleTokenDecryptionKeyName'
        publicKey:
          $ref: '#/components/schemas/GoogleTokenDecryptionPublicKey'
        status:
          $ref: '#/components/schemas/GoogleTokenDecryptionKeyStatus'
        creationDate:
          $ref: '#/components/schemas/GoogleTokenDecryptionKeyCreationDate'
        expirationDate:
          $ref: '#/components/schemas/GoogleTokenDecryptionKeyExpirationDate'
    ClickToPayGlobalConfig:
      type: object
      required:
        - organizationId
        - supportedDynamicDataTypes
      properties:
        organizationId:
          $ref: '#/components/schemas/ClickToPayOrganizationID'
        supportedDynamicDataTypes:
          type: array
          items:
            $ref: '#/components/schemas/ClickToPayDynamicDataType'
        decryptionCertificates:
          type: array
          items:
            $ref: '#/components/schemas/ClickToPayDecryptionCertificate'
        signingCertificate:
          $ref: '#/components/schemas/MasterCardSigningCertificate'
    ClickToPayDecryptionCertificate:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ClickToPayCertificateID'
        name:
          $ref: '#/components/schemas/MasterCardCertificateName'
        creationDate:
          $ref: '#/components/schemas/MasterCardCertificateCreationDate'
        expirationDate:
          $ref: '#/components/schemas/MasterCardCertificateExpirationDate'
        status:
          $ref: '#/components/schemas/ClickToPayCertificateStatus'
    MasterCardSigningCertificate:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/MasterCardCertificateName'
        creationDate:
          $ref: '#/components/schemas/MasterCardCertificateCreationDate'
        expirationDate:
          $ref: '#/components/schemas/MasterCardCertificateExpirationDate'
    BaseABUMerchantRegistrationFile:
      type: object
      required:
        - id
        - name
        - status
        - creationDate
      properties:
        id:
          $ref: '#/components/schemas/ABUFileID'
        name:
          allOf:
            - $ref: '#/components/schemas/ABUFileName'
            - example: MCI.AR.R625.C.E0088708.D241121.T131538.A001
              description: Name of the merchant registration or deletion in the MasterCard Account Billing Updater file
        status:
          $ref: '#/components/schemas/ABUMerchantRegistrationFileStatus'
        creationDate:
          $ref: '#/components/schemas/ABUMerchantRegistrationFileCreationDate'
    ABUMerchantRegistrationFileBeforeResponse:
      allOf:
        - $ref: '#/components/schemas/BaseABUMerchantRegistrationFile'
        - type: object
          required:
            - merchants
          properties:
            merchants:
              type: array
              items:
                $ref: '#/components/schemas/ABUMerchantBeforeRegistration'
    ABUMerchantRegistrationFileAfterResponse:
      allOf:
        - $ref: '#/components/schemas/BaseABUMerchantRegistrationFile'
        - type: object
          required:
            - merchants
          properties:
            merchants:
              type: array
              items:
                $ref: '#/components/schemas/ABUMerchantAfterRegistration'
            responseFile:
              type: object
              properties:
                id:
                  $ref: '#/components/schemas/ABUFileID'
                name:
                  allOf:
                    - $ref: '#/components/schemas/ABUFileName'
                    - example: MCI.AR.T626.C.E0088708.D241121.T131538.A001
                      description: Name of the merchant registration or deletion in the MasterCard Account Billing Updater response file
    BaseABUMerchant:
      type: object
      required:
        - id
        - action
        - creationDate
      properties:
        id:
          $ref: '#/components/schemas/MerchantID'
        cardAcceptorId:
          $ref: '#/components/schemas/CardAcceptorID'
        cardAcceptorName:
          $ref: '#/components/schemas/CardAcceptorName'
        mcc:
          $ref: '#/components/schemas/MerchantCategoryCode'
        action:
          $ref: '#/components/schemas/ABUMerchantAction'
        creationDate:
          $ref: '#/components/schemas/ABUMerchantCreationDate'
    ABUMerchantBeforeRegistration:
      allOf:
        - $ref: '#/components/schemas/BaseABUMerchant'
        - type: object
          required:
            - registrationStatus
          properties:
            registrationStatus:
              $ref: '#/components/schemas/ABUMerchantBeforeRegistrationStatus'
    ABUMerchantAfterRegistration:
      allOf:
        - $ref: '#/components/schemas/BaseABUMerchant'
        - type: object
          required:
            - registrationStatus
          properties:
            registrationStatus:
              $ref: '#/components/schemas/ABUMerchantAfterRegistrationStatus'
            errorCodes:
              $ref: '#/components/schemas/ABUMerchantRegistrationErrorCodes'
    CreatedDPA:
      type: object
      required:
        - id
        - dpaName
        - supportedCardSchemes
      properties:
        id:
          $ref: '#/components/schemas/DPAID'
        status:
          $ref: '#/components/schemas/DPAStatus'
        legalName:
          $ref: '#/components/schemas/DPALegalName'
        presentationName:
          $ref: '#/components/schemas/DPAPresentationName'
        supportedCardSchemes:
          type: array
          items:
            $ref: '#/components/schemas/CardScheme'
        originDomains:
          type: array
          items:
            $ref: '#/components/schemas/Domain'
        url:
          $ref: '#/components/schemas/MerchantURL'
        address:
          $ref: '#/components/schemas/CustomerBusinessAddress'
        merchantId:
          $ref: '#/components/schemas/MerchantID'
        subdivisionId:
          $ref: '#/components/schemas/SubdivisionID'
        tenantId:
          $ref: '#/components/schemas/TenantID'
    DPAInList:
      type: object
      required:
        - id
        - status
        - name
        - merchantId
      properties:
        id:
          $ref: '#/components/schemas/DPAID'
        status:
          $ref: '#/components/schemas/DPAStatus'
        name:
          $ref: '#/components/schemas/DPAPresentationName'
        merchantId:
          $ref: '#/components/schemas/MerchantID'
    ABUGlobalConfig:
      type: object
      properties:
        ica:
          $ref: '#/components/schemas/MasterCardICA'
        endpoint:
          $ref: '#/components/schemas/MasterCardRoutingEndpoint'
        signingCertificate:
          $ref: '#/components/schemas/MasterCardSigningCertificate'
    PayPalGlobalConfig:
      type: object
      properties:
        apiKey:
          $ref: '#/components/schemas/PayPalSecretKey'
        clientId:
          $ref: '#/components/schemas/PayPalClientID'
    BindingInList:
      type: object
      required:
        - id
        - cardData
        - creationDate
        - lastUseDate
        - activity
      properties:
        id:
          $ref: '#/components/schemas/BindingID'
        payerId:
          $ref: '#/components/schemas/PayerID'
        creationDate:
          $ref: '#/components/schemas/BindingCtreationDate'
        lastUseDate:
          $ref: '#/components/schemas/BindingLastUseDate'
        activity:
          $ref: '#/components/schemas/BindingActivity'
        cardData:
          type: object
          required:
            - maskedPan
            - expiryDate
            - cardScheme
          properties:
            maskedPan:
              $ref: '#/components/schemas/MaskedPAN'
            expiryDate:
              $ref: '#/components/schemas/CardExpiryDate'
            cardScheme:
              $ref: '#/components/schemas/CardScheme'
        product:
          type: object
          required:
            - category
          properties:
            id:
              $ref: '#/components/schemas/CardProductID'
            brand:
              $ref: '#/components/schemas/CardBrand'
            categoty:
              $ref: '#/components/schemas/CardProductCategory'
    CurrencyInList:
      type: object
      required:
        - id
        - name
        - category
        - decimalPlaces
      properties:
        id:
          $ref: '#/components/schemas/Currency'
        name:
          $ref: '#/components/schemas/CurrencyName'
        displayCode:
          $ref: '#/components/schemas/CurrencyDisplayCode'
        displayName:
          $ref: '#/components/schemas/CurrencyDisplayName'
        category:
          $ref: '#/components/schemas/CurrencyCategory'
        network:
          $ref: '#/components/schemas/CryptoNetworkName'
        decimalPlaces:
          $ref: '#/components/schemas/CurrencyDecimalPlaces'
        logoUrl:
          $ref: '#/components/schemas/CurrencyLogoUrl'
    BaseCurrencyInList:
      type: object
      required:
        - id
        - name
        - decimalPlaces
      properties:
        id:
          $ref: '#/components/schemas/Currency'
        name:
          $ref: '#/components/schemas/CurrencyName'
        shortName:
          $ref: '#/components/schemas/CurrencyDisplayCode'
        displayName:
          $ref: '#/components/schemas/CurrencyDisplayName'
        decimalPlaces:
          $ref: '#/components/schemas/CurrencyDecimalPlaces'
        symbolIconUrl:
          $ref: '#/components/schemas/CurrencyLogoUrl'
    FiatCurrencyInList:
      allOf:
        - $ref: '#/components/schemas/BaseCurrencyInList'
        - type: object
          required:
            - category
          properties:
            category:
              allOf:
                - $ref: '#/components/schemas/CurrencyCategory'
                - enum:
                    - FIAT
    CryptoCurrencyInList:
      allOf:
        - $ref: '#/components/schemas/BaseCurrencyInList'
        - type: object
          required:
            - category
            - cryptoNetworks
          properties:
            category:
              allOf:
                - $ref: '#/components/schemas/CurrencyCategory'
                - enum:
                    - CRYPTO
            cryptoNetworks:
              type: object
              additionalProperties:
                type: object
                description: Valid property names are equal to crypto network identifier enum
                properties:
                  currencyName:
                    $ref: '#/components/schemas/CurrencyName'
                  currencyShortName:
                    $ref: '#/components/schemas/CurrencyDisplayCode'
                  currencyLogoUrl:
                    $ref: '#/components/schemas/CurrencyLogoUrl'
    CryptoNetworkInList:
      type: object
      required:
        - id
        - name
      properties:
        id:
          $ref: '#/components/schemas/CryptoNetworkID'
        name:
          $ref: '#/components/schemas/CryptoNetworkName'
        nativeCurrency:
          $ref: '#/components/schemas/Currency'
        logoUrl:
          $ref: '#/components/schemas/CryptoNetworkLogoUrl'
    CryptoNetworkCurrencyPair:
      type: object
      properties:
        currency:
          $ref: '#/components/schemas/Currency'
        network:
          $ref: '#/components/schemas/CryptoNetworkID'
    IntermediateResultPageOptions:
      type: object
      description: Can be used if `useIntermediateResultPage` in `true` value only
      properties:
        successMerchantUrl:
          $ref: '#/components/schemas/SuccessMerchantURL'
        unsuccessMerchantUrl:
          $ref: '#/components/schemas/UnsuccessMerchantURL'
        autoRedirectDelaySeconds:
          $ref: '#/components/schemas/AutoRedirectDelaySeconds'
    BasePaymentPageConfig:
      properties:
        name:
          $ref: '#/components/schemas/PaymentPageConfigName'
        isActive:
          type: boolean
    RequestPaymentPageConfig:
      allOf:
        - properties:
            styles:
              $ref: '#/components/schemas/PaymentPageStyles'
            preview:
              $ref: '#/components/schemas/PaymentPagePreview'
        - $ref: '#/components/schemas/BasePaymentPageConfig'
    PaymentPagePreview:
      type: object
      description: Payment page preview data
      properties:
        accentColor:
          $ref: '#/components/schemas/PaymentPageColor'
        backgroundColor:
          $ref: '#/components/schemas/PaymentPageColor'
        borderRadius:
          $ref: '#/components/schemas/PaymentPageRadius'
    ResponsePaymentPageConfig:
      allOf:
        - type: object
          properties:
            id:
              $ref: '#/components/schemas/PaymentPageConfigID'
            merchantId:
              $ref: '#/components/schemas/MerchantID'
            creationDate:
              $ref: '#/components/schemas/PaymentPageConfigCreationDate'
            styles:
              $ref: '#/components/schemas/PaymentPageStyles'
            preview:
              $ref: '#/components/schemas/PaymentPagePreview'
        - $ref: '#/components/schemas/BasePaymentPageConfig'
    SuccessTransactionResult:
      type: object
      properties:
        code:
          $ref: '#/components/schemas/SuccessResultCode'
        message:
          $ref: '#/components/schemas/SuccessResultMessage'
    UnsuccessTransactionResult:
      type: object
      properties:
        code:
          $ref: '#/components/schemas/UnsuccessResultCode'
        message:
          $ref: '#/components/schemas/UnsuccessResultMessage'
    BaseProcessingProfile:
      type: object
      required:
        - name
        - configs
      properties:
        name:
          $ref: '#/components/schemas/ProcessingProfileName'
        description:
          $ref: '#/components/schemas/ProcessingProfileDescription'
        owner:
          $ref: '#/components/schemas/ProcessingProfileOwner'
        activation:
          $ref: '#/components/schemas/ProcessingProfileActivation'
    BaseProcessingProfileWithID:
      allOf:
        - required:
            - id
            - owner
            - activation
        - type: object
          properties:
            id:
              $ref: '#/components/schemas/ProcessingProfileID'
        - $ref: '#/components/schemas/BaseProcessingProfile'
    GlobalProcessingProfileRequest:
      allOf:
        - required:
            - owner
            - activation
        - $ref: '#/components/schemas/BaseProcessingProfile'
        - type: object
          properties:
            configs:
              type: array
              items:
                $ref: '#/components/schemas/GlobalProcessingProfileConfig'
    GlobalProcessingProfileResponse:
      allOf:
        - $ref: '#/components/schemas/BaseProcessingProfileWithID'
        - type: object
          properties:
            configs:
              type: array
              items:
                $ref: '#/components/schemas/GlobalProcessingProfileConfig'
    MerchantProcessingProfileRequest:
      allOf:
        - $ref: '#/components/schemas/BaseProcessingProfile'
        - type: object
          properties:
            configs:
              type: array
              items:
                $ref: '#/components/schemas/MerchantProcessingProfileConfig'
    MerchantProcessingProfileResponse:
      allOf:
        - $ref: '#/components/schemas/BaseProcessingProfileWithID'
        - type: object
          properties:
            configs:
              type: array
              items:
                $ref: '#/components/schemas/MerchantProcessingProfileConfig'
    GlobalProcessingProfileConfig:
      type: object
      required:
        - activeFrom
        - routing
        - orderAllowance
        - orderDefaults
        - variables
      properties:
        activeFrom:
          $ref: '#/components/schemas/ProcessingProfileActivationDate'
        routing:
          type: array
          items:
            $ref: '#/components/schemas/ProcessingProfileRouting'
        orderAllowanceConditions:
          deprecated: true
          type: array
          items:
            $ref: '#/components/schemas/ProcessingProfileAllowanceOrderConditions'
        orderAllowance:
          $ref: '#/components/schemas/ProcessingProfileOrderAllowance'
        orderDefaults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessingProfileOrderDefaults'
        variables:
          $ref: '#/components/schemas/ProcessingProfileVariables'
    MerchantProcessingProfileConfig:
      type: object
      required:
        - activeFrom
        - variables
      properties:
        activeFrom:
          $ref: '#/components/schemas/ProcessingProfileActivationDate'
        variables:
          $ref: '#/components/schemas/ProcessingProfileVariables'
    ProcessingProfileOwner:
      type: object
      properties:
        tenantId:
          $ref: '#/components/schemas/TenantID'
        subdivisionId:
          $ref: '#/components/schemas/SubdivisionID'
        merchantId:
          $ref: '#/components/schemas/MerchantID'
    ProcessingProfileActivation:
      type: object
      properties:
        tenantId:
          $ref: '#/components/schemas/TenantID'
        subdivisionId:
          $ref: '#/components/schemas/SubdivisionID'
        merchantId:
          $ref: '#/components/schemas/MerchantID'
    ProcessingProfileRouting:
      type: object
      required:
        - conditions
        - processEngine
        - processId
        - reversalProcessId
      properties:
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/ProcessingProfileRoutingConditions'
        processEngine:
          $ref: '#/components/schemas/ProcessEngine'
        processId:
          $ref: '#/components/schemas/EngineProcessName'
        reversalProcessId:
          $ref: '#/components/schemas/ReversalEngineProcessName'
        processVariables:
          $ref: '#/components/schemas/ProcessingProfileProcessVariables'
        reversalProcessVariables:
          $ref: '#/components/schemas/ProcessingProfileProcessVariables'
        attributes:
          $ref: '#/components/schemas/RoutingAttributes'
    ProcessingProfileRoutingConditions:
      type: object
      properties:
        transactionTypes:
          type: array
          description: Block of available transaction types
          items:
            $ref: '#/components/schemas/TransactionType'
        paymentMethods:
          type: array
          description: Block of available payment methods
          items:
            $ref: '#/components/schemas/PaymentMethod'
        currencies:
          type: array
          description: Block of available currencies
          items:
            $ref: '#/components/schemas/Currency'
        cardSchemes:
          type: array
          description: Block of available card schemes
          items:
            $ref: '#/components/schemas/CardScheme'
        cardIssuerCountries:
          type: array
          description: |
            List of countries affiliated to cards available for the payment.
          items:
            $ref: '#/components/schemas/CountryAlpha2Code'
        purposes:
          type: array
          description: |
            List of purposes available for the payment.
          items:
            $ref: '#/components/schemas/OrderPurpose'
        moneyTransferEligible:
          $ref: '#/components/schemas/MoneyTransferEligibleFlag'
        recurrenceStages:
          type: array
          description: Block of available recurrence stages
          items:
            $ref: '#/components/schemas/RecurrenceStage'
        recurrenceInitialOperations:
          type: array
          description: Block of recurrence initial operations
          items:
            $ref: '#/components/schemas/RecurrenceInitialOperation'
        customPropertiesPresent:
          type: object
          description: Block of available custom properties
          properties:
            myguavaOpenbanking.payee:
              type: boolean
        originalRouteHasAttributes:
          $ref: '#/components/schemas/RoutingAttributes'
        contains:
          type: object
          description: Block of available custom properties
          properties:
            array:
              type: array
              items:
                type: string
                description: Some array element
                example:
                  - APPLE_PAY
                  - GOOGLE_PAY
            value:
              type: string
              description: Some comparison value
              example: APPLE_PAY
        anyOfConditions:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/ProcessingProfileRoutingConditions'
              - description: Block of child conditions with logical `OR` relation. At least one element of the array must return the `true` boolean value for successful allowance.
        allOfConditions:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/ProcessingProfileRoutingConditions'
              - description: Block of child conditions with logical `AND` relation. Each of elements of the array must return the `true` boolean value for successful allowance.
    RoutingAttributes:
      type: object
      properties:
        someKey1:
          type: string
          example: Some value 1
        someKey2:
          type: string
          example: Some value 2
        someKeyN:
          type: string
          example: Some value N
    ProcessingProfileAllowanceOrderConditions:
      type: object
      properties:
        currencies:
          type: array
          description: Block of available currencies
          items:
            $ref: '#/components/schemas/Currency'
        currencyCategories:
          type: array
          description: Block of available currency categories
          items:
            $ref: '#/components/schemas/CurrencyCategory'
        purposes:
          type: array
          description: |
            List of purposes available for the order.
          items:
            $ref: '#/components/schemas/OrderPurpose'
        shortPaymentPageUrlIsNeeded:
          $ref: '#/components/schemas/AllowanceShortPaymentPageUrlIsNeeded'
        allowedCardSchemes:
          type: array
          items:
            $ref: '#/components/schemas/CardScheme'
        terminalIdPresent:
          $ref: '#/components/schemas/AllowanceTerminalIdPresent'
        recurrencePresent:
          $ref: '#/components/schemas/AllowanceRecurrencePresent'
        exchangeAllowed:
          $ref: '#/components/schemas/AllowanceExchangeAllowed'
        allowedPaymentMethods:
          type: array
          items:
            $ref: '#/components/schemas/PaymentMethod'
        allowedCardProductCategories:
          type: array
          items:
            $ref: '#/components/schemas/CardProductCategory'
        allowedPaymentCurrencies:
          type: array
          description: Block of available payment currencies
          items:
            $ref: '#/components/schemas/Currency'
        requestorApplications:
          type: array
          items:
            $ref: '#/components/schemas/AllowanceRequestorApplication'
        payerIdPresent:
          $ref: '#/components/schemas/AllowancePayerIDPresent'
        totalAmountIs:
          $ref: '#/components/schemas/AllowanceTotalAmountIs'
        anyOfPayerContactDataPresent:
          type: array
          items:
            $ref: '#/components/schemas/AllowancePayerContactDataType'
        recurrenceInitialOperations:
          type: array
          description: Block of recurrence initial operations
          items:
            $ref: '#/components/schemas/RecurrenceInitialOperation'
        propertiesPresent:
          $ref: '#/components/schemas/AllowanceOrderPropertiesPresent'
        customPropertiesPresent:
          type: object
          description: Indicates whether the merchant can use custom properties
          properties:
            myguavaOpenbanking:
              type: boolean
        contains:
          type: object
          description: Block of available custom properties
          properties:
            array:
              type: array
              items:
                type: string
                description: Some array element
                example:
                  - APPLE_PAY
                  - GOOGLE_PAY
            value:
              type: string
              description: Some comparison value
              example: APPLE_PAY
        anyOfConditions:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/ProcessingProfileAllowanceOrderConditions'
              - description: Block of child conditions with logical `OR` relation. At least one element of the array must return the `true` boolean value for successful allowance.
        allOfConditions:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/ProcessingProfileAllowanceOrderConditions'
              - description: Block of child conditions with logical `AND` relation. Each of elements of the array must return the `true` boolean value for successful allowance.
        not:
          allOf:
            - $ref: '#/components/schemas/ProcessingProfileAllowanceOrderConditions'
            - description: Block of child conditions with inverted logic. At least one element of the array must return the `true` boolean value for unsuccessful allowance.
    BaseEcommerceTerminal:
      type: object
      required:
        - cardAcceptorTerminalId
        - priority
      properties:
        cardAcceptorTerminalId:
          $ref: '#/components/schemas/CardAcceptorTerminalId'
        priority:
          $ref: '#/components/schemas/TerminalPriority'
        usageConditions:
          type: array
          items:
            $ref: '#/components/schemas/TerminalUsageConditions'
    EcommerceTerminalWithID:
      allOf:
        - type: object
          required:
            - id
          properties:
            id:
              $ref: '#/components/schemas/EcommerceTerminalID'
        - $ref: '#/components/schemas/BaseEcommerceTerminal'
    TerminalUsageConditions:
      type: object
      properties:
        currencies:
          type: array
          description: Block of available currencies
          items:
            $ref: '#/components/schemas/Currency'
        cardSchemes:
          type: array
          items:
            $ref: '#/components/schemas/CardScheme'
        purposes:
          type: array
          items:
            $ref: '#/components/schemas/OrderPurpose'
    AllowanceTotalAmountIs:
      type: object
      description: |
        Block of allowed total amount for the order.  
        Order currency will be used for comparison if base currency isn't specified. `exchangeProvider` must be provided if base currency is specified.
      required:
        - baseUnits
        - comparison
      properties:
        baseUnits:
          $ref: '#/components/schemas/BaseUnitsAmount'
        currency:
          $ref: '#/components/schemas/Currency'
        comparison:
          $ref: '#/components/schemas/ComparisonSign'
        exchangeProvider:
          $ref: '#/components/schemas/CurrencyExchangeProvider'
        fallback:
          $ref: '#/components/schemas/CurrencyExchangeFallbackValue'
    AllowanceLifespanTimeoutSecondsIs:
      type: object
      description: |
        Block of allowed order lifespan timeout.  
        In the case of order expiration date providing, rounding always occurs upwards.
      required:
        - value
        - comparison
      properties:
        value:
          $ref: '#/components/schemas/OrderLifespanTimeoutSeconds'
        comparison:
          $ref: '#/components/schemas/ComparisonSign'
    ProcessingProfileOrderAllowance:
      type: object
      description: Allowance predicates for order allowance structure
      properties:
        purposes:
          type: array
          description: |
            List of purposes available for the payment.
          items:
            $ref: '#/components/schemas/OrderPurpose'
        currencies:
          type: array
          description: Block of available currencies
          items:
            $ref: '#/components/schemas/Currency'
        currencyCategories:
          type: array
          description: Block of available currency categories
          items:
            $ref: '#/components/schemas/CurrencyCategory'
        totalAmountIs:
          $ref: '#/components/schemas/AllowanceTotalAmountIs'
        lifespanTimeoutSecondsIs:
          $ref: '#/components/schemas/AllowanceLifespanTimeoutSecondsIs'
        shortPaymentPageUrlIsNeeded:
          $ref: '#/components/schemas/AllowanceShortPaymentPageUrlIsNeeded'
        anyOfPayerContactDataPresent:
          type: array
          items:
            $ref: '#/components/schemas/AllowancePayerContactDataType'
        requestorApplications:
          type: array
          items:
            $ref: '#/components/schemas/AllowanceRequestorApplication'
        availablePaymentCurrencyIsOrderCurrencyOnly:
          $ref: '#/components/schemas/AllowanceAvailablePaymentCurrencyIsOrderCurrencyOnly'
        recurrenceInitialOperations:
          type: array
          description: Block of recurrence initial operations
          items:
            $ref: '#/components/schemas/RecurrenceInitialOperation'
        propertiesPresent:
          $ref: '#/components/schemas/AllowanceOrderPropertiesPresent'
        customPropertiesPresent:
          type: object
          description: Indicates whether the merchant can use custom properties
          properties:
            myguavaOpenbanking:
              type: boolean
        contains:
          type: object
          description: Block of available custom properties
          properties:
            array:
              type: array
              items:
                type: string
                description: Some array element
                example:
                  - APPLE_PAY
                  - GOOGLE_PAY
            value:
              type: string
              description: Some comparison value
              example: APPLE_PAY
        includes:
          required:
            - array
            - values
            - mode
          type: object
          description: Block of values included from one set to another one
          properties:
            array:
              oneOf:
                - type: array
                  description: Some array
                  items:
                    type: string
                  example:
                    - PAYMENT_CARD
                - type: string
                  enum:
                    - availablePaymentMethods
                    - availableCardSchemes
                    - availableCardProductCategories
                    - availablePaymentCurrencies
                    - availableCryptoNetworks
                  description: List of order params
            values:
              oneOf:
                - type: array
                  description: Some array
                  items:
                    type: string
                  example:
                    - PAYMENT_CARD
                    - PAYMENT_CARD_BINDING
                    - APPLE_PAY
                    - GOOGLE_PAY
                    - BANK_ACCOUNT
                    - CLICK_TO_PAY
                    - CRYPTOCURRENCY
                - type: string
                  enum:
                    - availablePaymentMethods
                    - availableCardSchemes
                    - availableCardProductCategories
                    - availablePaymentCurrencies
                    - availableCryptoNetworks
                  description: List of order params
            mode:
              type: string
              enum:
                - ALL_OF_VALUES
                - ANY_OF_VALUES
              description: |
                List of modes.  
                `null` values on both sides fail the check.  
                * `ALL_OF_VALUES` - each item of the `values` array must be included in the `array` array. Empty arrays are considered always included.
                * `ANY_OF_VALUES` - at least on of item of the `values` array must be included in the `array` array. Empty arrays are considered never included.
        anyOfConditions:
          allOf:
            - $ref: '#/components/schemas/ProcessingProfileOrderAllowance'
            - description: Block of child conditions with logical `OR` relation. At least one element of the array must return the `true` boolean value for successful allowance.
        allOfConditions:
          allOf:
            - $ref: '#/components/schemas/ProcessingProfileOrderAllowance'
            - description: Block of child conditions with logical `AND` relation. Each of elements of the array must return the `true` boolean value for successful allowance.
        not:
          allOf:
            - $ref: '#/components/schemas/ProcessingProfileOrderAllowance'
            - description: Block of child conditions with inverted logic. At least one element of the array must return the `true` boolean value for unsuccessful allowance.
    ProcessingProfileOrderDefaults:
      type: object
      description: Set of conditions and instructions for defining order default values according to order creation structure
      properties:
        priority:
          $ref: '#/components/schemas/OrderDefaultsPriority'
        setValues:
          allOf:
            - type: object
            - $ref: '#/components/schemas/OrderIndividualParams'
            - $ref: '#/components/schemas/OrderListParams'
            - description: Setting accurate default values
        appendValues:
          allOf:
            - $ref: '#/components/schemas/OrderListParams'
            - description: Appending a set of default values
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/ProcessingProfileOrderAllowance'
    Validations:
      type: array
      items:
        type: object
        properties:
          field:
            $ref: '#/components/schemas/ErrorField'
          error:
            $ref: '#/components/schemas/ResponseMessage'
    ThreedsSDKData:
      required:
        - name
        - version
      type: object
      description: |
        Data required to start for 3D-Secure authentication by Application-flow.
      properties:
        name:
          $ref: '#/components/schemas/ThreeDSSDKName'
        version:
          $ref: '#/components/schemas/ThreeDSSDKVersion'
        packedAuthenticationData:
          $ref: '#/components/schemas/ThreeDSPackedAthenticationData'
    OrderID:
      type: string
      example: NAAAAAAAAACnBTlwiAEAAP__AAA=
      description: Internal order identifier
    ReferenceNumber:
      type: string
      maxLength: 64
      example: S26122017090900
    OrderStatus:
      type: string
      description: |
        Status of order.

        * `CREATED` - order is registered. No payment attempts yet.
        * `PAID` - payment for order is completed successfully.
        * `DECLINED` - payment for order is declined.
        * `PARTIALLY_REFUNDED` - part of amount of the order is refunded.
        * `REFUNDED` - full amount of the order is refunded.
        * `CANCELLED` - payment for the order is reversed.
        * `EXPIRED` - order is expired.
        * `RECURRENCE_ACTIVE` - order is ready to recurrence payments.
        * `RECURRENCE_CLOSED` - order is not ready to recurrence payments.
      enum:
        - CREATED
        - PAID
        - DECLINED
        - EXPIRED
        - PARTIALLY_REFUNDED
        - REFUNDED
        - CANCELLED
        - RECURRENCE_ACTIVE
        - RECURRENCE_CLOSED
    OrderPurpose:
      type: string
      description: |
        Purpose of order. Default value - `PURCHASE`.

        * `PURCHASE` - Purchasing goods and services.
        * `TRANSFER` - Money transfer.
        * `SUBSCRIPTION` - Creating a subscription for recurrence payments.
      enum:
        - PURCHASE
        - TRANSFER
        - SUBSCRIPTION
    RedirectURL:
      type: string
      format: uri
      example: http://host:port/result.html
      description: URL to which the customer is redirected to show payment attempt result
    UseIntermediateResultPage:
      type: boolean
      description: Indicates whether is needed show intermediate result page before final redirect to `redirectUrl`
    SuccessMerchantURL:
      type: string
      format: uri
      example: http://host:port/success.html
      description: Merchant's store URL to which the customer is redirected after payment attempt is completed successfully
    UnsuccessMerchantURL:
      type: string
      format: uri
      example: http://host:port/unsuccess.html
      description: Merchant's store URL to which the customer is redirected after payment attempt is completed unsuccessfully
    MerchantURL:
      type: string
      format: uri
      example: http://host:port/merchant.html
      description: Web address of the merchant
    AutoRedirectDelaySeconds:
      type: integer
      format: int32
      minimum: 0
      example: 0
      description: |
        Delay in seconds until intermediate result page will be redirected to merchant URL.  
        `0` - immediate redirect after payment result is received  
        not exists - no auto redirect
    MerchantCategoryCode:
      type: string
      example: '6011'
      description: Merchant category code
    ShippingAddress:
      type: string
      example: Wall str. 15
      description: Shipping address
    PayerID:
      type: string
      minLength: 1
      maxLength: 255
      description: Identifier of payer in merchant system
      example: 5f9adf5a-4796-4668-9285-07adf3c9a1aa
    PayeeID:
      type: string
      minLength: 1
      maxLength: 255
      description: Identifier of payee in merchant system
      example: 5f9adf5a-4796-4668-9285-07adf3c9a1aa
    PayerDataInputMode:
      type: string
      description: |
        Input mode for payer data  
        * `COPY_FROM_PAYEE` - Payer and payee are same person. Payee information (firstName, lastName, and address) will be applied for payer.
        * `MANUAL` - Payer and payee are different persons. Manually providing of the payer information is required.
      enum:
        - COPY_FROM_PAYEE
        - MANUAL
    NotMaskedEmail:
      type: string
      description: E-mail address
      example: example@example.com
    MaskedEmail:
      type: string
      description: Masked e-mail address
      example: e***e@example.com
    PhoneCountryCode:
      type: string
      maxLength: 3
      description: Phone country code. The `nationalNumber` field is required if the country code is present.
      example: '44'
    NationalPhoneNumber:
      description: Phone number without country code. The `countryCode` field is required if the national phone number is present.
      maxLength: 12
      type: string
      example: '2045773333'
    FullPhoneNumber:
      description: Full phone number with country code in the international (starts with +) or domestic (starts without +) format. For numbers in the domestic format the `country` field is required.
      maxLength: 16
      type: string
      example: '02045773333'
    MaskedNationalPhoneNumber:
      description: Masked phone number without country code
      maxLength: 12
      type: string
      example: '*******333'
    FormattedMaskedPhoneNumber:
      description: Full masked phone number with country code in the international format
      maxLength: 32
      type: string
      example: +44 ** **** *333
    ServiceChannel:
      type: string
      description: Channel of transaction initiation
      enum:
        - E-COMM
        - POS
    ServiceSubChannel:
      type: string
      enum:
        - E-COMM_API
        - ECWID
        - MAGENTO
        - WOOCOMMERCE
        - XERO
        - PRESTASHOP
        - SHOPIFY
        - PAYMENT_LINK
      description: |
        Name of the service subchannel.
        * `E-COMM_API` - using the E-commerce Gateway API
        * `ECWID` - using the Ecwid e-commerce platform
        * `MAGENTO` - using the Magento e-commerce platform
        * `WOOCOMMERCE` - using the WordPress (with WooCommerce plug-in) e-commerce platform
        * `XERO` - using the Xero invoicing platform
        * `PRESTASHOP` - using the Prestashop e-commerce platform
        * `SHOPIFY` - using the Shopify e-commerce platform
        * `PAYMENT_LINK` - using the PayByLink
    POSTerminalID:
      type: string
      description: Identifier of the POS terminal
      example: '12345678'
    EcommerceTerminalID:
      type: string
      description: Identifier of the e-commerce terminal
      example: 5f9adf5a-4796-4668-9285-07adf3c9a1aa
    TerminalPriority:
      type: number
      description: Priority of the e-commerce terminal definition
      example: 99
    CardAcceptorTerminalId:
      type: string
      description: Identifier of the e-commerce terminal in the card scheme
      example: '12345678'
    RequestorApplicationName:
      type: string
      minLength: 1
      example: ECWID
      description: Name of requestor application.
    RequestorApplicationVersion:
      type: string
      example: 1.0.0
      description: Version of requestor application.
    RequestorCustomData:
      type: object
      description: Block of additional parameters of order added by order initiator
      properties:
        shared:
          type: object
          description: Shared data, publicly available
          properties:
            someKey1:
              type: string
              example: Some value 1
            someKey2:
              type: string
              example: Some value 2
            someKeyN:
              type: string
              example: Some value N
        secret:
          type: object
          description: Secret data, publicly unavailable
          properties:
            someKey1:
              type: string
              example: Some value 1
            someKey2:
              type: string
              example: Some value 2
            someKeyN:
              type: string
              example: Some value N
    SessionToken:
      type: string
      description: Token for access to specific order
      example: eyJraWQiOiJjcGctb3JkZXIiLCJlcGsiOnsia3R5IjoiRUMiLCJjcnYiOiJQLTUyMSIsIngiOiJBZFhaaXNhNzl4NWN6V1FNQlQzaEp5ZW5vbGE5LWdxQkRHNHpjVDB0RzBnVjJBdlQ5NXFIamV3MmN0czFhQVg2dTV4bnBlUmx3QUo2N3hFRnQ5QWJfVFl3IiwieSI6IkFjeFpKa25CeHNGRFpJa0FVZEdqd2JBQlFsakpwaW1IT1c0WDdXMmFGMXJYdlpBV1JicTI1Wk91N0NTdVFVTzlXaVJubVBqWkhENTJsVDJGNHFRQXZxRUsifSwiYWxnIjoiRUNESC1FUytBMjU2S1ciLCJlbmMiOiJBMjU2R0NNIn0.ADwbZdOqtpclARun2oY0pKD6iJ95jaCI7iyAoZv6h9c75oNJ6hi2gg.m1truK-nlrPXl5jd.Glsra8-OEZymob5XtTZCSsiG6-tFWzpxsaVwQBU3ahY0nrGZublH240t_4E97zrrt7vKiD6TFnJmoG1chTWpIKmScFashb76SccQsgHGb7mn6qeiPNPViZWeqcbznAP3tEslfrMla3lQpYLHGs7wdz2ZANLZvHynFoQjPNERlPe6cWCzF1XNZEZFUlSFdvDPI3TRbXsLvLcB9L5mUom3efmwd0jU0rKMP4Wy.46iS8-muRzoXj5XBHnDKCg
    MerchantID:
      type: string
      example: 5f9adf5a-4796-4668-9285-07adf3c9a1aa
      description: Merchant identifier
    AppleMerchantID:
      type: string
      example: 5f9adf5a-4796-4668-9285-07adf3c9a1aa
      description: Merchant identifier in Apple software
    ApplePayUsageScheme:
      type: string
      description: The scheme by which a merchant works with ApplePay cryptography
      enum:
        - INDIVIDUAL
        - PSEUDO_PSP
        - PSP
    ApplePayIsReady:
      type: boolean
      description: Indicates merchant is ready for ApplePay payments
    AppleProcessingCertificateID:
      type: string
      example: 5f9adf5a-4796-4668-9285-07adf3c9a1aa
      description: ApplePay processing certificate identifier
    ApplePayCertificateName:
      type: string
      example: Some name
      description: ApplePay processing certificate name
    AppleProcessingCertificateValue:
      type: string
      description: Certificate provided by Apple for token decryption
      example: '-----BEGIN CERTIFICATE-----\nMIIGGTCCBQGgAwIBAgIQc477lDmZs607rOIItR5KnTANBgkqhkiG9w0BAQsFADB1\nMUQwQgYDVQQDDDtBcHBsZSBXb3JsZHdpZGUgRGV2ZWxvcGVyIFJlbGF0aW9ucyBD\nZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTELMAkGA1UECwwCRzMxEzARBgNVBAoMCkFw\ncGxlIEluYy4xCzAJBgNVBAYTAlVTMB4XDTIyMTEzMDEyMDgyMVoXDTI0MTIyOTEy\nMDgyMFowgZsxKTAnBgoJkiaJk/IsZAEBDBltZXJjaGFudC5jb20uZ3VhdmFwYXku\nZXBnMT4wPAYDVQQDDDVBcHBsZSBQYXkgTWVyY2hhbnQgSWRlbnRpdHk6bWVyY2hh\nbnQuY29tLmd1YXZhcGF5LmVwZzETMBEGA1UECwwKWTk2QkxSVzJDNTEZMBcGA1UE\nCgwQR3VhdmFwYXkgTGltaXRlZDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC\nggEBAJOXhkFo120wlny3o/geUtOh/GbFx1K0j9KRXhM6MqJKn4w0wAtToFxazpXW\n/udQ0jtJHrtzDUUo85zl2viuadk/UI/gdym61hb+ZH5CWTEuZ6o/FzvMH1adbE/t\n9CEmfep2rDJSZReU5+qk8UumQJqrZyepEbejRJdn1pV016o12/yDJg/Y2ho1gnDa\nijp3K4jstNIcQw2ISCALzRMN7sRZEi5zQgbG1sPHqXFWKCCQ/D3z1/jL5rDTCB37\nKtfkL5izQTmqJb5c5IHcgnJzzvIk3n9X8qh6WiBlhAboXTwiETMFAKIZlN+N0J1s\nudqPg9WKMG/dMH9e3LOwc8p3TL8CAwEAAaOCAnwwggJ4MAwGA1UdEwEB/wQCMAAw\nHwYDVR0jBBgwFoAUCf7AFZD5r2QKkhK5JihjDJfsp7IwcAYIKwYBBQUHAQEEZDBi\nMC0GCCsGAQUFBzAChiFodHRwOi8vY2VydHMuYXBwbGUuY29tL3d3ZHJnMy5kZXIw\nMQYIKwYBBQUHMAGGJWh0dHA6Ly9vY3NwLmFwcGxlLmNvbS9vY3NwMDMtd3dkcmcz\nMDkwggEtBgNVHSAEggEkMIIBIDCCARwGCSqGSIb3Y2QFATCCAQ0wgdEGCCsGAQUF\nBwICMIHEDIHBUmVsaWFuY2Ugb24gdGhpcyBDZXJ0aWZpY2F0ZSBieSBhbnkgcGFy\ndHkgb3RoZXIgdGhhbiBBcHBsZSBpcyBwcm9oaWJpdGVkLiBSZWZlciB0byB0aGUg\nYXBwbGljYWJsZSBzdGFuZGFyZCB0ZXJtcyBhbmQgY29uZGl0aW9ucyBvZiB1c2Us\nIGNlcnRpZmljYXRlIHBvbGljeSBhbmQgY2VydGlmaWNhdGlvbiBwcmFjdGljZSBz\ndGF0ZW1lbnRzLjA3BggrBgEFBQcCARYraHR0cHM6Ly93d3cuYXBwbGUuY29tL2Nl\ncnRpZmljYXRlYXV0aG9yaXR5LzATBgNVHSUEDDAKBggrBgEFBQcDAjAdBgNVHQ4E\nFgQUybLP0B6at6a0F8nsC/F6r0Iay08wDgYDVR0PAQH/BAQDAgeAME8GCSqGSIb3\nY2QGIARCDEBEMkQzRjg2NEUzNkJCNjcxNUM4OTlENTRFQjU3REU0OURCQUNGRTM3\nNjQ0RDU1QzgyM0UwMzgzNUE1MUE0MEQyMA8GCSqGSIb3Y2QGLgQCBQAwDQYJKoZI\nhvcNAQELBQADggEBACHd7VDK0Yk2bdFNHVwFj6v+ec0bTkYpOWscLwPjGJtHcb74\nEBEAvf40ByXvxSJdZGZuVx6sQ7NUIrhpt9rO+YUJY1sswPCHsYvy8NQIuQus2ou6\nWUbCwSvdEpEfxphWVZXtslfMNBhHBkiez5CUZeMwdseze0xU3NZrCnpivDjVVczg\n0Bi/exmS13pk1x6VJD3HGK6w+6Y2Z1oOdMwdzViZO7+WW0/0Q6NuY4z4CXlibKj5\nLuhUgAGG/IyxsX/s55sZGhqD1YOPHAnNjW8vl+Ry7HTkIiCTnnVuhusGADeXVRmv\nnd05CdGewduD8HurkbWCszQH3sia3LPxonC8aYk=\n-----END CERTIFICATE-----'
    AppleProcessingCertificateActivity:
      type: string
      enum:
        - ACTIVE
        - INACTIVE
      description: ApplePay processing certificate activity state
    AppleProcessingCertificateExpiryDate:
      type: string
      format: date-time
      description: Date and time when ApplePay processing certificate will be expired
    AppleProcessingCertificateCreationDate:
      type: string
      format: date-time
      description: Date and time when ApplePay processing certificate was created
    AppleIdentityCertificateID:
      type: string
      example: 5f9adf5a-4796-4668-9285-07adf3c9a1aa
      description: ApplePay identity certificate identifier
    AppleIdentityCertificateValue:
      type: string
      description: Certificate provided by ApplePay for payment session creation
      example: '-----BEGIN CERTIFICATE-----\nMIIGGTCCBQGgAwIBAgIQc477lDmZs607rOIItR5KnTANBgkqhkiG9w0BAQsFADB1\nMUQwQgYDVQQDDDtBcHBsZSBXb3JsZHdpZGUgRGV2ZWxvcGVyIFJlbGF0aW9ucyBD\nZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTELMAkGA1UECwwCRzMxEzARBgNVBAoMCkFw\ncGxlIEluYy4xCzAJBgNVBAYTAlVTMB4XDTIyMTEzMDEyMDgyMVoXDTI0MTIyOTEy\nMDgyMFowgZsxKTAnBgoJkiaJk/IsZAEBDBltZXJjaGFudC5jb20uZ3VhdmFwYXku\nZXBnMT4wPAYDVQQDDDVBcHBsZSBQYXkgTWVyY2hhbnQgSWRlbnRpdHk6bWVyY2hh\nbnQuY29tLmd1YXZhcGF5LmVwZzETMBEGA1UECwwKWTk2QkxSVzJDNTEZMBcGA1UE\nCgwQR3VhdmFwYXkgTGltaXRlZDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC\nggEBAJOXhkFo120wlny3o/geUtOh/GbFx1K0j9KRXhM6MqJKn4w0wAtToFxazpXW\n/udQ0jtJHrtzDUUo85zl2viuadk/UI/gdym61hb+ZH5CWTEuZ6o/FzvMH1adbE/t\n9CEmfep2rDJSZReU5+qk8UumQJqrZyepEbejRJdn1pV016o12/yDJg/Y2ho1gnDa\nijp3K4jstNIcQw2ISCALzRMN7sRZEi5zQgbG1sPHqXFWKCCQ/D3z1/jL5rDTCB37\nKtfkL5izQTmqJb5c5IHcgnJzzvIk3n9X8qh6WiBlhAboXTwiETMFAKIZlN+N0J1s\nudqPg9WKMG/dMH9e3LOwc8p3TL8CAwEAAaOCAnwwggJ4MAwGA1UdEwEB/wQCMAAw\nHwYDVR0jBBgwFoAUCf7AFZD5r2QKkhK5JihjDJfsp7IwcAYIKwYBBQUHAQEEZDBi\nMC0GCCsGAQUFBzAChiFodHRwOi8vY2VydHMuYXBwbGUuY29tL3d3ZHJnMy5kZXIw\nMQYIKwYBBQUHMAGGJWh0dHA6Ly9vY3NwLmFwcGxlLmNvbS9vY3NwMDMtd3dkcmcz\nMDkwggEtBgNVHSAEggEkMIIBIDCCARwGCSqGSIb3Y2QFATCCAQ0wgdEGCCsGAQUF\nBwICMIHEDIHBUmVsaWFuY2Ugb24gdGhpcyBDZXJ0aWZpY2F0ZSBieSBhbnkgcGFy\ndHkgb3RoZXIgdGhhbiBBcHBsZSBpcyBwcm9oaWJpdGVkLiBSZWZlciB0byB0aGUg\nYXBwbGljYWJsZSBzdGFuZGFyZCB0ZXJtcyBhbmQgY29uZGl0aW9ucyBvZiB1c2Us\nIGNlcnRpZmljYXRlIHBvbGljeSBhbmQgY2VydGlmaWNhdGlvbiBwcmFjdGljZSBz\ndGF0ZW1lbnRzLjA3BggrBgEFBQcCARYraHR0cHM6Ly93d3cuYXBwbGUuY29tL2Nl\ncnRpZmljYXRlYXV0aG9yaXR5LzATBgNVHSUEDDAKBggrBgEFBQcDAjAdBgNVHQ4E\nFgQUybLP0B6at6a0F8nsC/F6r0Iay08wDgYDVR0PAQH/BAQDAgeAME8GCSqGSIb3\nY2QGIARCDEBEMkQzRjg2NEUzNkJCNjcxNUM4OTlENTRFQjU3REU0OURCQUNGRTM3\nNjQ0RDU1QzgyM0UwMzgzNUE1MUE0MEQyMA8GCSqGSIb3Y2QGLgQCBQAwDQYJKoZI\nhvcNAQELBQADggEBACHd7VDK0Yk2bdFNHVwFj6v+ec0bTkYpOWscLwPjGJtHcb74\nEBEAvf40ByXvxSJdZGZuVx6sQ7NUIrhpt9rO+YUJY1sswPCHsYvy8NQIuQus2ou6\nWUbCwSvdEpEfxphWVZXtslfMNBhHBkiez5CUZeMwdseze0xU3NZrCnpivDjVVczg\n0Bi/exmS13pk1x6VJD3HGK6w+6Y2Z1oOdMwdzViZO7+WW0/0Q6NuY4z4CXlibKj5\nLuhUgAGG/IyxsX/s55sZGhqD1YOPHAnNjW8vl+Ry7HTkIiCTnnVuhusGADeXVRmv\nnd05CdGewduD8HurkbWCszQH3sia3LPxonC8aYk=\n-----END CERTIFICATE-----'
    AppleIdentityCertificateExpiryDate:
      type: string
      format: date-time
      description: Date and time when ApplePay identity certificate will be expired
    AppleIdentityCertificateCreationDate:
      type: string
      format: date-time
      description: Date and time when ApplePay identity certificate was created
    ApplePayCSRID:
      type: string
      example: 5f9adf5a-4796-4668-9285-07adf3c9a1aa
      description: CSR identifier
    ApplePayCSRValue:
      type: string
      example: '----BEGIN NEW CERTIFICATE REQUEST-----\nMIIERzCCAy8CAQAwZzELMAkGA1UEBhMCVVMxCzAJBgNVBAgMAk5ZMREwDwYDVQQH\nDAhuZXcgeW9yazEPMA0GA1UECgwGbXkgb3JnMQswCQYDVQQLDAJJVDEaMBgGA1UE\nAwwRd3d3Lm15d2Vic2l0ZS5jb20wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK\nAoIBAQCfvbkuJwMiwOwgvRAV1XS/HZFGH0I6/p2NyOn7onb8uEV3cMFf4iCzBN6Z\nKJD92qVtmZSBpH9IQrYiEohTxkgJ2c/dyX06eDVS7nE53etPOZCM8VvJOq/7PDo+\n7Kvy6jhQVU7Rb1mQrFcrU0GVOQWWqqtpHwbeKPfJ3mRlPNzygmXAUXkv0XdstQPm\nb5sVx965SGoIgrRUDpl+UNUcE198AVPEiDUg1VqY+mUmyOcvCkO153UtxDUMoocg\nS5WlfD83We35a7I6+FAvDKKk31gv6Jxfs/EzZ6D0iiytDMAWNRwDvaYcu06O8Ye/\nrt9mFF90XsMMn7xi0cuCaLzG7JrJAgMBAAGgggGZMBoGCisGAQQBgjcNAgMxDBYK\nNi4xLjc2MDEuMjA1BgkrBgEEAYI3FRQxKDAmAgEFDAdkZWxsLVBDDAtkZWxsLVBD\nXERldgwLSW5ldE1nci5leGUwcgYKKwYBBAGCNw0CAjFkMGICAQEeWgBNAGkAYwBy\nAG8AcwBvAGYAdAAgAFIAUwBBACAAUwBDAGgAYQBuAG4AZQBsACAAQwByAHkAcAB0\nAG8AZwByAGEAcABoAGkAYwAgAFAAcgBvAHYAaQBkAGUAcgMBADCBzwYJKoZIhvcN\nAQkOMYHBMIG+MA4GA1UdDwEB/wQEAwIE8DATBgNVHSUEDDAKBggrBgEFBQcDATB4\nBgkqhkiG9w0BCQ8EazBpMA4GCCqGSIb3DQMCAgIAgDAOBggqhkiG9w0DBAICAIAw\nBAEFMAcGBSsOAwIHMAoGCCqGSIb3DQMHMB0GA1UdDgQWBBS4T+amOyNS+ECWfIxw\neBUR+XRv+TCTfXvFRiQ35T960o79JqJZpaD+PS9HNghqS05ldsrA/p/n/1rG9T+n\n1a6jTj6BEwOLaTfUWlq8KtkkYiROOC9LqhQCn84PQuO3L9clLrsV//1C4hGkFUbG\n-----END NEW CERTIFICATE REQUEST-----'
      description: CSR value
    ApplePayCSRName:
      type: string
      example: Some name
      description: Name of a CSR
    ApplePayCSRWebAddressName:
      type: string
      example: www.example.com
      description: Web address name of the host for which the certificate is issued
    ApplePayCSREmailAddress:
      type: string
      example: example@example.com
      description: E-mail address of certificate owner
    ApplePayCSRCityName:
      type: string
      example: London
      description: City name of certificate owner
    ApplePayCSROrganizationName:
      type: string
      example: YourCompany
      description: Organization name of certificate owner
    ApplePayCSROrganizationUnit:
      type: string
      example: LLC
      description: Organization unit of certificate owner
    ApplePayCertificateType:
      type: string
      enum:
        - PAYMENT_PROCESSING
        - IDENTITY
      description: Type of certificate
    ApplePayCertificateId:
      type: string
      example: 5f9adf5a-4796-4668-9285-07adf3c9a1aa
      description: ApplePay certificate identifier
    BinaryKey:
      type: string
      format: binary
      description: Binary key file
    BinaryCertificate:
      type: string
      format: binary
      description: Binary certificate file
    GoogleMerchantID:
      type: string
      example: '0123456789012345678'
      description: Merchant identifier in Google software
    GoogleGateway:
      type: string
      example: guavapay
      description: Merchant identifier in Google software
    GoogleGatewayMerchantID:
      type: string
      example: nuveidigital
      description: Gateway account ID, which is provided by the gateway
    GoogleTokenDecryptionKeyName:
      type: string
      description: Name of the GooglePay token decryption key
      example: Some key name
    GoogleTokenDecryptionKeyStatus:
      type: string
      description: Status of the GooglePay token decryption key
      enum:
        - ACTIVE
        - INACTIVE
    GoogleTokenDecryptionPublicKey:
      type: string
      description: Value of the GooglePay token decryption public key
      example: '-----BEGIN PUBLIC KEY-----\nMFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAKj34GkxFhD90vcNLYLInFEX6Ppy1tPf\n9Cnzj4p4WGeKLs1Pt8QuKUpRKfFLfRYC9AIKjbJTWit+CqvjWYzvQwECAwEAAQ==\n-----END PUBLIC KEY-----'
    GoogleTokenDecryptionPrivateKey:
      type: string
      description: Value of the GooglePay token decryption public key
      example: '-----BEGIN PRIVATE KEY-----\nMIIBVAIBADANBgkqhkiG9w0BAQEFAASCAT4wggE6AgEAAkEAqPfgaTEWEP3S9w0t\ngsicURfo+nLW09/0KfOPinhYZ4ouzU+3xC4pSlEp8Ut9FgL0AgqNslNaK34Kq+NZ\njO9DAQIDAQABAkAgkuLEHLaqkWhLgNKagSajeobLS3rPT0Agm0f7k55FXVt743hw\nNgkp98bMNrzy9AQ1mJGbQZGrpr4c8ZAx3aRNAiEAoxK/MgGeeLui385KJ7ZOYktj\nhLBNAB69fKwTZFsUNh0CIQEJQRpFCcydunv2bENcN/oBTRw39E8GNv2pIcNxZkcb\nNQIgbYSzn3Py6AasNj6nEtCfB+i1p3F35TK/87DlPSrmAgkCIQDJLhFoj1gbwRbH\n/bDRPrtlRUDDx44wHoEhSDRdy77eiQIgE6z/k6I+ChN1LLttwX0galITxmAYrOBh\nBVl433tgTTQ=\n-----END PRIVATE KEY-----'
    GoogleTokenDecryptionKeyCreationDate:
      type: string
      description: Creation date of the GooglePay token decryption key
      format: date-time
    GoogleTokenDecryptionKeyExpirationDate:
      type: string
      description: Expiration date of the GooglePay token decryption key
      format: date-time
    DPAID:
      type: string
      example: 452f7b27-7dff-49bd-8147-415cd08026da
      description: Identifier of DPA registered in the click to pay serice
    DPAStatus:
      type: string
      enum:
        - ACTIVE
        - INACTIVE
      description: Status of the DPA
    DPALegalName:
      type: string
      example: Amazon
      description: Legal name of DPA registered in the click to pay serice
    DPAPresentationName:
      type: string
      example: Amazon
      description: Presentation name of DPA registered in the click to pay serice
    ClickToPayDynamicDataType:
      type: string
      enum:
        - NONE
        - CARD_APPLICATION_CRYPTOGRAM_SHORT_FORM
      description: |
        Type of cryptogram or token used for the card data.

        * `NONE` - token is not used
        * `CARD_APPLICATION_CRYPTOGRAM_SHORT_FORM` - DSRP format
    Domain:
      type: string
      example: http://example.com
      description: Domain name
    PaymentPageURL:
      type: string
      format: uri
      example: http://host:port/payment.html?orderId=NAAAAAAAAACnBTlwiAEAAP__AAA=&sessionToken=eyJraWQiOiJjcGctb3JkZXIiLCJlcGsiOnsia3R5IjoiRUMiLCJjcnYiOiJQLTUyMSIsIngiOiJBZFhaaXNhNzl4NWN6V1FNQlQzaEp5ZW5vbGE5LWdxQkRHNHpjVDB0RzBnVjJBdlQ5NXFIamV3MmN0czFhQVg2dTV4bnBlUmx3QUo2N3hFRnQ5QWJfVFl3IiwieSI6IkFjeFpKa25CeHNGRFpJa0FVZEdqd2JBQlFsakpwaW1IT1c0WDdXMmFGMXJYdlpBV1JicTI1Wk91N0NTdVFVTzlXaVJubVBqWkhENTJsVDJGNHFRQXZxRUsifSwiYWxnIjoiRUNESC1FUytBMjU2S1ciLCJlbmMiOiJBMjU2R0NNIn0.ADwbZdOqtpclARun2oY0pKD6iJ95jaCI7iyAoZv6h9c75oNJ6hi2gg.m1truK-nlrPXl5jd.Glsra8-OEZymob5XtTZCSsiG6-tFWzpxsaVwQBU3ahY0nrGZublH240t_4E97zrrt7vKiD6TFnJmoG1chTWpIKmScFashb76SccQsgHGb7mn6qeiPNPViZWeqcbznAP3tEslfrMla3lQpYLHGs7wdz2ZANLZvHynFoQjPNERlPe6cWCzF1XNZEZFUlSFdvDPI3TRbXsLvLcB9L5mUom3efmwd0jU0rKMP4Wy.46iS8-muRzoXj5XBHnDKCg
      description: URL of the payment page to which the payer will be redirected. Filled in only if the payment page is provided by CPG.
    ABUMerchantBeforeRegistrationStatus:
      type: string
      enum:
        - INITIATED
        - IN_PROGRESS
      description: |
        Status of merchant registration in MasterCard Account Billing Updater  
        * `INITIATED` - merchant has been added to registration queue
        * `IN_PROGRESS` - merchant has been added to registration batch
    ABUMerchantAfterRegistrationStatus:
      type: string
      enum:
        - INITIATED
        - IN_PROGRESS
        - PROCESSED
        - REJECTED
      description: |
        Status of merchant registration in MasterCard Account Billing Updater  
        * `INITIATED` - merchant has been added to registration queue
        * `IN_PROGRESS` - merchant has been added to registration batch
        * `PROCESSED` - merchant has been processed successfully
        * `REJECTED` - merchant has been processed unsuccessfully
    ABUMerchantRegistrationErrorCodes:
      type: array
      items:
        type: string
        description: |
          ABU merchant processing error code  
          * `300` - Invalid Acquirer Identifier
          * `301` - Invalid Request Date
          * `302` - Invalid Merchant ID
          * `303` - Invalid Merchant Name
          * `304` - Invalid Request Type
          * `305` - Invalid MCC Code
          * `307` - Trying to delete a merchant that does not exist
          * `404` - Missing merchant in response file
        enum:
          - '300'
          - '301'
          - '302'
          - '303'
          - '304'
          - '305'
          - '307'
          - '404'
    ABUFileID:
      type: string
      example: 452f7b27-7dff-49bd-8147-415cd08026da
      description: Identifier of the merchant registration or deletion in the MasterCard Account Billing Updater file
    ABUFileName:
      type: string
    ABUFilePlainText:
      type: string
      description: ABU plain text file
    ABUFileBinary:
      type: string
      format: binary
      description: ABU binary file
    ABUMerchantRegistrationFileStatus:
      type: string
      enum:
        - SENT
        - PROCESSED
      description: |
        Status of MasterCard Account Billing Updater batch  
        * `SENT` - Registration file is sent to MasterCard. Response file is not received.
        * `PROCESSED` - Response file is received.
    ABUMerchantRegistrationFileCreationDate:
      type: string
      format: date-time
      description: Date when MasterCard Account Billing Updater registration batch was created
    ABUMerchantAction:
      type: string
      enum:
        - ADD
        - DELETE
      description: |
        Action with merchant in MasterCard Account Billing Updater  
        * `ADD` - registration
        * `DELETE` - deletion
    ABUMerchantCreationDate:
      type: string
      format: date-time
      description: Date when merchant was been added to MasterCard Account Billing Updater registration queue
    ShortPaymentPageUrlIsNeeded:
      type: boolean
      description: Indicates whether is needed to make short payment page link for the order
    AllowanceShortPaymentPageUrlIsNeeded:
      type: boolean
      description: Indicates whether the merchant can making short payment page links for the orders
    AllowanceRecurrencePresent:
      type: boolean
      description: Indicates recurrence block is present for the order
    AllowancePayerIDPresent:
      type: boolean
      description: Indicates payerId field is present for the order
    AllowancePayerContactDataType:
      type: string
      description: Type of payer's contact data
      enum:
        - PHONE
        - EMAIL
    AllowanceTerminalIdPresent:
      type: boolean
      description: Indicates terminalId field is present for the order
    AllowanceExchangeAllowed:
      type: boolean
      description: Indicates whether currency exchange is allowed
    AllowanceRequestorApplication:
      type: string
      enum:
        - ECWID
        - MYGUAVA_ECOMM_MAGENTO_PLUGIN
        - MYGUAVA_ECOMM_WOOCOMMERCE_PLUGIN
        - PAYMENT_LINK
        - XERO
        - MYGUAVA_ECOMM_PRESTASHOP_PLUGIN
        - SHOPIFY
      description: |
        List of available applications for the order registration.  
        * `ECWID` - Ecwid CPG service.
        * `MYGUAVA_ECOMM_MAGENTO_PLUGIN` - the `MyGuava` plug-in for e-commerce on the Magento platform.
        * `MYGUAVA_ECOMM_WOOCOMMERCE_PLUGIN` - the `MyGuava` plug-in for e-commerce on the WordPress (WooCommerce) platform.
        * `PAYMENT_LINK` - Payment Links CPG service.
        * `XERO` - The `MyGuava Business` integration service with the Xero invoicing platform.
        * `MYGUAVA_ECOMM_PRESTASHOP_PLUGIN` - the `MyGuava` plug-in for e-commerce on the Prestashop platform.
        * `SHOPIFY` - Shopify CPG service.
    MoneyTransferEligibleFlag:
      type: boolean
      description: Indicates whether money transfer is allowed
    AllowanceOrderPropertiesPresent:
      type: object
      description: List of the order property names (for example `payer.availableInputModes`). Expected presence or absence of each property is indicated with a boolean value.
      properties:
        someProperty1:
          type: boolean
          example: true
        someProperty2:
          type: boolean
          example: false
        somePropertyN:
          type: boolean
          example: true
    AllowanceAvailablePaymentCurrencyIsOrderCurrencyOnly:
      type: boolean
      description: Checks that order available payment currencies is a single-element set containing order currency
    RecurrenceExecution:
      type: string
      enum:
        - AUTOMATIC
        - MANUAL
      description: |
        Recurrence execution method

        * `MANUAL` - recurrence payment is executed by API request
        * `AUTOMATIC` - recurrence payment is executed according to a given schedule
    RecurrenceInitialOperation:
      type: string
      enum:
        - PAYMENT
        - PREPARE_FOR_FUTURE_PAYMENTS
      description: |
        Operation which must be executed on initial of recurrence

        * `PAYMENT` - initial payment. Order total amount must be positive.
        * `PREPARE_FOR_FUTURE_PAYMENTS` - initial account status inquiry. Order total amount must be zero.
    RecurrenceSchedule:
      type: string
      description: |
        Schedule of recurrence payments as a cron string (minimal frequency - hour)

        `hour` `day` `month` `day of week`
      example: '* * * *'
    RecurrenceStartDate:
      type: string
      format: date-time
      description: Date of starting recurring payments
    RecurrenceEndDate:
      type: string
      format: date-time
      description: Date of ending recurring payments
    RecurrenceDescription:
      type: string
      description: Description of a recurring payment
      example: Payment by subscription
    RecurrenceStage:
      type: string
      description: Stage of a recurring payment
      enum:
        - INITIAL
        - SUBSEQUENT
        - NONE
    CardProductID:
      type: string
      example: VDX
      description: Identifier of the card scheme product
    CardProductCategory:
      type: string
      enum:
        - DEBIT
        - PREPAID
        - CREDIT
      description: Identifies the intended business functionality of cards
    CallbackURL:
      type: string
      format: uri
      example: http://host:port/callback.html
      description: URL to send callbacks
    PaymentLinkID:
      type: string
      example: 5f9adf5a-4796-4668-9285-07adf3c9a1aa
      description: Payment link identifier
    PaymentLinkCreationDate:
      type: string
      format: date-time
      description: Payment link creation date
    ShortPaymentPageURL:
      type: string
      format: uri
      example: http://host:port/
      description: Shortified payment link
    PaymentLinkName:
      type: string
      example: Payment for green tea
      description: Payment link name
    RequestCorrelationID:
      type: string
      maxLength: 255
      example: 5f9adf5a-4796-4668-9285-07adf3c9a1aa
    RangeIncludes:
      type: string
      example: '556633'
      description: Part of card number
    PAN:
      type: string
      x-maxLength: 20
      example: '5566331234567890'
      description: Card number. Must conform to the Luhn algorithm.
    MaskedPAN:
      type: string
      example: 556633**7890
      description: Masked card or token number
    CVV2:
      type: integer
      x-maxLength: 4
      example: '1234'
      description: Card verification value. For American Express max length is 4. For other card schemes - 3.
    CardExpiryDate:
      type: string
      example: '2505'
      description: Card expiration date (YYMM)
    CardholderName:
      type: string
      maxLength: 26
      example: CARDHOLDER NAME
      description: Cardholder name
    BindingCreationIsNeeded:
      type: boolean
      description: Indicates whether a binding must be created as a result of a successful payment
    ChallengeWindowSize:
      type: string
      description: Window size that has been displayed to the cardholder during Challenge Flow
      enum:
        - SIZE_250_X_400
        - SIZE_390_X_400
        - SIZE_500_X_600
        - SIZE_600_X_400
        - FULL_SCREEN
    ThreeDSMethodData:
      type: string
      example: eyJ0aHJlZURTU2VydmVyVHJhbnNJRCI6IjNhYzdjYWE3LWFhNDItMjY2My03OTFiLTJhYzA1YTU0MmM0YSIsInRocmVlRFNNZXRob2ROb3RpZmljYXRpb25VUkwiOiJ0aHJlZURTTWV0aG9kTm90aWZpY2F0aW9uVVJMIn0=
      description: Base64 packed data block to be sent to ACS
    ACSURL:
      type: string
      format: uri
      example: http://host:port/
      description: ACS URL of issuer
    ThreeDSPackedSDKChallengeParameters:
      type: string
      example: eyJleGFtcGxlIjogImV4YW1wbGUiLCJleGFtcGxlIjogImV4YW1wbGUifQ==
      description: ACS details (contained in the ARes) required by the 3DS SDK to conduct the challenge process for APP-flow. Represented as Base64url encoded string.
    ThreeDSProtocolVersion:
      type: string
      example: 2.2.0
      description: Protocol version identifier (Message Version Number) of EMV 3DS specification used for authentication.
    ThreeDSDirectoryServerID:
      type: string
      example: A000000003
      description: Directory Server ID value (which is the Payment System’s RID) that is used to identify the key for the Device Information encryption during authentication.
    OpenBankingAuthUrl:
      type: string
      format: uri
      example: http://host:port/
      description: Authorization URL in payer's institution
    QRCodeData:
      type: string
      format: uri
      example: http://host:port/
      description: URL to display in the QR-code form
    OpenBankingAuthorizationExpirationDate:
      type: string
      format: date-time
      description: Date by which authorazzation must be completed by payer. Order declines if if this date has arrived and authorization has not been completed.
    CryptocurrencyWalletAddress:
      type: string
      example: TLhMgEBEBxqRs7RxeXcsLduVHuc3QrL88a
      description: Cryptocurrency wallet address
    CryptoTrasactionHash:
      type: string
      example: TLhMgEBEBxqRs7RxeXcsLduVHuc3QrL88a
      description: Crypto transaction hash
    CryptocurrencyPaymentInitiationExpirationDate:
      type: string
      format: date-time
      description: Date by which payment must be initiated by payer. Order declines if this date has arrived and paymnent still isn'n initiated.
    CryptocurrencyNetworkName:
      type: string
      example: Tron
      description: Cryptocurrency network name
    PayPalActionUrl:
      type: string
      format: uri
      example: https://www.paypal.com/checkoutnow?token=5O190127TN364715T
      description: PayPal URL for makong authorization
    PayPalOrderID:
      type: string
      example: 5O190127TN364715T
      description: PayPal order identifier
    PayPalOrderApproveEvent:
      type: string
      enum:
        - APPROVE
        - CANCEL
        - ERROR
      description: Result event of PayPal order approval by payer
    IP:
      type: string
      example: 100.200.10.20
      description: IP address
    ThreeDSPackedAthenticationData:
      type: string
      example: eyJleGFtcGxlIjogImV4YW1wbGUiLCJleGFtcGxlIjogImV4YW1wbGUifQ==
      description: |
        Data required to start for 3D-Secure authentication by Application-flow. Represented as Base64url encoded string.
        > If this data is provided for payment, `browserData` must not be present. Providing of both fields will cause an error.
    ThreeDSSDKName:
      type: string
      example: Android SDK
      description: |
        3DS SDK name used by the requester
    ThreeDSSDKVersion:
      type: string
      example: 1.0.0
      description: |
        3DS SDK version used by the requester
    BaseUnitsAmount:
      type: number
      example: 1000.25
      description: |
        Amount in base units of corresponding currency.
        For example: 
        * EUR is decimal currency (1 euro = 100 eurocent). 1 euro and 25 eurocents is 1.25

        * MGA is non-decimal currency (1 ariary = 5 iraimbilanja). 1 ariary and 3 iraimbilanja is 1.3

        * JPY haven't subunits. 1 yen is just 1
    MinorSubunitsAmount:
      type: number
      example: 100025
      description: Amount in minor denomination
    LocalizedAmount:
      type: string
      example: GBP 1,000.25
      description: Amount in corresponding locale. Locale is defined based on header `Accept-Language`. Default locale - `en-US`.
    SubtotalName:
      type: string
      maxLength: 32
      description: Name of the subtotal
      example: Cost
    SubtotalDirection:
      type: string
      description: Direction of funds movement. Default value - 'DEBIT'
      enum:
        - DEBIT
        - CREDIT
    Currency:
      type: string
      example: GBP
      description: Fiat currency code in ISO 4217 Alpha 3 or cryptocurrency code
    CurrencyName:
      type: string
      description: Name of the currency
      example: Pound sterling
    CurrencyDisplayCode:
      type: string
      description: Currency code for displaying
      example: GBP
    CurrencyDisplayName:
      type: string
      description: Display name of the currency
      example: Pound Sterling
    CurrencyCategory:
      type: string
      description: Category of the currency
    CryptoNetworkID:
      type: string
      description: Crypto network identifier
      enum:
        - TRON
        - ETHEREUM
        - POLYGON
        - ARBITRUM
        - SOLANA
        - BINANCE_SMART_CHAIN
        - BITCOIN
        - LITECOIN
    CryptoNetworkName:
      type: string
      description: Crypto network name
      example: Tron
    CryptoNetworkLogoUrl:
      type: string
      description: Crypto network logo URL
      example: /cryptocurrencies/TRON.svg
    CurrencyDecimalPlaces:
      type: number
      description: Number of decimal places of the currency
      example: 2
    CurrencyLogoUrl:
      type: string
      format: uri
      description: URL to the currency logo
      example: http://example.com
    ExchangeRate:
      type: number
      description: Exchange currency rate
      example: 0.13
    ExchangeToken:
      type: string
      description: Token for exchange currency rate session
      example: eyJraWQiOiJjcGctb3JkZXIiLCJlcGsiOnsia3R5IjoiRUMiLCJjcnYiOiJQLTUyMSIsIngiOiJBZFhaaXNhNzl4NWN6V1FNQlQzaEp5ZW5vbGE5LWdxQkRHNHpjVDB0RzBnVjJBdlQ5NXFIamV3MmN0czFhQVg2dTV4bnBlUmx3QUo2N3hFRnQ5QWJfVFl3IiwieSI6IkFjeFpKa25CeHNGRFpJa0FVZEdqd2JBQlFsakpwaW1IT1c0WDdXMmFGMXJYdlpBV1JicTI1Wk91N0NTdVFVTzlXaVJubVBqWkhENTJsVDJGNHFRQXZxRUsifSwiYWxnIjoiRUNESC1FUytBMjU2S1ciLCJlbmMiOiJBMjU2R0NNIn0.ADwbZdOqtpclARun2oY0pKD6iJ95jaCI7iyAoZv6h9c75oNJ6hi2gg.m1truK-nlrPXl5jd.Glsra8-OEZymob5XtTZCSsiG6-tFWzpxsaVwQBU3ahY0nrGZublH240t_4E97zrrt7vKiD6TFnJmoG1chTWpIKmScFashb76SccQsgHGb7mn6qeiPNPViZWeqcbznAP3tEslfrMla3lQpYLHGs7wdz2ZANLZvHynFoQjPNERlPe6cWCzF1XNZEZFUlSFdvDPI3TRbXsLvLcB9L5mUom3efmwd0jU0rKMP4Wy.46iS8-muRzoXj5XBHnDKCg
    ComparisonSign:
      type: string
      description: |
        Comparison sign  
        * `ge` - greater-than or equals sign
        * `gt` - greater-than sign
        * `eq` - equals sign
        * `lt` - less-than sign
        * `le` - less-than or equals sign
      enum:
        - ge
        - gt
        - eq
        - lt
        - le
    CurrencyExchangeProvider:
      type: string
      description: |
        Currency exchange rate provider 
        * `local` - local exchange rates
      enum:
        - local
    CurrencyExchangeFallbackValue:
      type: boolean
      description: |
        Indicates system behavior if exchange rate can't be received.  
        * `true` - Warning only. Operation can be processed.
        * `false` - Citical error. Operation can't be processed.
    TransactionID:
      type: string
      example: NAAAAAAAAACnBTlwiAEAAP__AAA=
      description: Internal transaction identifier
    TransactionDate:
      type: string
      format: date-time
      description: Date when transaction was executed
    RRN:
      type: string
      example: '309764837561'
      description: Reference Retrieval Number
    AuthCode:
      type: string
      example: '976461'
      description: Auth code
    OrderExpirationDate:
      type: string
      format: date-time
      example: '2023-01-01T15:00:00Z'
      description: Date and time when the order is terminated.
    OrderLifespanTimeoutSeconds:
      type: integer
      format: int32
      example: 300
      description: Lifespan of the order in seconds.
    OrderTextDescription:
      type: string
      example: Green tea
      description: Free form description of the order
    CReq:
      type: string
      example: eyJ0aHJlZURTU2VydmVyVHJhbnNJRCI6IjNhYzdjYWE3LWFhNDItMjY2My03OTFiLTJhYzA1YTU0MmM0YSIsInRocmVlRFNNZXRob2ROb3RpZmljYXRpb25VUkwiOiJ0aHJlZURTTWV0aG9kTm90aWZpY2F0aW9uVVJMIn0
      description: Challenge Request message
    ValidationURL:
      type: string
      example: https://apple-pay-gateway.apple.com/paymentservices/paymentSession
      description: URL of Apple to creating a merchant session
    DomainName:
      type: string
      example: example.com
      description: Name of domain
    MerchantSession:
      type: object
      description: An opaque ApplePay merchant session object
    ResponseMessage:
      type: string
    MerchantName:
      type: string
      example: Amazon
      description: Name of the merchant
    SIDForIs:
      type: string
      nullable: true
      example: '123456'
      description: |
        Special identifier provided to merchant during onboarding process.  
        Variable is required for the card payments routing.  
        Not applicable for the openbanking payments.  
        Default value - `null`.
    LoginForIs:
      type: string
      nullable: true
      example: '123456'
      description: |
        Merchant login in the IS.  
        Variable is required for the card payments routing.  
        Not applicable for the openbanking payments.  
        Default value - `null`.
    OpenbankingUKDomesticAccountNumber:
      type: string
      nullable: true
      example: '12345678'
      description: |
        Number of the transit account on which the merchant receives funds.  
        Variable is required for the openbanking payments.  
        Not applicable for the card payments.
    OpenbankingUKDomesticSortCode:
      type: string
      nullable: true
      example: '123456'
      description: |
        Sort code of the institution.  
        Must be used in domestic account transfers in the United Kingdom.  
        Not applicable for the card payments.
    OpenbankingPayeeName:
      type: string
      example: JOHN DOE
      description: Official legal name of the account holder
    RefundBeforePayoutEnabledVariable:
      type: boolean
      description: |
        Indicates whether the merchant can use the refund service before payout with PayPal is completed.
        * `true` - refund before payout is allowed.
        * `false` - refund before payout is not allowed.

        Default value - `false`.
    ShortPaymentPageUrlRequestAllowedVariable:
      type: boolean
      nullable: true
      description: |
        Indicates whether the merchant can request a short link to the order payment page when the order is registered.
        * `true` - request a short link to the order payment page is allowed for the merchant. The `shortPaymentPageUrlIsNeeded` field can be provided with the `true` value.
        * `false` - request a short link to the order payment page is prohibited for the merchant. The `true` value for the `shortPaymentPageUrlIsNeeded` order field is not allowed.

        Default value - `false`.
    PaymentPageUrlPresentVariable:
      type: boolean
      description: |
        Indicates whether the payment page URL will be provided to the merchant in the order response.  
        * `true` - the `paymentPageUrl` field will be present in the order response.
        * `false` - the `paymentPageUrl` field will not be present in the order response.

        Default value - `true`.
    AllowedCustomPropertiesVariable:
      type: array
      nullable: true
      description: |
        Indicates custom properties list that can be used by the merchant.  
        Custom properties are specified in the order as an object with the custom property name between the "-" symbols. Example: `-myguavaOpenbanking-`.  
        The custom property specifies the data required for specific processing to implement non-standard flows.  
        Can be defined as empty list if no one of custom properties are allowed for merchant.  
        * `myguavaOpenbanking` - Custom property for providing individual's payment recipient data. Used for making account transfers by openbanking between individuals via MyGuava application.

        Default list - empty list.
      items:
        type: string
        enum:
          - myguavaOpenbanking
    LiabilityShiftRequiredVariable:
      type: boolean
      nullable: true
      description: |
        Indicates whether only payment by token (without 3D-Secure authentication) with liability shift is allowed to the merchant. 
        * `true` - payments with defined liability on acquirer are prohibited.
        * `false` - payments with defined liability on acquirer are allowed.

        Default value - `true`.

        Table "Liability definition for token-based payment"

        | Card scheme | ECI | Acquirer Region | Issuer Region | Liability |
        |-------------|-----|-----------------|---------------|-----------|
        | VISA        | 05  | -               | -             | Issuer    |
        | VISA        | 07  | EU              | EU            | Issuer    |
        | VISA        | 07  | EU              | Other         | Acquirer  |
        | VISA        | 07  | Other           | EU            | Acquirer  |
        | VISA        | 07  | Other           | Other         | Acquirer  |
        | MASTERCARD  | -   | -               | -             | Issuer    |
    StandartPurchaseAllowedVariable:
      type: boolean
      description: Allows standart purchases for the merchant
    AccountFundingAllowedVariable:
      type: boolean
      description: Allows card account funding transactions for the merchant
    RecurringPurchaseAllowedVariable:
      type: boolean
      description: Allows recurring purchases for the merchant
    RefundWithOriginalPurchaseAllowedVariable:
      type: boolean
      description: Allows refunds for the merchant
    RequireValidPayerContactsInOrderVariable:
      type: array
      nullable: true
      description: |
        Indicates payer's contact information list that should be checked when order creating.
        * `ANY_ONE` - checks any payer's contact information that may be present

        Default list - empty list.
      items:
        type: string
        enum:
          - ANY_ONE
    CardScheme:
      type: string
      enum:
        - VISA
        - MASTERCARD
        - UNIONPAY
        - AMERICAN_EXPRESS
        - DINERS_CLUB
      description: Name of the card scheme
    CardBrand:
      type: string
      example: DCI
      description: |
        Brand of the card scheme.  
        For DINERS_CLUB acceptable values:  
        * `DCI` - Diners Club International
        * `DIS` - Discover Network
    BindingID:
      type: string
      description: Binding identifier
      example: 5f9adf5a-4796-4668-9285-07adf3c9a1aa
    BindingCtreationDate:
      type: string
      format: date-time
      description: Date and time when the binding is created.
    BindingLastUseDate:
      type: string
      format: date-time
      description: Date and time when the binding is used last time.
    BindingActivity:
      type: boolean
      description: Activity state
    ApplePayment:
      type: object
      description: The payment object corresponding to Apple documentation (https://developer.apple.com/documentation/passkit_apple_pay_and_wallet/apple_pay/payment_token_format_reference) received by `onpaymentauthorized` event (https://developer.apple.com/documentation/apple_pay_on_the_web/applepaysession/1778020-onpaymentauthorized)
    GooglePaymentData:
      type: object
      description: The payment data object corresponding to Google documentation (https://developers.google.com/pay/api/android/reference/request-objects#PaymentData) received by `loadPaymentData` task (https://developers.google.com/android/reference/com/google/android/gms/wallet/PaymentsClient#public-taskpaymentdata-loadpaymentdata-paymentdatarequest-request)
    CountryAlpha2Code:
      type: string
      example: GB
    BuildingNumber:
      type: string
      example: '1'
      description: Number of a building
    CityName:
      type: string
      example: London
    State:
      type: string
      example: BC
    Street:
      type: string
      example: Baker st
      description: Street name
    ZIPCode:
      type: string
      example: NW1
    AddressLine:
      type: string
      example: Baker st, 1
    AFTFieldsPattern:
      type: string
      pattern: ^[a-zA-Z0-9 !"#$%&'()*+,-./\:;<=>?@[]_`{|}~ÀÁÂÃÄÅÇÈÉÊËÌÍÎÏÑÒÓÔÕÖÙÚÛÜÝàáâãäåçèéêëìíîïñòóôõöùúûüýÿ]*$
    MaskedZIPCode:
      type: string
      example: N****
      description: Masked ZIP code
    MaskedAddressLine:
      type: string
      example: Bak****
      description: Masked address line
    CustomerID:
      type: string
      maxLength: 255
      example: '123456'
      description: Unique customer identification number (CIF)
    CustomerBusinessName:
      type: string
      example: LLC HappySun
      description: Business name of the customer
    CardAcceptorID:
      type: string
      example: '456789987'
      description: The unique identifier of merchant in a particular Card Scheme
    CardAcceptorName:
      type: string
      example: HappySun
      description: |
        The name of merchant in a particular card scheme.

        `Visa maxLength` - 25

        `Mastercard maxLength` - 22
    NotMaskedPayerFirstName:
      allOf:
        - $ref: '#/components/schemas/AFTFieldsPattern'
        - maxLength: 35
          type: string
          example: John
          description: |
            The first name of the payer.  
            Should be present for order with the `purpose` field in the `TRANSFER` value.
    NotMaskedPayerLastName:
      allOf:
        - $ref: '#/components/schemas/AFTFieldsPattern'
        - maxLength: 35
          type: string
          example: Doe
          description: |
            The last name of the payer.  
            Should be present for order with the `purpose` field in the `TRANSFER` value.
    FirstName:
      type: string
      example: John
      description: The first name.
    LastName:
      type: string
      example: Doe
      description: The last name.
    NotMaskedPayerDateOfBirth:
      type: string
      format: date
      description: Payer date of birth
    MaskedPayerFirstName:
      type: string
      example: J****
      description: The masked first name of the payer
    MaskedPayerLastName:
      type: string
      example: D****
      description: The masked last name of the payer
    MaskedPayerDateOfBirth:
      type: string
      example: 202*-**-01
      description: Masked payer date of birth
    NotMaskedPayeeFirstName:
      allOf:
        - $ref: '#/components/schemas/AFTFieldsPattern'
        - maxLength: 35
          type: string
          example: John
          description: |
            The first name of the payee.  
            Must be present for order with the `purpose` field in the `TRANSFER` value.
    NotMaskedPayeeLastName:
      allOf:
        - $ref: '#/components/schemas/AFTFieldsPattern'
        - maxLength: 35
          type: string
          example: Doe
          description: |
            The last name of the payee.  
            Must be present for order with the `purpose` field in the `TRANSFER` value.
    NotMaskedPayeeDateOfBirth:
      type: string
      format: date
      description: Payee date of birth
    MaskedPayeeFirstName:
      type: string
      example: J****
      description: The masked first name of the payee
    MaskedPayeeLastName:
      type: string
      example: D****
      description: The masked last name of the payee
    MaskedPayeeDateOfBirth:
      type: string
      example: 202*-**-01
      description: Masked payee date of birth
    CounterpartyAccountType:
      type: string
      enum:
        - CARD_ACCOUNT
        - IBAN
      description: The type of the counterparty account in AFT or OCT transactions
    NotMaskedCounterpartyAccountValue:
      type: string
      example: '5566331234567890'
      description: The value of the counterparty account in AFT or OCT transactions
    MaskedCounterpartyAccountValue:
      type: string
      example: 556633**7890
      description: The value of the counterparty account in AFT or OCT transactions
    UKPayerAccountNumber:
      type: string
      example: '12345678'
      description: Number of the payer's account in his institution
    InstitutionID:
      type: string
      example: modelo-sandbox
      description: Unique identifier of the payer's institution
    InstitutionName:
      type: string
      example: Modelo Sandbox
      description: Name of the payer's institution
    InstitutionIcon:
      type: string
      format: uri
      example: https://images.yapily.com/image/ce2bfdbf-1ae2-4919-ab7b-e8b3d5e93b36?size=0
      description: Link to institution icon
    InstitutionLogo:
      type: string
      format: uri
      example: https://images.yapily.com/image/ca502f24-d6df-4785-b4b8-1034b100af77?size=0
      description: Link to institution logo
    YapilyFeature:
      type: string
      example: CREATE_DOMESTIC_SINGLE_PAYMENT
      description: Institution feature in Yapily
    OpenbankingScheme:
      type: string
      enum:
        - FasterPayments
      description: The scheme by which the payment was made
    PayPalAccountId:
      type: string
      example: QYR5Z8XDVJNXQ
      description: Identifier of the PayPal account
    PayPalMerchantAccountLinkURL:
      type: string
      example: QYR5Z8XDVJNXQ
      format: uri
      description: URL for a merchant account linking confirmation
    PayPalSecretKey:
      type: string
      example: ASPl8IoyeX2U13y47qIXj5IMR8XFnAALsrcj9fWL-QtZXl_U9RVEgRrB7Q5Qs042-znR6Wr2BMOOs9K5
      description: PayPal secret key for requesting the session token
    PayPalClientID:
      type: string
      example: EO4muFEYKKJneMODXYnXiFNqXws8_o3FhGk53-7vJRWdhUKqXGjoGIlBLR6IL6suKa7uwg71eKdkzCfe
      description: PayPal client identifier
    ClickToPayOrganizationID:
      type: string
      example: a8acc071-5f78-4f8c-b9fd-cf023dfab2e6
      description: Identifier of the organization
    ClickToPayCertificateID:
      type: string
      example: 5f9adf5a-4796-4668-9285-07adf3c9a1aa
      description: Identifier of the certificate
    MasterCardCertificateName:
      type: string
      example: Some name
      description: Name of the certificate
    MasterCardConsumerKey:
      type: string
      example: olz9MnrUIiLI1OnYYsuUZ17CBnxIekH_InwsBpD8bc331af6!f5f9b32bd5ba44869be6e6744bf47aeb0000000000000000
      description: Consumer key for OAuth in ClickToPay
    MasterCardBinaryCertificate:
      type: string
      format: binary
      description: Certificate file
    MasterCardKeyPassword:
      type: string
      example: rl1b0kAyVZpFEahwMaC3
      description: Password for access to certificate
    MasterCardCertificateCreationDate:
      type: string
      format: date-time
      description: Date of certificate creation
    MasterCardCertificateExpirationDate:
      type: string
      format: date-time
      description: Date of certificate expiration
    ClickToPayCertificateStatus:
      type: string
      enum:
        - ENABLED
        - DISABLED
      description: Status of the certificate
    ClickToPayDecryptionKeyAlias:
      type: string
      example: Some alias
      description: Alias of the decryption key used when key has been generated
    ClickToPayCorrelationID:
      type: string
      description: Identifier of a checkout session provided by Click to Pay. A new checkout session will be initiated if not provided.
      example: 860cf27e-699d-4071-891c-3902a7406760
    ClickToPayFlowID:
      type: string
      description: Provided by Click to Pay. Helps in routing and session affinity. Ensures requests by the same client are directed to the same server.
      example: 34F4A04B.B9EF8486-E8C1-44F3-88DC-D4F516A354DC.1587777300
    ClickToPayMerchantTransactionId:
      type: string
      description: Merchant Checkout Transaction Identifier which is returned in the checkout session for making a payment.
      example: 0a4e0d3.34f4a04b.390515165b8f87a5a0694cd752752ff6717fce21
    IsCryptocurrencyPayerConsentReceived:
      type: boolean
      description: Indicates wether the payer's consent to terms of payment is received
    PaymentResultEmailNotificationIsNeeded:
      type: boolean
      description: Indicates the payer wants to receive additional notifications by payment
    MasterCardICA:
      type: string
      description: Interbank Card Association number of acquirer in MasterCard card scheme
      example: '23407'
    MasterCardRoutingEndpoint:
      type: string
      maxLength: 7
      description: The seven-digit routing endpoint of Mastercard IPM
      example: '1234567'
    PaymentMethod:
      type: string
      description: Payment method name
      enum:
        - PAYMENT_CARD
        - PAYMENT_CARD_BINDING
        - APPLE_PAY
        - GOOGLE_PAY
        - BANK_ACCOUNT
        - CLICK_TO_PAY
        - CRYPTOCURRENCY
        - PAYPAL_WALLET
    TenantID:
      type: string
      example: '1234'
      description: Tenant identifier
    SubdivisionID:
      type: string
      example: '38573625'
      description: Subdivision identifier
    ProcessingProfileID:
      type: string
      example: 5f9adf5a-4796-4668-9285-07adf3c9a1aa
      description: Processing profile identifier
    ProcessingProfileName:
      type: string
      description: Name of a processing profile
      example: Profile of an E-commerce merchant
    ProcessingProfileDescription:
      type: string
      description: Short description of processing profile
      example: This profile is used for processing payments with 3D-Secure authentication
    TransactionType:
      type: string
      description: Name of transaction type
      enum:
        - PURCHASE
        - REFUND
    ProcessEngine:
      type: string
      description: Type of processing engine
      enum:
        - CAMUNDA
    EngineProcessName:
      type: string
      example: PaymentProcess
      description: Processing scenario name
    ReversalEngineProcessName:
      type: string
      example: ReversalProcess
      description: Reversal scenario name
    ProcessingProfileVariables:
      type: object
      description: |
        Block of processing profile variables.  
        Each variable is used for some business logic behavior.
      properties:
        sidForIs:
          $ref: '#/components/schemas/SIDForIs'
        loginForIs:
          $ref: '#/components/schemas/LoginForIs'
        openbankingUKDomesticAccountNumber:
          $ref: '#/components/schemas/OpenbankingUKDomesticAccountNumber'
        openbankingUKDomesticSortCode:
          $ref: '#/components/schemas/OpenbankingUKDomesticSortCode'
        shortPaymentPageUrlRequestAllowed:
          $ref: '#/components/schemas/ShortPaymentPageUrlRequestAllowedVariable'
        paymentPageUrlPresent:
          $ref: '#/components/schemas/PaymentPageUrlPresentVariable'
        refundBeforePayoutEnabled:
          $ref: '#/components/schemas/RefundBeforePayoutEnabledVariable'
        allowedCustomProperties:
          $ref: '#/components/schemas/AllowedCustomPropertiesVariable'
        liabilityShiftRequired:
          $ref: '#/components/schemas/LiabilityShiftRequiredVariable'
        standartPurchaseAllowed:
          $ref: '#/components/schemas/StandartPurchaseAllowedVariable'
        standartAccountFundingAllowed:
          $ref: '#/components/schemas/AccountFundingAllowedVariable'
        recurringPurchaseAllowed:
          $ref: '#/components/schemas/RecurringPurchaseAllowedVariable'
        refundWithOriginalPurchaseAllowed:
          $ref: '#/components/schemas/RefundWithOriginalPurchaseAllowedVariable'
        requireValidPayerContactsInOrder:
          $ref: '#/components/schemas/RequireValidPayerContactsInOrderVariable'
        allowedCurrencies:
          type: array
          nullable: true
          description: |
            List of currencies available for an order registration.  
            Default list - [EUR, GBP, USD]
          items:
            $ref: '#/components/schemas/Currency'
        allowedPaymentMethods:
          type: array
          nullable: true
          description: |
            List of payment methods available by default to the payer to pay for orders from the corresponding merchant.  
            For a specific order, this list can be shortened depending on the order parameters, but cannot be expanded.  
            Default list - [PAYMENT_CARD, PAYMENT_CARD_BINDING, APPLE_PAY, GOOGLE_PAY, BANK_ACCOUNT]
          items:
            $ref: '#/components/schemas/PaymentMethod'
        allowedCardSchemes:
          type: array
          nullable: true
          description: |
            List of card schemes available by default to the payer to pay for orders from the corresponding merchant.  
            For a specific order, this list can be shortened depending on the order parameters, but cannot be expanded.  
            Default list - [VISA, MASTERCARD]
          items:
            $ref: '#/components/schemas/CardScheme'
        allowedServiceChannels:
          type: array
          nullable: true
          description: |
            List of service channels available to merchant.  
            Default list - [E-COMM]
          items:
            $ref: '#/components/schemas/ServiceChannel'
        allowedCardProductCategories:
          type: array
          nullable: true
          description: |
            List of buniness services available to merchant.  
            Default list - [DEBIT, PREPAID, CREDIT]
          items:
            $ref: '#/components/schemas/CardProductCategory'
        allowedCardIssuerCountries:
          type: array
          nullable: true
          description: |
            List of countries affiliated to cards available for the order payment.
          items:
            $ref: '#/components/schemas/CountryAlpha2Code'
        allowedCryptoNetworks:
          type: array
          nullable: true
          description: |
            List of crypto networks affiliated to cryptocurrency available for the order payment.
          items:
            $ref: '#/components/schemas/CryptoNetworkCurrencyPair'
        allowedServiceSubChannels:
          type: array
          nullable: true
          description: |
            List of available service subchannels for the order registration.
            * `E-COMM_API` - using the E-commerce Gateway API
            * `ECWID` - using the Ecwid e-commerce platform
            * `MAGENTO` - using the Magento e-commerce platform
            * `WOOCOMMERCE` - using the WordPress (with WooCommerce plug-in) e-commerce platform
            * `XERO` - using the Xero invoicing platform
            * `PRESTASHOP` - using the Prestashop e-commerce platform
            * `SHOPIFY` - using the Shopify e-commerce platform
            * `PAYMENT_LINK` - using the PayByLink

            Default list - ['PAYMENT_LINK', 'ECWID', 'MAGENTO', 'WOOCOMMERCE', 'PAYMENT_LINK', 'XERO', 'PRESTASHOP', 'SHOPIFY', 'E-COMM_API']
          items:
            $ref: '#/components/schemas/ServiceSubChannel'
    ProcessingProfileProcessVariables:
      type: object
      properties:
        someKey1:
          type: string
          example: Some value 1
        someKey2:
          type: string
          example: Some value 2
        someKeyN:
          type: string
          example: Some value N
    ProcessingProfileActivationDate:
      type: string
      format: date-time
      description: Date and time when the processing profile will be activated
    PaymentPageConfigName:
      type: string
      description: Name of a payment page configuration
      example: Some name
    PaymentPageConfigID:
      type: string
      description: Identifier of a payment page configuration
      example: 5f9adf5a-4796-4668-9285-07adf3c9a1aa
    PaymentPageConfigCreationDate:
      type: string
      format: date-time
      description: Date of a payment page config creation
    PaymentPageStyles:
      type: object
      properties:
        someKey1:
          type: string
          example: Some value 1
        someKey2:
          type: object
          properties:
            key:
              type: string
              example: Value
        someKeyN:
          type: string
          example: Some value N
    PaymentPageColor:
      type: string
      description: Color HEX code
      example: '#00CF00'
    PaymentPageRadius:
      type: string
      description: Radius of a payment page style
      enum:
        - NONE
        - SMALL
        - MEDIUM
        - LARGE
        - FULL
    ErrorField:
      type: string
      example: paymentMethod.pan
      description: Name of invalid field
    PaymentLockReason:
      type: string
      description: |
        Reason of making payment unavailability by the provided payment method.  
        Card using restrictions for making payment by the order:  
        * 'UNSUPPORTED_CARD_SCHEME' - card is affiliated with resticted card scheme
        * 'UNSUPPORTED_COUNTRY' - card is affiliated with restricted country
        * 'CREDIT_CARD_RESTRICTED' - credit cards are restricted
      enum:
        - UNSUPPORTED_CARD_SCHEME
        - UNSUPPORTED_COUNTRY
        - CREDIT_CARD_RESTRICTED
    SuccessResultMessage:
      type: string
      description: Financial transaction result message
      example: Successfully completed
    UnsuccessResultMessage:
      type: string
      description: Financial transaction result message
      example: Not sufficient funds
    SuccessResultCode:
      type: string
      description: Financial transaction result code
      example: '0'
    UnsuccessResultCode:
      type: string
      description: Financial transaction result code. Not provides for requests by session token.
      example: '51'
    Reason:
      type: string
      description: Request reason
      example: Some reason
    PageNumber:
      type: number
      description: Page number, starting from 0
      example: 0
    PageSize:
      type: number
      description: Page size
      example: 20
    TotalPages:
      type: number
      description: Number of pages
      example: 10
    TotalCount:
      type: number
      description: Total number of records found
      example: 100
    OrderDefaultsPriority:
      type: number
      description: Priority of the order default values
      example: 100
    WebhookID:
      type: string
      example: 5f9adf5a-4796-4668-9285-07adf3c9a1aa
      description: Internal webhook identifier.
  parameters:
    Request-ID:
      name: Request-ID
      in: header
      description: Identifier that is used for request tracing
      required: true
      schema:
        type: string
        example: 5f9adf5a-4796-4668-9285-07adf3c9a1aa
    Merchant-ID:
      name: Merchant-ID
      in: header
      description: |
        Merchant identifier.

        In the case, when this header is present and the `merchantId` field in the message body is present too, their values must be equal.
      schema:
        $ref: '#/components/schemas/MerchantID'
    Order-ID:
      name: Order-ID
      in: header
      description: Order identifier
      schema:
        $ref: '#/components/schemas/OrderID'
    Tenant-ID:
      name: Tenant-ID
      required: true
      in: header
      description: |
        Tenant identifier.

        In the case, when this header is present and the `tenanId` field in the message body is present too, their values must be equal.
      schema:
        $ref: '#/components/schemas/TenantID'
    Subdivision-ID:
      name: Subdivision-ID
      in: header
      description: |
        Subdivision identifier.

        In the case, when this header is present and the `subdivisionId` field in the message body is present too, their values must be equal.
      schema:
        $ref: '#/components/schemas/SubdivisionID'
    Is-SuperAdmin:
      name: Is-SuperAdmin
      in: header
      description: Allows full access to all objects is the system
      schema:
        type: boolean
        example: 'true'
    API-Version:
      name: API-Version
      in: header
      description: API version used by the requester
      schema:
        type: string
        example: 1.0.0
    Accept-Language:
      name: Accept-Language
      in: header
      description: Indicates the natural language and locale that the client prefers.
      schema:
        type: string
        example: en-US
    Webhook-Timestamp:
      name: Webhook-Timestamp
      in: header
      description: Time when signature was created
      schema:
        type: string
        format: date-time
    Webhook-Signature:
      name: Webhook-Signature
      in: header
      description: Signature value (can be multiple. signatures count = keys count for merchant)
      schema:
        type: string
        example: 5257a869e7ecebeda32affa62cdca3fa51cad7e77a0e56ff536d0ce8e108d8bd, 6ffbb59b2300aae63f272406069a9788598b792a944a07aba816edb039989a39
    Transaction-Correlation-ID:
      name: Correlation-ID
      in: header
      description: Identifier of the message which can be used in other requests as the original message correlation identifier. Must be unique for last 24 hours in the provided visibility area
      schema:
        allOf:
          - $ref: '#/components/schemas/RequestCorrelationID'
          - description: Identifier of the message which can be used in other requests as the original message correlation identifier. Must be unique for last 24 hours in the provided visibility area
    Order-Correlation-ID:
      name: Correlation-ID
      in: header
      description: Identifier of the message which can be used in other requests as the original message correlation identifier. Must be unique for merchant
      schema:
        allOf:
          - $ref: '#/components/schemas/RequestCorrelationID'
          - description: Identifier of the message which can be used in other requests as the original message correlation identifier. Must be unique for merchant
    orderId:
      name: orderId
      in: path
      required: true
      description: Internal order identifier
      schema:
        $ref: '#/components/schemas/OrderID'
    orderCorrelationId:
      name: correlationId
      in: path
      required: true
      description: Identifier of the message which can be used in other requests as the original message correlation identifier. Must be unique for merchant
      schema:
        allOf:
          - $ref: '#/components/schemas/RequestCorrelationID'
          - description: Identifier of the message which can be used in other requests as the original message correlation identifier. Must be unique for merchant
    paymentId:
      name: paymentId
      in: path
      required: true
      description: Internal transaction identifier
      schema:
        $ref: '#/components/schemas/TransactionID'
    merchantId:
      name: merchantId
      in: path
      required: true
      description: Merchant identifier
      schema:
        $ref: '#/components/schemas/MerchantID'
    ecommerceTerminalId:
      name: terminalId
      in: path
      required: true
      description: Identifier of the e-commerce terminal
      schema:
        $ref: '#/components/schemas/EcommerceTerminalID'
    bindingId:
      name: bindingId
      in: path
      required: true
      description: Binding identifier
      schema:
        $ref: '#/components/schemas/BindingID'
    profileId:
      name: profileId
      in: path
      required: true
      description: Processing profile identifier
      schema:
        $ref: '#/components/schemas/ProcessingProfileID'
    paymentLinkId:
      name: paymentLinkId
      in: path
      required: true
      description: Payment link identifier
      schema:
        $ref: '#/components/schemas/PaymentLinkID'
    institutionId:
      name: institutionId
      in: path
      required: true
      description: Institution identifier
      schema:
        $ref: '#/components/schemas/InstitutionID'
    applepayCsrId:
      name: csrId
      in: path
      required: true
      description: CSR identifier
      schema:
        $ref: '#/components/schemas/ApplePayCSRID'
    processingCertificateId:
      name: processingCertificateId
      in: path
      required: true
      description: CSR identifier
      schema:
        $ref: '#/components/schemas/AppleProcessingCertificateID'
    dpaId:
      name: dpaId
      in: path
      required: true
      description: Identifier of DPA registered in the click to pay serice
      schema:
        $ref: '#/components/schemas/DPAID'
    decryptionCertificateId:
      name: decryptionCertificateId
      in: path
      required: true
      description: Identifier of the certificate
      schema:
        $ref: '#/components/schemas/ClickToPayCertificateID'
    abuFileId:
      name: abuFileId
      in: path
      required: true
      description: Identifier of the merchant registration or deletion in the MasterCard Account Billing Updater file
      schema:
        $ref: '#/components/schemas/ABUFileID'
    paymentPageConfigId:
      name: paymentPageConfigId
      in: path
      required: true
      description: Identifier of a payment page configuration
      schema:
        $ref: '#/components/schemas/PaymentPageConfigID'
    merchant-included:
      name: merchant-included
      in: query
      required: false
      description: Indicates that merchant information must be included to the response message
      schema:
        type: boolean
    transactions-included:
      name: transactions-included
      in: query
      required: false
      description: Indicates that transations information must be included to the response message
      schema:
        type: boolean
    payment-requirements-included:
      name: payment-requirements-included
      in: query
      required: false
      description: Indicates that payment requirements information must be included to the response message. Specifying a parameter can have a dramatic impact on query performance.
      schema:
        type: boolean
    disabled-certificates-included:
      name: disabled-certificates-included
      in: query
      required: false
      description: Indicates that `INACTIVE` certificates will be present in response message
      schema:
        type: boolean
    profile-config-history-included:
      name: profile-config-history-included
      in: query
      required: false
      description: Indicates that full processing profile change history will be present in response message
      schema:
        type: boolean
    page:
      name: page
      in: query
      description: Page number, starting from 0
      schema:
        $ref: '#/components/schemas/PageNumber'
    size:
      name: size
      in: query
      description: Page size
      schema:
        $ref: '#/components/schemas/PageSize'
    binding-sort:
      name: sort
      in: query
      description: |
        List sorting rule. You can add the [,asc|desc] option to specify the sort direction.

        Available filtering values: `lastUseDate`, `creationDate`
      schema:
        type: string
        example: creationDate,desc
    payment-link-sort:
      name: sort
      in: query
      description: |
        List sorting rule. You can add the [,asc|desc] option to specify the sort direction.

        Available filtering values: `creationDate`
      schema:
        type: string
        example: creationDate,desc
    institution-sort:
      name: sort
      in: query
      description: |
        List sorting rule. You can add the [,asc|desc] option to specify the sort direction.

        Available filtering values: `name`
      schema:
        type: string
        example: name
    applepay-csr-sort:
      name: sort
      in: query
      description: |
        List sorting rule. You can add the [,asc|desc] option to specify the sort direction.

        Available filtering values: `creationDate`
      schema:
        type: string
        example: creationDate,desc
    applepay-processing-certificate-sort:
      name: sort
      in: query
      description: |
        List sorting rule. You can add the [,asc|desc] option to specify the sort direction.

        Available filtering values: `creationDate`, `expirationDate`
      schema:
        type: string
        example: creationDate,desc
    abu-merchant-sort:
      name: sort
      in: query
      description: |
        List sorting rule. You can add the [,asc|desc] option to specify the sort direction.

        Available filtering values: `creationDate`
      schema:
        type: string
        example: creationDate,desc
    abu-registration-file-sort:
      name: sort
      in: query
      description: |
        List sorting rule. You can add the [,asc|desc] option to specify the sort direction.

        Available filtering values: `creationDate`
      schema:
        type: string
        example: creationDate,desc
    abu-merchant-registration-queue-sort:
      name: sort
      in: query
      description: |
        List sorting rule. You can add the [,asc|desc] option to specify the sort direction.

        Available filtering values: `creationDate`
      schema:
        type: string
        example: creationDate,desc
    filter-payer-id:
      name: payer-id
      in: query
      description: Identifier of payer
      schema:
        $ref: '#/components/schemas/PayerID'
    filter-binding-id:
      name: id
      in: query
      description: Binding identifier
      schema:
        type: array
        items:
          $ref: '#/components/schemas/BindingID'
    filter-merchant-id:
      name: merchant-id
      in: query
      description: Merchant identifier
      schema:
        $ref: '#/components/schemas/MerchantID'
    filter-merchant-id-list:
      name: merchant-id
      in: query
      description: Merchant identifier
      schema:
        type: array
        items:
          $ref: '#/components/schemas/MerchantID'
    filter-subdivision-id:
      name: subdivision-id
      in: query
      description: Subdivision identifier
      schema:
        $ref: '#/components/schemas/SubdivisionID'
    filter-tenant-id:
      name: tenant-id
      in: query
      description: Tenant identifier
      schema:
        $ref: '#/components/schemas/TenantID'
    filter-applepay-csr-id:
      name: id
      in: query
      description: Identifier of CSR
      schema:
        type: array
        items:
          $ref: '#/components/schemas/ApplePayCSRID'
    filter-dpa-status:
      name: status
      in: query
      description: Status of the DPA
      schema:
        type: array
        items:
          $ref: '#/components/schemas/DPAStatus'
    filter-activity:
      name: activity
      in: query
      description: Binding activity
      schema:
        type: boolean
    filter-card-scheme:
      name: card-scheme
      in: query
      description: Card scheme
      schema:
        $ref: '#/components/schemas/CardScheme'
    filter-country:
      name: country
      in: query
      description: ISO 3166-1 alpha-2 country code.
      schema:
        $ref: '#/components/schemas/CountryAlpha2Code'
    filter-currency:
      name: currency
      in: query
      description: ISO 4217 Alpha 3 currency code
      schema:
        $ref: '#/components/schemas/Currency'
    filter-payment-link-name:
      name: name-includes
      in: query
      description: Payment link name (or part of payment link name). All payment links containing this substring in their names will be found
      schema:
        $ref: '#/components/schemas/PaymentLinkName'
    filter-payment-link-id:
      name: id
      in: query
      description: Payment link identifier
      schema:
        type: array
        items:
          $ref: '#/components/schemas/PaymentLinkID'
    filter-order-status:
      name: status
      in: query
      description: |
        Status of order.

        * `CREATED` - order is registered. No payment attempts yet.
        * `PAID` - payment for order is completed successfully.
        * `DECLINED` - payment for order is declined.
        * `PARTIALLY_REFUNDED` - part of amount of the order is refunded.
        * `REFUNDED` - full amount of the order is refunded.
        * `CANCELLED` - payment for the order is reversed.
        * `EXPIRED` - order is expired.
        * `RECURRENCE_ACTIVE` - order is ready to recurrence payments.
        * `RECURRENCE_CLOSED` - order is not ready to recurrence payments.
      schema:
        $ref: '#/components/schemas/OrderStatus'
    filter-payment-link-date-from:
      name: date-from
      in: query
      description: Starting point of the creation date period
      schema:
        type: string
        format: date-time
    filter-payment-link-date-to:
      name: date-to
      in: query
      description: Ending point of the creation date period
      schema:
        type: string
        format: date-time
    filter-order-min-amount:
      name: min-amount
      in: query
      description: |
        Min order amount in base units of corresponding currency.  
        For example:  
        * EUR is decimal currency (1 euro = 100 eurocent). 1 euro and 25 eurocents is 1.25

        * MGA is non-decimal currency (1 ariary = 5 iraimbilanja). 1 ariary and 3 iraimbilanja is 1.3

        * JPY haven't subunits. 1 yen is just 1
      schema:
        $ref: '#/components/schemas/BaseUnitsAmount'
    filter-order-max-amount:
      name: max-amount
      in: query
      description: |
        Max order amount in base units of corresponding currency.  
        For example:  
        * EUR is decimal currency (1 euro = 100 eurocent). 1 euro and 25 eurocents is 1.25

        * MGA is non-decimal currency (1 ariary = 5 iraimbilanja). 1 ariary and 3 iraimbilanja is 1.3

        * JPY haven't subunits. 1 yen is just 1
      schema:
        $ref: '#/components/schemas/BaseUnitsAmount'
    filter-rrn:
      name: rrn
      in: query
      description: Reference Retrieval Number
      schema:
        $ref: '#/components/schemas/RRN'
    filter-applepay-processing-certificate-id:
      name: id
      in: query
      description: ApplePay processing certificate identifier
      schema:
        type: array
        items:
          $ref: '#/components/schemas/AppleProcessingCertificateID'
    filter-applepay-processing-certificate-activity:
      name: activity
      in: query
      description: ApplePay processing certificate activity state
      schema:
        $ref: '#/components/schemas/AppleProcessingCertificateActivity'
    filter-applepay-processing-certificate-creation-date-from:
      name: creation-date-from
      in: query
      description: Starting point of the creation date period
      schema:
        type: string
        format: date-time
    filter-applepay-processing-certificate-creation-date-to:
      name: creation-date-to
      in: query
      description: Ending point of the creation date period
      schema:
        type: string
        format: date-time
    filter-applepay-processing-certificate-expiry-date-from:
      name: expiry-date-from
      in: query
      description: Starting point of the expiration date period
      schema:
        type: string
        format: date-time
    filter-applepay-processing-certificate-expiry-date-to:
      name: expiry-date-to
      in: query
      description: Ending point of the expiration date period
      schema:
        type: string
        format: date-time
    filter-applepay-csr-name:
      name: name-includes
      in: query
      description: CSR name (or part of CSR name). All CSRs containing this substring in their names will be found
      schema:
        $ref: '#/components/schemas/ApplePayCSRName'
    filter-applepay-certificate-type:
      name: certificate-type
      in: query
      description: Certificate type name
      schema:
        $ref: '#/components/schemas/ApplePayCertificateType'
    filter-abu-merchant-history-included:
      name: history-included
      in: query
      required: false
      description: Indicates that full ABU merchant registration history will be present in response message
      schema:
        type: boolean
    filter-abu-registration-file-status:
      name: status
      in: query
      description: |
        Status of MasterCard Account Billing Updater batch  
        * `SENT` - Registration file is sent to MasterCard. Response file is not received.
        * `PROCESSED` - Response file is received.
      schema:
        $ref: '#/components/schemas/ABUMerchantRegistrationFileStatus'
    filter-abu-registration-file-name:
      name: name-includes
      in: query
      description: Name or part of name of the merchant registration or deletion in the MasterCard Account Billing Updater file
      schema:
        $ref: '#/components/schemas/ABUFileName'
    filter-card-acceptor-id:
      name: card-acceptor-id
      in: query
      description: The unique identifier of merchant in a particular Card Scheme
      schema:
        $ref: '#/components/schemas/CardAcceptorID'
    filter-abu-merchant-creation-date-from:
      name: creation-date-from
      in: query
      description: Starting point of the merchant creation date period
      schema:
        type: string
        format: date-time
    filter-abu-merchant-creation-date-to:
      name: creation-date-to
      in: query
      description: Ending point of the merchant creation date period
      schema:
        type: string
        format: date-time
    filter-abu-merchant-action:
      name: action
      in: query
      description: |
        Action with merchant in MasterCard Account Billing Updater  
        * `ADD` - registration
        * `DELETE` - deletion
      schema:
        $ref: '#/components/schemas/ABUMerchantAction'
    filter-abu-merchant-registration-status:
      name: registration-status
      in: query
      description: |
        Status of merchant registration in MasterCard Account Billing Updater  
        * `INITIATED` - merchant has been added to registration queue
        * `IN_PROGRESS` - merchant has been added to registration batch
        * `PROCESSED` - merchant has been processed successfully
        * `REJECTED` - merchant has been processed unsuccessfully
      schema:
        $ref: '#/components/schemas/ABUMerchantAfterRegistrationStatus'
    filter-abu-merchant-error-codes:
      name: error-codes
      in: query
      description: |
        List of ABU merchant processing error codes  
        * `300` - Invalid Acquirer Identifier
        * `301` - Invalid Request Date
        * `302` - Invalid Merchant ID
        * `303` - Invalid Merchant Name
        * `304` - Invalid Request Type
        * `305` - Invalid MCC Code
        * `307` - Trying to delete a merchant that does not exist
        * `404` - Missing merchant in response file
      schema:
        $ref: '#/components/schemas/ABUMerchantRegistrationErrorCodes'
    callback-url:
      name: callback-url
      in: query
      description: Callback URL
      schema:
        $ref: '#/components/schemas/CallbackURL'
  headers:
    Allow:
      description: This header lists the set of methods supported by a resource
      required: true
      example: POST, GET
      schema:
        type: string
  responses:
    '405':
      description: Method is not allowed
      headers:
        Allow:
          $ref: '#/components/headers/Allow'
    '415':
      description: Unsupported media type
    '500':
      description: Internal error during request processing
    404_order:
      description: Order is not found
    404_payment:
      description: Payment is not found
    404_payment_link:
      description: Payment link is not found
    404_binding:
      description: Binding is not found
    404_profile:
      description: Processing profile is not found
    404_merchant:
      description: Merchant is not found
    404_ecommerce_terminal:
      description: Terminal is not found
    404_csr:
      description: CSR is not found
    404_applepay_processing_certificate:
      description: ApplePay payment processing certificate is not found
    404_applepay_identity_certificate:
      description: ApplePay identity certificate is not found
    404_googlepay_global_config:
      description: GooglePay global config is not found
    404_applepay_pseudo_psp_config:
      description: ApplePay pseudo PSP config is not found
    404_dpa:
      description: DPA is not found
    404_clicktopay_decryption_certificate:
      description: ClickToPay decryption certificate is not found
    404_registration_batch:
      description: Registration batch is not found
    404_abu_file:
      description: File is not found
